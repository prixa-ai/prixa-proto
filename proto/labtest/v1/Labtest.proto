syntax = "proto3";

package prixa.user.v1;
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";
import "proto/diagnostic/v1/Diagnostic.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    host: "engine2.prixa.ai";
    info: {
        title: "Prixa Labtest Service API";
        version: "1.0";
        contact: {
            name: "Prixa Tech";
            url: "https://github.com/prixa-ai/prixa-proto";
            email: "tech@prixa.com";
        };
        license: {
            name: "Prixa License";
            url: "https://github.com/prixa-ai/prixa-proto/blob/master/LICENSE.txt";
        };
    };
    schemes: HTTP;
    schemes: HTTPS;
    consumes: "application/json";
    produces: "application/json";
    security_definitions: {
        security: {
            key: "ApiKeyAuth";
            value: {
                type: TYPE_API_KEY;
                in: IN_HEADER;
                name: "X-Prixa-API-Key";
            }
        }
        security: {
            key: "Bearer";
            value: {
                type: TYPE_API_KEY;
                in: IN_HEADER;
                name: "Authorization";
            }
        }
    }
    security: {
        security_requirement: {
            key: "ApiKeyAuth";
            value: {}
        }
    }
};

service LabtestService {
    rpc GetLabtestCoupon (google.protobuf.Empty) returns (GetLabtestCouponResponse) {
        option (google.api.http) = {
            get: "/api/v1/labtest/coupon"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            security: {
                security_requirement: {
                    key: "ApiKeyAuth";
                    value: {}
                }
                security_requirement: {
                    key: "Bearer";
                    value: {}
                }
            }
        };
    }
}

message GetLabtestCouponResponse {
    string status = 1;
    string couponCode = 2;
}