// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/myprotection/v1/MyProtection.proto

package prixa_myprotection_v1

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *PostStatusTransactionRequestData) Validate() error {
	return nil
}
func (this *GetListTransactionData) Validate() error {
	if this.AccessToken == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("AccessToken", fmt.Errorf(`value '%v' must not be an empty string`, this.AccessToken))
	}
	return nil
}
func (this *TransactionResponseData) Validate() error {
	if this.Transaction != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Transaction); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Transaction", err)
		}
	}
	return nil
}
func (this *StatusTransactionData) Validate() error {
	for _, item := range this.TransactionsData {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("TransactionsData", err)
			}
		}
	}
	return nil
}
func (this *TransactionData) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.Cart != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Cart); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Cart", err)
		}
	}
	return nil
}
func (this *TransactionCartData) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	for _, item := range this.MemberProducts {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("MemberProducts", err)
			}
		}
	}
	return nil
}
func (this *TransactionMemberProductData) Validate() error {
	return nil
}
func (this *MemberData) Validate() error {
	return nil
}
func (this *GetProductPlanResponseData) Validate() error {
	if this.GetListTransactionData != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.GetListTransactionData); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("GetListTransactionData", err)
		}
	}
	return nil
}
func (this *ProductPlanData) Validate() error {
	if this.Plan != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Plan); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Plan", err)
		}
	}
	return nil
}
func (this *PlanData) Validate() error {
	for _, item := range this.ProtectionLists {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("ProtectionLists", err)
			}
		}
	}
	for _, item := range this.OutpatientLists {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("OutpatientLists", err)
			}
		}
	}
	return nil
}
func (this *PlanOutPatientData) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	return nil
}
func (this *ProtectionData) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	return nil
}
func (this *SubmitJalanPrimaRequestData) Validate() error {
	if this.StartDate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.StartDate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("StartDate", err)
		}
	}
	if this.EndDate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.EndDate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("EndDate", err)
		}
	}
	if this.Dob != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Dob); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Dob", err)
		}
	}
	for _, item := range this.Members {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Members", err)
			}
		}
	}
	return nil
}
func (this *GetPremiumStepRequestData) Validate() error {
	if this.StartDate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.StartDate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("StartDate", err)
		}
	}
	if this.EndDate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.EndDate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("EndDate", err)
		}
	}
	for _, item := range this.Members {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Members", err)
			}
		}
	}
	return nil
}
func (this *GetPremiumStepResponseData) Validate() error {
	if this.PremiumData != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.PremiumData); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("PremiumData", err)
		}
	}
	return nil
}
func (this *GetPremiumStep2RequestData) Validate() error {
	if this.StartDate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.StartDate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("StartDate", err)
		}
	}
	if this.EndDate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.EndDate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("EndDate", err)
		}
	}
	for _, item := range this.Members {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Members", err)
			}
		}
	}
	return nil
}
func (this *GetPremiumStep2ResponseData) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *PremiumStepData) Validate() error {
	for _, item := range this.Benefits {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Benefits", err)
			}
		}
	}
	if this.Outpatient != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Outpatient); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Outpatient", err)
		}
	}
	for _, item := range this.OutPatientBenefit {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("OutPatientBenefit", err)
			}
		}
	}
	if this.StaticBenefit != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.StaticBenefit); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("StaticBenefit", err)
		}
	}
	return nil
}
func (this *StaticBenefitData) Validate() error {
	if this.Outpatient != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Outpatient); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Outpatient", err)
		}
	}
	return nil
}
func (this *StaticBenefitOutPatientData) Validate() error {
	return nil
}
func (this *BenefitData) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	for _, item := range this.Pivot {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Pivot", err)
			}
		}
	}
	return nil
}
func (this *PivotData) Validate() error {
	return nil
}
func (this *OutPatientData) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.Updated_At != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Updated_At); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Updated_At", err)
		}
	}
	for _, item := range this.Benefits {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Benefits", err)
			}
		}
	}
	return nil
}
func (this *OutPatientBenefitData) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	if this.Pivot != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Pivot); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Pivot", err)
		}
	}
	return nil
}
