// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0-devel
// 	protoc        v3.11.4
// source: proto/partnerapp/v1/PartnerApplication.proto

package prixa_partnerapplication_v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PartnerAppResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status    string               `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	SecretKey string               `protobuf:"bytes,4,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *PartnerAppResponseData) Reset() {
	*x = PartnerAppResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartnerAppResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartnerAppResponseData) ProtoMessage() {}

func (x *PartnerAppResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartnerAppResponseData.ProtoReflect.Descriptor instead.
func (*PartnerAppResponseData) Descriptor() ([]byte, []int) {
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP(), []int{0}
}

func (x *PartnerAppResponseData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PartnerAppResponseData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PartnerAppResponseData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PartnerAppResponseData) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *PartnerAppResponseData) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PartnerAppResponseData) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreatePartnerApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PartnerId string `protobuf:"bytes,2,opt,name=partnerId,proto3" json:"partnerId,omitempty"`
}

func (x *CreatePartnerApplicationRequest) Reset() {
	*x = CreatePartnerApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePartnerApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePartnerApplicationRequest) ProtoMessage() {}

func (x *CreatePartnerApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePartnerApplicationRequest.ProtoReflect.Descriptor instead.
func (*CreatePartnerApplicationRequest) Descriptor() ([]byte, []int) {
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePartnerApplicationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePartnerApplicationRequest) GetPartnerId() string {
	if x != nil {
		return x.PartnerId
	}
	return ""
}

type CreatePartnerApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *PartnerAppResponseData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreatePartnerApplicationResponse) Reset() {
	*x = CreatePartnerApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePartnerApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePartnerApplicationResponse) ProtoMessage() {}

func (x *CreatePartnerApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePartnerApplicationResponse.ProtoReflect.Descriptor instead.
func (*CreatePartnerApplicationResponse) Descriptor() ([]byte, []int) {
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePartnerApplicationResponse) GetData() *PartnerAppResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeletePartnerApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerId     string `protobuf:"bytes,1,opt,name=partnerId,proto3" json:"partnerId,omitempty"`
	ApplicationId string `protobuf:"bytes,2,opt,name=applicationId,proto3" json:"applicationId,omitempty"`
}

func (x *DeletePartnerApplicationRequest) Reset() {
	*x = DeletePartnerApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePartnerApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePartnerApplicationRequest) ProtoMessage() {}

func (x *DeletePartnerApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePartnerApplicationRequest.ProtoReflect.Descriptor instead.
func (*DeletePartnerApplicationRequest) Descriptor() ([]byte, []int) {
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP(), []int{3}
}

func (x *DeletePartnerApplicationRequest) GetPartnerId() string {
	if x != nil {
		return x.PartnerId
	}
	return ""
}

func (x *DeletePartnerApplicationRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type DeletePartnerApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *PartnerAppResponseData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeletePartnerApplicationResponse) Reset() {
	*x = DeletePartnerApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePartnerApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePartnerApplicationResponse) ProtoMessage() {}

func (x *DeletePartnerApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePartnerApplicationResponse.ProtoReflect.Descriptor instead.
func (*DeletePartnerApplicationResponse) Descriptor() ([]byte, []int) {
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP(), []int{4}
}

func (x *DeletePartnerApplicationResponse) GetData() *PartnerAppResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdatePartnerApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PartnerId     string `protobuf:"bytes,2,opt,name=partnerId,proto3" json:"partnerId,omitempty"`
	ApplicationId string `protobuf:"bytes,3,opt,name=applicationId,proto3" json:"applicationId,omitempty"`
}

func (x *UpdatePartnerApplicationRequest) Reset() {
	*x = UpdatePartnerApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePartnerApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePartnerApplicationRequest) ProtoMessage() {}

func (x *UpdatePartnerApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePartnerApplicationRequest.ProtoReflect.Descriptor instead.
func (*UpdatePartnerApplicationRequest) Descriptor() ([]byte, []int) {
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatePartnerApplicationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePartnerApplicationRequest) GetPartnerId() string {
	if x != nil {
		return x.PartnerId
	}
	return ""
}

func (x *UpdatePartnerApplicationRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type UpdatePartnerApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *PartnerAppResponseData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdatePartnerApplicationResponse) Reset() {
	*x = UpdatePartnerApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePartnerApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePartnerApplicationResponse) ProtoMessage() {}

func (x *UpdatePartnerApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePartnerApplicationResponse.ProtoReflect.Descriptor instead.
func (*UpdatePartnerApplicationResponse) Descriptor() ([]byte, []int) {
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePartnerApplicationResponse) GetData() *PartnerAppResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPartnerApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerId     string `protobuf:"bytes,1,opt,name=partnerId,proto3" json:"partnerId,omitempty"`
	ApplicationId string `protobuf:"bytes,2,opt,name=applicationId,proto3" json:"applicationId,omitempty"`
}

func (x *GetPartnerApplicationRequest) Reset() {
	*x = GetPartnerApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartnerApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartnerApplicationRequest) ProtoMessage() {}

func (x *GetPartnerApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartnerApplicationRequest.ProtoReflect.Descriptor instead.
func (*GetPartnerApplicationRequest) Descriptor() ([]byte, []int) {
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP(), []int{7}
}

func (x *GetPartnerApplicationRequest) GetPartnerId() string {
	if x != nil {
		return x.PartnerId
	}
	return ""
}

func (x *GetPartnerApplicationRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type GetPartnerApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *PartnerAppResponseData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPartnerApplicationResponse) Reset() {
	*x = GetPartnerApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartnerApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartnerApplicationResponse) ProtoMessage() {}

func (x *GetPartnerApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartnerApplicationResponse.ProtoReflect.Descriptor instead.
func (*GetPartnerApplicationResponse) Descriptor() ([]byte, []int) {
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP(), []int{8}
}

func (x *GetPartnerApplicationResponse) GetData() *PartnerAppResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListPartnerApplicationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerId string `protobuf:"bytes,1,opt,name=partnerId,proto3" json:"partnerId,omitempty"`
}

func (x *ListPartnerApplicationsRequest) Reset() {
	*x = ListPartnerApplicationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPartnerApplicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartnerApplicationsRequest) ProtoMessage() {}

func (x *ListPartnerApplicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartnerApplicationsRequest.ProtoReflect.Descriptor instead.
func (*ListPartnerApplicationsRequest) Descriptor() ([]byte, []int) {
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP(), []int{9}
}

func (x *ListPartnerApplicationsRequest) GetPartnerId() string {
	if x != nil {
		return x.PartnerId
	}
	return ""
}

type ListPartnersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerId string `protobuf:"bytes,1,opt,name=partnerId,proto3" json:"partnerId,omitempty"`
}

func (x *ListPartnersRequest) Reset() {
	*x = ListPartnersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPartnersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartnersRequest) ProtoMessage() {}

func (x *ListPartnersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartnersRequest.ProtoReflect.Descriptor instead.
func (*ListPartnersRequest) Descriptor() ([]byte, []int) {
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP(), []int{10}
}

func (x *ListPartnersRequest) GetPartnerId() string {
	if x != nil {
		return x.PartnerId
	}
	return ""
}

type ListPartnerApplicationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*PartnerAppResponseData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListPartnerApplicationsResponse) Reset() {
	*x = ListPartnerApplicationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPartnerApplicationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartnerApplicationsResponse) ProtoMessage() {}

func (x *ListPartnerApplicationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartnerApplicationsResponse.ProtoReflect.Descriptor instead.
func (*ListPartnerApplicationsResponse) Descriptor() ([]byte, []int) {
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP(), []int{11}
}

func (x *ListPartnerApplicationsResponse) GetData() []*PartnerAppResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAppMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerId     string `protobuf:"bytes,1,opt,name=partnerId,proto3" json:"partnerId,omitempty"`
	ApplicationId string `protobuf:"bytes,2,opt,name=applicationId,proto3" json:"applicationId,omitempty"`
}

func (x *GetAppMetadataRequest) Reset() {
	*x = GetAppMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppMetadataRequest) ProtoMessage() {}

func (x *GetAppMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetAppMetadataRequest) Descriptor() ([]byte, []int) {
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP(), []int{12}
}

func (x *GetAppMetadataRequest) GetPartnerId() string {
	if x != nil {
		return x.PartnerId
	}
	return ""
}

func (x *GetAppMetadataRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type AncillaryControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Telemedicine      bool `protobuf:"varint,1,opt,name=telemedicine,proto3" json:"telemedicine,omitempty"`
	Article           bool `protobuf:"varint,2,opt,name=article,proto3" json:"article,omitempty"`
	PharmacyDelivery  bool `protobuf:"varint,3,opt,name=pharmacyDelivery,proto3" json:"pharmacyDelivery,omitempty"`
	LabTest           bool `protobuf:"varint,4,opt,name=labTest,proto3" json:"labTest,omitempty"`
	AppointmenBooking bool `protobuf:"varint,5,opt,name=appointmenBooking,proto3" json:"appointmenBooking,omitempty"`
	Insurance         bool `protobuf:"varint,6,opt,name=insurance,proto3" json:"insurance,omitempty"`
}

func (x *AncillaryControl) Reset() {
	*x = AncillaryControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AncillaryControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AncillaryControl) ProtoMessage() {}

func (x *AncillaryControl) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AncillaryControl.ProtoReflect.Descriptor instead.
func (*AncillaryControl) Descriptor() ([]byte, []int) {
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP(), []int{13}
}

func (x *AncillaryControl) GetTelemedicine() bool {
	if x != nil {
		return x.Telemedicine
	}
	return false
}

func (x *AncillaryControl) GetArticle() bool {
	if x != nil {
		return x.Article
	}
	return false
}

func (x *AncillaryControl) GetPharmacyDelivery() bool {
	if x != nil {
		return x.PharmacyDelivery
	}
	return false
}

func (x *AncillaryControl) GetLabTest() bool {
	if x != nil {
		return x.LabTest
	}
	return false
}

func (x *AncillaryControl) GetAppointmenBooking() bool {
	if x != nil {
		return x.AppointmenBooking
	}
	return false
}

func (x *AncillaryControl) GetInsurance() bool {
	if x != nil {
		return x.Insurance
	}
	return false
}

type AppMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormURL   string            `protobuf:"bytes,1,opt,name=formURL,proto3" json:"formURL,omitempty"`
	Hotline   string            `protobuf:"bytes,2,opt,name=hotline,proto3" json:"hotline,omitempty"`
	RdtURL    string            `protobuf:"bytes,3,opt,name=rdtURL,proto3" json:"rdtURL,omitempty"`
	Ancillary *AncillaryControl `protobuf:"bytes,4,opt,name=ancillary,proto3" json:"ancillary,omitempty"`
}

func (x *AppMetadata) Reset() {
	*x = AppMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMetadata) ProtoMessage() {}

func (x *AppMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMetadata.ProtoReflect.Descriptor instead.
func (*AppMetadata) Descriptor() ([]byte, []int) {
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP(), []int{14}
}

func (x *AppMetadata) GetFormURL() string {
	if x != nil {
		return x.FormURL
	}
	return ""
}

func (x *AppMetadata) GetHotline() string {
	if x != nil {
		return x.Hotline
	}
	return ""
}

func (x *AppMetadata) GetRdtURL() string {
	if x != nil {
		return x.RdtURL
	}
	return ""
}

func (x *AppMetadata) GetAncillary() *AncillaryControl {
	if x != nil {
		return x.Ancillary
	}
	return nil
}

type GetAppMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *AppMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *GetAppMetadataResponse) Reset() {
	*x = GetAppMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppMetadataResponse) ProtoMessage() {}

func (x *GetAppMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetAppMetadataResponse) Descriptor() ([]byte, []int) {
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP(), []int{15}
}

func (x *GetAppMetadataResponse) GetMetadata() *AppMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type UpdateAppMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerId     string       `protobuf:"bytes,1,opt,name=partnerId,proto3" json:"partnerId,omitempty"`
	ApplicationId string       `protobuf:"bytes,2,opt,name=applicationId,proto3" json:"applicationId,omitempty"`
	Metadata      *AppMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *UpdateAppMetadataRequest) Reset() {
	*x = UpdateAppMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppMetadataRequest) ProtoMessage() {}

func (x *UpdateAppMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppMetadataRequest) Descriptor() ([]byte, []int) {
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateAppMetadataRequest) GetPartnerId() string {
	if x != nil {
		return x.PartnerId
	}
	return ""
}

func (x *UpdateAppMetadataRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *UpdateAppMetadataRequest) GetMetadata() *AppMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type UpdateAppMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateAppMetadataResponse) Reset() {
	*x = UpdateAppMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppMetadataResponse) ProtoMessage() {}

func (x *UpdateAppMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppMetadataResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppMetadataResponse) Descriptor() ([]byte, []int) {
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateAppMetadataResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_partnerapp_v1_PartnerApplication_proto protoreflect.FileDescriptor

var file_proto_partnerapp_v1_PartnerApplication_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x61,
	0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b,
	0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x89, 0x02, 0x0a, 0x16, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90,
	0x01, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x24, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x09, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x66, 0x0a, 0x1f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x7b, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90,
	0x01, 0x04, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a,
	0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52,
	0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x6b,
	0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x97, 0x01, 0x0a, 0x1f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f,
	0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x78, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04,
	0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0d, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x0d, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72,
	0x69, 0x78, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x49, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f,
	0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x3e, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f,
	0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x6a, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x71, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58,
	0x01, 0x90, 0x01, 0x04, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2f, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01,
	0x04, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0xe2, 0x01, 0x0a, 0x10, 0x41, 0x6e, 0x63, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64,
	0x69, 0x63, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x74, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x68, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x79, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x70,
	0x68, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x6c, 0x61, 0x62, 0x54, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x6c, 0x61, 0x62, 0x54, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x75, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x75,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x52, 0x4c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x52, 0x4c, 0x12,
	0x18, 0x0a, 0x07, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x64, 0x74,
	0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x64, 0x74, 0x55, 0x52,
	0x4c, 0x12, 0x4b, 0x0a, 0x09, 0x61, 0x6e, 0x63, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x6e, 0x63, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x52, 0x09, 0x61, 0x6e, 0x63, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x79, 0x22, 0x5e,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x69,
	0x78, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xba,
	0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x09, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f,
	0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x35, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x32, 0xed, 0x0c, 0x0a, 0x19, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0xec, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x2e,
	0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x70, 0x72,
	0x69, 0x78, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2c, 0x22, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x2f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x92, 0x41,
	0x1e, 0x62, 0x1c, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x00, 0x0a, 0x0a, 0x0a, 0x06, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x12,
	0xf9, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x2e, 0x70,
	0x72, 0x69, 0x78, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x70, 0x72, 0x69,
	0x78, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x60, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x39, 0x2a, 0x37, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x2f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x7d, 0x92, 0x41, 0x1e, 0x62, 0x1c, 0x0a,
	0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x0a,
	0x0a, 0x0a, 0x06, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x12, 0xdb, 0x01, 0x0a, 0x18,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x1a, 0x37, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x7b,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xcf, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x39, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a,
	0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x39, 0x12, 0x37, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x2f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x7d, 0x12, 0xe6, 0x01, 0x0a, 0x17,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x50, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x7b, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x92, 0x41, 0x1e, 0x62, 0x1c, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x0a, 0x0a, 0x0a, 0x06, 0x42, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x12, 0x00, 0x12, 0xd8, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x32, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x70, 0x72,
	0x69, 0x78, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x5d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x42, 0x12, 0x40, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x7d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x92, 0x41, 0x12, 0x62, 0x10, 0x0a,
	0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x12,
	0xf0, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x35, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x70,
	0x72, 0x69, 0x78, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x45, 0x1a, 0x40, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x7b, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x01,
	0x2a, 0x92, 0x41, 0x1e, 0x62, 0x1c, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x0a, 0x0a, 0x0a, 0x06, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x12, 0x00, 0x42, 0xc4, 0x02, 0x92, 0x41, 0xc0, 0x02, 0x12, 0xbd, 0x01, 0x0a, 0x1d, 0x50, 0x72,
	0x69, 0x78, 0x61, 0x20, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x20, 0x41, 0x70, 0x70, 0x20,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x41, 0x50, 0x49, 0x22, 0x45, 0x0a, 0x0a, 0x50,
	0x72, 0x69, 0x78, 0x61, 0x20, 0x54, 0x65, 0x63, 0x68, 0x12, 0x27, 0x68, 0x74, 0x74, 0x70, 0x73,
	0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72,
	0x69, 0x78, 0x61, 0x2d, 0x61, 0x69, 0x2f, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0e, 0x74, 0x65, 0x63, 0x68, 0x40, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x63,
	0x6f, 0x6d, 0x2a, 0x50, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x78, 0x61, 0x20, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2d, 0x61, 0x69,
	0x2f, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6c, 0x6f,
	0x62, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45,
	0x2e, 0x74, 0x78, 0x74, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x1a, 0x10, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x32, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61, 0x69, 0x2a, 0x02, 0x01, 0x02, 0x32,
	0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f,
	0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a,
	0x73, 0x6f, 0x6e, 0x5a, 0x44, 0x0a, 0x23, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x15, 0x08, 0x02, 0x1a, 0x0f, 0x58, 0x2d, 0x50, 0x72, 0x69, 0x78, 0x61,
	0x2d, 0x41, 0x50, 0x49, 0x2d, 0x4b, 0x65, 0x79, 0x20, 0x02, 0x0a, 0x1d, 0x0a, 0x06, 0x42, 0x65,
	0x61, 0x72, 0x65, 0x72, 0x12, 0x13, 0x08, 0x02, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_partnerapp_v1_PartnerApplication_proto_rawDescOnce sync.Once
	file_proto_partnerapp_v1_PartnerApplication_proto_rawDescData = file_proto_partnerapp_v1_PartnerApplication_proto_rawDesc
)

func file_proto_partnerapp_v1_PartnerApplication_proto_rawDescGZIP() []byte {
	file_proto_partnerapp_v1_PartnerApplication_proto_rawDescOnce.Do(func() {
		file_proto_partnerapp_v1_PartnerApplication_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_partnerapp_v1_PartnerApplication_proto_rawDescData)
	})
	return file_proto_partnerapp_v1_PartnerApplication_proto_rawDescData
}

var file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_proto_partnerapp_v1_PartnerApplication_proto_goTypes = []interface{}{
	(*PartnerAppResponseData)(nil),           // 0: prixa.partnerapplication.v1.PartnerAppResponseData
	(*CreatePartnerApplicationRequest)(nil),  // 1: prixa.partnerapplication.v1.CreatePartnerApplicationRequest
	(*CreatePartnerApplicationResponse)(nil), // 2: prixa.partnerapplication.v1.CreatePartnerApplicationResponse
	(*DeletePartnerApplicationRequest)(nil),  // 3: prixa.partnerapplication.v1.DeletePartnerApplicationRequest
	(*DeletePartnerApplicationResponse)(nil), // 4: prixa.partnerapplication.v1.DeletePartnerApplicationResponse
	(*UpdatePartnerApplicationRequest)(nil),  // 5: prixa.partnerapplication.v1.UpdatePartnerApplicationRequest
	(*UpdatePartnerApplicationResponse)(nil), // 6: prixa.partnerapplication.v1.UpdatePartnerApplicationResponse
	(*GetPartnerApplicationRequest)(nil),     // 7: prixa.partnerapplication.v1.GetPartnerApplicationRequest
	(*GetPartnerApplicationResponse)(nil),    // 8: prixa.partnerapplication.v1.GetPartnerApplicationResponse
	(*ListPartnerApplicationsRequest)(nil),   // 9: prixa.partnerapplication.v1.ListPartnerApplicationsRequest
	(*ListPartnersRequest)(nil),              // 10: prixa.partnerapplication.v1.ListPartnersRequest
	(*ListPartnerApplicationsResponse)(nil),  // 11: prixa.partnerapplication.v1.ListPartnerApplicationsResponse
	(*GetAppMetadataRequest)(nil),            // 12: prixa.partnerapplication.v1.GetAppMetadataRequest
	(*AncillaryControl)(nil),                 // 13: prixa.partnerapplication.v1.AncillaryControl
	(*AppMetadata)(nil),                      // 14: prixa.partnerapplication.v1.AppMetadata
	(*GetAppMetadataResponse)(nil),           // 15: prixa.partnerapplication.v1.GetAppMetadataResponse
	(*UpdateAppMetadataRequest)(nil),         // 16: prixa.partnerapplication.v1.UpdateAppMetadataRequest
	(*UpdateAppMetadataResponse)(nil),        // 17: prixa.partnerapplication.v1.UpdateAppMetadataResponse
	(*timestamp.Timestamp)(nil),              // 18: google.protobuf.Timestamp
}
var file_proto_partnerapp_v1_PartnerApplication_proto_depIdxs = []int32{
	18, // 0: prixa.partnerapplication.v1.PartnerAppResponseData.createdAt:type_name -> google.protobuf.Timestamp
	18, // 1: prixa.partnerapplication.v1.PartnerAppResponseData.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 2: prixa.partnerapplication.v1.CreatePartnerApplicationResponse.data:type_name -> prixa.partnerapplication.v1.PartnerAppResponseData
	0,  // 3: prixa.partnerapplication.v1.DeletePartnerApplicationResponse.data:type_name -> prixa.partnerapplication.v1.PartnerAppResponseData
	0,  // 4: prixa.partnerapplication.v1.UpdatePartnerApplicationResponse.data:type_name -> prixa.partnerapplication.v1.PartnerAppResponseData
	0,  // 5: prixa.partnerapplication.v1.GetPartnerApplicationResponse.data:type_name -> prixa.partnerapplication.v1.PartnerAppResponseData
	0,  // 6: prixa.partnerapplication.v1.ListPartnerApplicationsResponse.data:type_name -> prixa.partnerapplication.v1.PartnerAppResponseData
	13, // 7: prixa.partnerapplication.v1.AppMetadata.ancillary:type_name -> prixa.partnerapplication.v1.AncillaryControl
	14, // 8: prixa.partnerapplication.v1.GetAppMetadataResponse.metadata:type_name -> prixa.partnerapplication.v1.AppMetadata
	14, // 9: prixa.partnerapplication.v1.UpdateAppMetadataRequest.metadata:type_name -> prixa.partnerapplication.v1.AppMetadata
	1,  // 10: prixa.partnerapplication.v1.PartnerApplicationService.CreatePartnerApplication:input_type -> prixa.partnerapplication.v1.CreatePartnerApplicationRequest
	3,  // 11: prixa.partnerapplication.v1.PartnerApplicationService.DeletePartnerApplication:input_type -> prixa.partnerapplication.v1.DeletePartnerApplicationRequest
	5,  // 12: prixa.partnerapplication.v1.PartnerApplicationService.UpdatePartnerApplication:input_type -> prixa.partnerapplication.v1.UpdatePartnerApplicationRequest
	7,  // 13: prixa.partnerapplication.v1.PartnerApplicationService.GetPartnerApplication:input_type -> prixa.partnerapplication.v1.GetPartnerApplicationRequest
	9,  // 14: prixa.partnerapplication.v1.PartnerApplicationService.ListPartnerApplications:input_type -> prixa.partnerapplication.v1.ListPartnerApplicationsRequest
	12, // 15: prixa.partnerapplication.v1.PartnerApplicationService.GetAppMetadata:input_type -> prixa.partnerapplication.v1.GetAppMetadataRequest
	16, // 16: prixa.partnerapplication.v1.PartnerApplicationService.UpdateAppMetadata:input_type -> prixa.partnerapplication.v1.UpdateAppMetadataRequest
	2,  // 17: prixa.partnerapplication.v1.PartnerApplicationService.CreatePartnerApplication:output_type -> prixa.partnerapplication.v1.CreatePartnerApplicationResponse
	4,  // 18: prixa.partnerapplication.v1.PartnerApplicationService.DeletePartnerApplication:output_type -> prixa.partnerapplication.v1.DeletePartnerApplicationResponse
	6,  // 19: prixa.partnerapplication.v1.PartnerApplicationService.UpdatePartnerApplication:output_type -> prixa.partnerapplication.v1.UpdatePartnerApplicationResponse
	8,  // 20: prixa.partnerapplication.v1.PartnerApplicationService.GetPartnerApplication:output_type -> prixa.partnerapplication.v1.GetPartnerApplicationResponse
	11, // 21: prixa.partnerapplication.v1.PartnerApplicationService.ListPartnerApplications:output_type -> prixa.partnerapplication.v1.ListPartnerApplicationsResponse
	15, // 22: prixa.partnerapplication.v1.PartnerApplicationService.GetAppMetadata:output_type -> prixa.partnerapplication.v1.GetAppMetadataResponse
	17, // 23: prixa.partnerapplication.v1.PartnerApplicationService.UpdateAppMetadata:output_type -> prixa.partnerapplication.v1.UpdateAppMetadataResponse
	17, // [17:24] is the sub-list for method output_type
	10, // [10:17] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_partnerapp_v1_PartnerApplication_proto_init() }
func file_proto_partnerapp_v1_PartnerApplication_proto_init() {
	if File_proto_partnerapp_v1_PartnerApplication_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartnerAppResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePartnerApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePartnerApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePartnerApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePartnerApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePartnerApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePartnerApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartnerApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartnerApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPartnerApplicationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPartnersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPartnerApplicationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AncillaryControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_partnerapp_v1_PartnerApplication_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_partnerapp_v1_PartnerApplication_proto_goTypes,
		DependencyIndexes: file_proto_partnerapp_v1_PartnerApplication_proto_depIdxs,
		MessageInfos:      file_proto_partnerapp_v1_PartnerApplication_proto_msgTypes,
	}.Build()
	File_proto_partnerapp_v1_PartnerApplication_proto = out.File
	file_proto_partnerapp_v1_PartnerApplication_proto_rawDesc = nil
	file_proto_partnerapp_v1_PartnerApplication_proto_goTypes = nil
	file_proto_partnerapp_v1_PartnerApplication_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PartnerApplicationServiceClient is the client API for PartnerApplicationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PartnerApplicationServiceClient interface {
	CreatePartnerApplication(ctx context.Context, in *CreatePartnerApplicationRequest, opts ...grpc.CallOption) (*CreatePartnerApplicationResponse, error)
	DeletePartnerApplication(ctx context.Context, in *DeletePartnerApplicationRequest, opts ...grpc.CallOption) (*DeletePartnerApplicationResponse, error)
	UpdatePartnerApplication(ctx context.Context, in *UpdatePartnerApplicationRequest, opts ...grpc.CallOption) (*UpdatePartnerApplicationResponse, error)
	GetPartnerApplication(ctx context.Context, in *GetPartnerApplicationRequest, opts ...grpc.CallOption) (*GetPartnerApplicationResponse, error)
	ListPartnerApplications(ctx context.Context, in *ListPartnerApplicationsRequest, opts ...grpc.CallOption) (*ListPartnerApplicationsResponse, error)
	GetAppMetadata(ctx context.Context, in *GetAppMetadataRequest, opts ...grpc.CallOption) (*GetAppMetadataResponse, error)
	UpdateAppMetadata(ctx context.Context, in *UpdateAppMetadataRequest, opts ...grpc.CallOption) (*UpdateAppMetadataResponse, error)
}

type partnerApplicationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPartnerApplicationServiceClient(cc grpc.ClientConnInterface) PartnerApplicationServiceClient {
	return &partnerApplicationServiceClient{cc}
}

func (c *partnerApplicationServiceClient) CreatePartnerApplication(ctx context.Context, in *CreatePartnerApplicationRequest, opts ...grpc.CallOption) (*CreatePartnerApplicationResponse, error) {
	out := new(CreatePartnerApplicationResponse)
	err := c.cc.Invoke(ctx, "/prixa.partnerapplication.v1.PartnerApplicationService/CreatePartnerApplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerApplicationServiceClient) DeletePartnerApplication(ctx context.Context, in *DeletePartnerApplicationRequest, opts ...grpc.CallOption) (*DeletePartnerApplicationResponse, error) {
	out := new(DeletePartnerApplicationResponse)
	err := c.cc.Invoke(ctx, "/prixa.partnerapplication.v1.PartnerApplicationService/DeletePartnerApplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerApplicationServiceClient) UpdatePartnerApplication(ctx context.Context, in *UpdatePartnerApplicationRequest, opts ...grpc.CallOption) (*UpdatePartnerApplicationResponse, error) {
	out := new(UpdatePartnerApplicationResponse)
	err := c.cc.Invoke(ctx, "/prixa.partnerapplication.v1.PartnerApplicationService/UpdatePartnerApplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerApplicationServiceClient) GetPartnerApplication(ctx context.Context, in *GetPartnerApplicationRequest, opts ...grpc.CallOption) (*GetPartnerApplicationResponse, error) {
	out := new(GetPartnerApplicationResponse)
	err := c.cc.Invoke(ctx, "/prixa.partnerapplication.v1.PartnerApplicationService/GetPartnerApplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerApplicationServiceClient) ListPartnerApplications(ctx context.Context, in *ListPartnerApplicationsRequest, opts ...grpc.CallOption) (*ListPartnerApplicationsResponse, error) {
	out := new(ListPartnerApplicationsResponse)
	err := c.cc.Invoke(ctx, "/prixa.partnerapplication.v1.PartnerApplicationService/ListPartnerApplications", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerApplicationServiceClient) GetAppMetadata(ctx context.Context, in *GetAppMetadataRequest, opts ...grpc.CallOption) (*GetAppMetadataResponse, error) {
	out := new(GetAppMetadataResponse)
	err := c.cc.Invoke(ctx, "/prixa.partnerapplication.v1.PartnerApplicationService/GetAppMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerApplicationServiceClient) UpdateAppMetadata(ctx context.Context, in *UpdateAppMetadataRequest, opts ...grpc.CallOption) (*UpdateAppMetadataResponse, error) {
	out := new(UpdateAppMetadataResponse)
	err := c.cc.Invoke(ctx, "/prixa.partnerapplication.v1.PartnerApplicationService/UpdateAppMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PartnerApplicationServiceServer is the server API for PartnerApplicationService service.
type PartnerApplicationServiceServer interface {
	CreatePartnerApplication(context.Context, *CreatePartnerApplicationRequest) (*CreatePartnerApplicationResponse, error)
	DeletePartnerApplication(context.Context, *DeletePartnerApplicationRequest) (*DeletePartnerApplicationResponse, error)
	UpdatePartnerApplication(context.Context, *UpdatePartnerApplicationRequest) (*UpdatePartnerApplicationResponse, error)
	GetPartnerApplication(context.Context, *GetPartnerApplicationRequest) (*GetPartnerApplicationResponse, error)
	ListPartnerApplications(context.Context, *ListPartnerApplicationsRequest) (*ListPartnerApplicationsResponse, error)
	GetAppMetadata(context.Context, *GetAppMetadataRequest) (*GetAppMetadataResponse, error)
	UpdateAppMetadata(context.Context, *UpdateAppMetadataRequest) (*UpdateAppMetadataResponse, error)
}

// UnimplementedPartnerApplicationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPartnerApplicationServiceServer struct {
}

func (*UnimplementedPartnerApplicationServiceServer) CreatePartnerApplication(context.Context, *CreatePartnerApplicationRequest) (*CreatePartnerApplicationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePartnerApplication not implemented")
}
func (*UnimplementedPartnerApplicationServiceServer) DeletePartnerApplication(context.Context, *DeletePartnerApplicationRequest) (*DeletePartnerApplicationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePartnerApplication not implemented")
}
func (*UnimplementedPartnerApplicationServiceServer) UpdatePartnerApplication(context.Context, *UpdatePartnerApplicationRequest) (*UpdatePartnerApplicationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePartnerApplication not implemented")
}
func (*UnimplementedPartnerApplicationServiceServer) GetPartnerApplication(context.Context, *GetPartnerApplicationRequest) (*GetPartnerApplicationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPartnerApplication not implemented")
}
func (*UnimplementedPartnerApplicationServiceServer) ListPartnerApplications(context.Context, *ListPartnerApplicationsRequest) (*ListPartnerApplicationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPartnerApplications not implemented")
}
func (*UnimplementedPartnerApplicationServiceServer) GetAppMetadata(context.Context, *GetAppMetadataRequest) (*GetAppMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppMetadata not implemented")
}
func (*UnimplementedPartnerApplicationServiceServer) UpdateAppMetadata(context.Context, *UpdateAppMetadataRequest) (*UpdateAppMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAppMetadata not implemented")
}

func RegisterPartnerApplicationServiceServer(s *grpc.Server, srv PartnerApplicationServiceServer) {
	s.RegisterService(&_PartnerApplicationService_serviceDesc, srv)
}

func _PartnerApplicationService_CreatePartnerApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePartnerApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerApplicationServiceServer).CreatePartnerApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.partnerapplication.v1.PartnerApplicationService/CreatePartnerApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerApplicationServiceServer).CreatePartnerApplication(ctx, req.(*CreatePartnerApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerApplicationService_DeletePartnerApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePartnerApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerApplicationServiceServer).DeletePartnerApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.partnerapplication.v1.PartnerApplicationService/DeletePartnerApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerApplicationServiceServer).DeletePartnerApplication(ctx, req.(*DeletePartnerApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerApplicationService_UpdatePartnerApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePartnerApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerApplicationServiceServer).UpdatePartnerApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.partnerapplication.v1.PartnerApplicationService/UpdatePartnerApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerApplicationServiceServer).UpdatePartnerApplication(ctx, req.(*UpdatePartnerApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerApplicationService_GetPartnerApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPartnerApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerApplicationServiceServer).GetPartnerApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.partnerapplication.v1.PartnerApplicationService/GetPartnerApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerApplicationServiceServer).GetPartnerApplication(ctx, req.(*GetPartnerApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerApplicationService_ListPartnerApplications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPartnerApplicationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerApplicationServiceServer).ListPartnerApplications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.partnerapplication.v1.PartnerApplicationService/ListPartnerApplications",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerApplicationServiceServer).ListPartnerApplications(ctx, req.(*ListPartnerApplicationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerApplicationService_GetAppMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerApplicationServiceServer).GetAppMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.partnerapplication.v1.PartnerApplicationService/GetAppMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerApplicationServiceServer).GetAppMetadata(ctx, req.(*GetAppMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerApplicationService_UpdateAppMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAppMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerApplicationServiceServer).UpdateAppMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.partnerapplication.v1.PartnerApplicationService/UpdateAppMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerApplicationServiceServer).UpdateAppMetadata(ctx, req.(*UpdateAppMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PartnerApplicationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "prixa.partnerapplication.v1.PartnerApplicationService",
	HandlerType: (*PartnerApplicationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePartnerApplication",
			Handler:    _PartnerApplicationService_CreatePartnerApplication_Handler,
		},
		{
			MethodName: "DeletePartnerApplication",
			Handler:    _PartnerApplicationService_DeletePartnerApplication_Handler,
		},
		{
			MethodName: "UpdatePartnerApplication",
			Handler:    _PartnerApplicationService_UpdatePartnerApplication_Handler,
		},
		{
			MethodName: "GetPartnerApplication",
			Handler:    _PartnerApplicationService_GetPartnerApplication_Handler,
		},
		{
			MethodName: "ListPartnerApplications",
			Handler:    _PartnerApplicationService_ListPartnerApplications_Handler,
		},
		{
			MethodName: "GetAppMetadata",
			Handler:    _PartnerApplicationService_GetAppMetadata_Handler,
		},
		{
			MethodName: "UpdateAppMetadata",
			Handler:    _PartnerApplicationService_UpdateAppMetadata_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/partnerapp/v1/PartnerApplication.proto",
}
