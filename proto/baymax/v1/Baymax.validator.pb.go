// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/baymax/v1/baymax.proto

package prixa_baymax_v1

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "github.com/mwitkow/go-proto-validators"
	regexp "regexp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *MessageData) Validate() error {
	return nil
}
func (this *MessageContent) Validate() error {
	return nil
}
func (this *ConversationMessageRequest) Validate() error {
	return nil
}
func (this *ConversationMessageResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *WidgetMessageRequest) Validate() error {
	if this.Message != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Message); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Message", err)
		}
	}
	return nil
}
func (this *WidgetMessageResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}

var _regex_GetActiveTransactionByPatientRequest_PatientId = regexp.MustCompile(`^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[1-5][a-fA-F0-9]{3}-[8|9|aA|bB][a-fA-F0-9]{3}-[a-fA-F0-9]{12})?$`)

func (this *GetActiveTransactionByPatientRequest) Validate() error {
	if !_regex_GetActiveTransactionByPatientRequest_PatientId.MatchString(this.PatientId) {
		return github_com_mwitkow_go_proto_validators.FieldError("PatientId", fmt.Errorf(`value '%v' must be a string conforming to regex "^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[1-5][a-fA-F0-9]{3}-[8|9|aA|bB][a-fA-F0-9]{3}-[a-fA-F0-9]{12})?$"`, this.PatientId))
	}
	if this.PatientId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("PatientId", fmt.Errorf(`value '%v' must not be an empty string`, this.PatientId))
	}
	return nil
}
func (this *GetActiveTransactionByPatientResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	return nil
}
func (this *ActiveTransaction) Validate() error {
	return nil
}

var _regex_GetConversationMessagesRequest_Id = regexp.MustCompile(`^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[1-5][a-fA-F0-9]{3}-[8|9|aA|bB][a-fA-F0-9]{3}-[a-fA-F0-9]{12})?$`)
var _regex_GetConversationMessagesRequest_Before = regexp.MustCompile(`^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[1-5][a-fA-F0-9]{3}-[8|9|aA|bB][a-fA-F0-9]{3}-[a-fA-F0-9]{12})?$`)

func (this *GetConversationMessagesRequest) Validate() error {
	if !_regex_GetConversationMessagesRequest_Id.MatchString(this.Id) {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must be a string conforming to regex "^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[1-5][a-fA-F0-9]{3}-[8|9|aA|bB][a-fA-F0-9]{3}-[a-fA-F0-9]{12})?$"`, this.Id))
	}
	if this.Id == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must not be an empty string`, this.Id))
	}
	if !_regex_GetConversationMessagesRequest_Before.MatchString(this.Before) {
		return github_com_mwitkow_go_proto_validators.FieldError("Before", fmt.Errorf(`value '%v' must be a string conforming to regex "^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[1-5][a-fA-F0-9]{3}-[8|9|aA|bB][a-fA-F0-9]{3}-[a-fA-F0-9]{12})?$"`, this.Before))
	}
	return nil
}
func (this *GetConversationMessagesResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	return nil
}
func (this *ConversationListRequest) Validate() error {
	return nil
}
func (this *ConversationListResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	return nil
}
func (this *ConversationListConversation) Validate() error {
	if this.Patient != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Patient); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Patient", err)
		}
	}
	if this.LastMessage != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.LastMessage); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("LastMessage", err)
		}
	}
	return nil
}
func (this *Patient) Validate() error {
	return nil
}
func (this *ConversationCountRequest) Validate() error {
	return nil
}
func (this *ConversationCountResponse) Validate() error {
	return nil
}
