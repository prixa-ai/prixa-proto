syntax = "proto3";

package prixa.baymax.v1;

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    host: "engine2.prixa.ai";
    info: {
        title: "Prixa Babylon Service API";
        version: "1.0";
        contact: {
            name: "Prixa Tech";
            url: "https://github.com/prixa-ai/prixa-proto";
            email: "tech@prixa.com";
        };
        license: {
            name: "Prixa License";
            url: "https://github.com/prixa-ai/prixa-proto/blob/master/LICENSE.txt";
        };
    };
    schemes: HTTP;
    schemes: HTTPS;
    consumes: "application/json";
    produces: "application/json";
    security_definitions: {
        security: {
            key: "Bearer";
            value: {
                type: TYPE_API_KEY;
                in: IN_HEADER;
                name: "Authorization";
            }
        }
    }
};

service BaymaxService {
    rpc CreateConversationMessage(ConversationMessageRequest) returns (ConversationMessageResponse) {
        option (google.api.http) = {
            post: "/api/v1/baymax/conversations/{id}/messages"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            security: {
                security_requirement: {
                    key: "Bearer";
                    value: {}
                }
            }
        };
    }

    rpc CreateWidgetMessage(WidgetMessageRequest) returns (WidgetMessageResponse) {
        option (google.api.http) = {
            post: "/api/v1/baymax/widgets/messages"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            security: {
                security_requirement: {
                    key: "Bearer";
                    value: {}
                }
            }
        };
    }
}

message MessageData{
    string id = 1;
    string client_id = 2;
    string patient_id = 3;
    string doctor_id = 4;
    string content = 5;
    string inbox_id = 6;
    bool private = 7;
    string message_type = 8;
    string message_subtype = 9;
    string conversation_id = 10;
}

message MessageContent{
    string content = 1;
}

message ConversationMessageRequest{
    string id = 1;
    string content = 2;
    bool private = 3;
}

message ConversationMessageResponse{
    string status = 1;
    MessageData data = 2;
}

message WidgetMessageRequest{
    string website_token = 1;
    string cw_conversation = 2;
    MessageContent message = 3;
}

message WidgetMessageResponse{
    string status = 1;
    MessageData data = 2;
}