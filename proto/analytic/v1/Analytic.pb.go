// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: proto/analytic/v1/Analytic.proto

package prixa_analytics_v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EventLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogID          string               `protobuf:"bytes,1,opt,name=logID,proto3" json:"logID,omitempty"`
	Date           *timestamp.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	PrixaAPIKey    string               `protobuf:"bytes,3,opt,name=prixaAPIKey,proto3" json:"prixaAPIKey,omitempty"`
	Environment    string               `protobuf:"bytes,4,opt,name=environment,proto3" json:"environment,omitempty"`
	PartnerID      string               `protobuf:"bytes,5,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	PartnerName    string               `protobuf:"bytes,6,opt,name=partnerName,proto3" json:"partnerName,omitempty"`
	PartnerAppID   string               `protobuf:"bytes,7,opt,name=partnerAppID,proto3" json:"partnerAppID,omitempty"`
	PartnerAppName string               `protobuf:"bytes,8,opt,name=partnerAppName,proto3" json:"partnerAppName,omitempty"`
	Ip             string               `protobuf:"bytes,9,opt,name=ip,proto3" json:"ip,omitempty"`
	Email          string               `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`
	UserName       string               `protobuf:"bytes,11,opt,name=userName,proto3" json:"userName,omitempty"`
	UserAgent      string               `protobuf:"bytes,12,opt,name=userAgent,proto3" json:"userAgent,omitempty"`
	Type           string               `protobuf:"bytes,13,opt,name=type,proto3" json:"type,omitempty"`
	Hostname       string               `protobuf:"bytes,14,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Description    string               `protobuf:"bytes,15,opt,name=description,proto3" json:"description,omitempty"`
	Metadata       map[string]string    `protobuf:"bytes,16,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EventLog) Reset() {
	*x = EventLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventLog) ProtoMessage() {}

func (x *EventLog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventLog.ProtoReflect.Descriptor instead.
func (*EventLog) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{0}
}

func (x *EventLog) GetLogID() string {
	if x != nil {
		return x.LogID
	}
	return ""
}

func (x *EventLog) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *EventLog) GetPrixaAPIKey() string {
	if x != nil {
		return x.PrixaAPIKey
	}
	return ""
}

func (x *EventLog) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *EventLog) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *EventLog) GetPartnerName() string {
	if x != nil {
		return x.PartnerName
	}
	return ""
}

func (x *EventLog) GetPartnerAppID() string {
	if x != nil {
		return x.PartnerAppID
	}
	return ""
}

func (x *EventLog) GetPartnerAppName() string {
	if x != nil {
		return x.PartnerAppName
	}
	return ""
}

func (x *EventLog) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *EventLog) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *EventLog) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *EventLog) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *EventLog) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EventLog) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *EventLog) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EventLog) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type NalarEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventLog  *EventLog `protobuf:"bytes,1,opt,name=eventLog,proto3" json:"eventLog,omitempty"`
	ID        string    `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	SessionID string    `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Latitude  float32   `protobuf:"fixed32,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float32   `protobuf:"fixed32,5,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Kabupaten string    `protobuf:"bytes,6,opt,name=kabupaten,proto3" json:"kabupaten,omitempty"`
	Kecamatan string    `protobuf:"bytes,7,opt,name=kecamatan,proto3" json:"kecamatan,omitempty"`
	Kelurahan string    `protobuf:"bytes,8,opt,name=kelurahan,proto3" json:"kelurahan,omitempty"`
	PrevState string    `protobuf:"bytes,9,opt,name=prevState,proto3" json:"prevState,omitempty"`
	NextState string    `protobuf:"bytes,10,opt,name=nextState,proto3" json:"nextState,omitempty"`
	Reply     *any.Any  `protobuf:"bytes,11,opt,name=reply,proto3" json:"reply,omitempty"`
	Result    *any.Any  `protobuf:"bytes,12,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *NalarEvent) Reset() {
	*x = NalarEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NalarEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NalarEvent) ProtoMessage() {}

func (x *NalarEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NalarEvent.ProtoReflect.Descriptor instead.
func (*NalarEvent) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{1}
}

func (x *NalarEvent) GetEventLog() *EventLog {
	if x != nil {
		return x.EventLog
	}
	return nil
}

func (x *NalarEvent) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *NalarEvent) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *NalarEvent) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *NalarEvent) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *NalarEvent) GetKabupaten() string {
	if x != nil {
		return x.Kabupaten
	}
	return ""
}

func (x *NalarEvent) GetKecamatan() string {
	if x != nil {
		return x.Kecamatan
	}
	return ""
}

func (x *NalarEvent) GetKelurahan() string {
	if x != nil {
		return x.Kelurahan
	}
	return ""
}

func (x *NalarEvent) GetPrevState() string {
	if x != nil {
		return x.PrevState
	}
	return ""
}

func (x *NalarEvent) GetNextState() string {
	if x != nil {
		return x.NextState
	}
	return ""
}

func (x *NalarEvent) GetReply() *any.Any {
	if x != nil {
		return x.Reply
	}
	return nil
}

func (x *NalarEvent) GetResult() *any.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

type TrackEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event    string            `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Metadata map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TrackEvent) Reset() {
	*x = TrackEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackEvent) ProtoMessage() {}

func (x *TrackEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackEvent.ProtoReflect.Descriptor instead.
func (*TrackEvent) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{2}
}

func (x *TrackEvent) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *TrackEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_proto_analytic_v1_Analytic_proto protoreflect.FileDescriptor

var file_proto_analytic_v1_Analytic_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x2f, 0x76, 0x31, 0x2f, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67,
	0x67, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x04, 0x0a, 0x08,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x72, 0x69, 0x78, 0x61, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x78, 0x61, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x46, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x10, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9e, 0x03, 0x0a, 0x0a, 0x4e, 0x61, 0x6c, 0x61, 0x72, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x67, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x61, 0x62, 0x75, 0x70, 0x61,
	0x74, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x61, 0x62, 0x75, 0x70,
	0x61, 0x74, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74,
	0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x6c, 0x75, 0x72, 0x61, 0x68, 0x61, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x65, 0x6c, 0x75, 0x72, 0x61, 0x68, 0x61, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x76, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x65, 0x76, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x05,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x32, 0x75, 0x0a, 0x0f, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x1e,
	0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x2f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x3a, 0x01, 0x2a, 0x42, 0xd3, 0x02, 0x92, 0x41, 0xcf, 0x02,
	0x12, 0xba, 0x01, 0x0a, 0x1a, 0x50, 0x72, 0x69, 0x78, 0x61, 0x20, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x41, 0x50, 0x49, 0x22,
	0x45, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x78, 0x61, 0x20, 0x54, 0x65, 0x63, 0x68, 0x12, 0x27, 0x68,
	0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2d, 0x61, 0x69, 0x2f, 0x70, 0x72, 0x69, 0x78, 0x61,
	0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x74, 0x65, 0x63, 0x68, 0x40, 0x70, 0x72, 0x69,
	0x78, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2a, 0x50, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x78, 0x61, 0x20,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f,
	0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x69, 0x78,
	0x61, 0x2d, 0x61, 0x69, 0x2f, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x62, 0x6c, 0x6f, 0x62, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x4c, 0x49, 0x43,
	0x45, 0x4e, 0x53, 0x45, 0x2e, 0x74, 0x78, 0x74, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x1a, 0x10, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x32, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61, 0x69, 0x2a,
	0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x44, 0x0a, 0x23, 0x0a, 0x0a, 0x41, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x15, 0x08, 0x02, 0x1a, 0x0f, 0x58, 0x2d, 0x50,
	0x72, 0x69, 0x78, 0x61, 0x2d, 0x41, 0x50, 0x49, 0x2d, 0x4b, 0x65, 0x79, 0x20, 0x02, 0x0a, 0x1d,
	0x0a, 0x06, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x13, 0x08, 0x02, 0x1a, 0x0d, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x62, 0x10, 0x0a,
	0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_analytic_v1_Analytic_proto_rawDescOnce sync.Once
	file_proto_analytic_v1_Analytic_proto_rawDescData = file_proto_analytic_v1_Analytic_proto_rawDesc
)

func file_proto_analytic_v1_Analytic_proto_rawDescGZIP() []byte {
	file_proto_analytic_v1_Analytic_proto_rawDescOnce.Do(func() {
		file_proto_analytic_v1_Analytic_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_analytic_v1_Analytic_proto_rawDescData)
	})
	return file_proto_analytic_v1_Analytic_proto_rawDescData
}

var file_proto_analytic_v1_Analytic_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_analytic_v1_Analytic_proto_goTypes = []interface{}{
	(*EventLog)(nil),            // 0: prixa.analytics.v1.EventLog
	(*NalarEvent)(nil),          // 1: prixa.analytics.v1.NalarEvent
	(*TrackEvent)(nil),          // 2: prixa.analytics.v1.TrackEvent
	nil,                         // 3: prixa.analytics.v1.EventLog.MetadataEntry
	nil,                         // 4: prixa.analytics.v1.TrackEvent.MetadataEntry
	(*timestamp.Timestamp)(nil), // 5: google.protobuf.Timestamp
	(*any.Any)(nil),             // 6: google.protobuf.Any
	(*empty.Empty)(nil),         // 7: google.protobuf.Empty
}
var file_proto_analytic_v1_Analytic_proto_depIdxs = []int32{
	5, // 0: prixa.analytics.v1.EventLog.date:type_name -> google.protobuf.Timestamp
	3, // 1: prixa.analytics.v1.EventLog.metadata:type_name -> prixa.analytics.v1.EventLog.MetadataEntry
	0, // 2: prixa.analytics.v1.NalarEvent.eventLog:type_name -> prixa.analytics.v1.EventLog
	6, // 3: prixa.analytics.v1.NalarEvent.reply:type_name -> google.protobuf.Any
	6, // 4: prixa.analytics.v1.NalarEvent.result:type_name -> google.protobuf.Any
	4, // 5: prixa.analytics.v1.TrackEvent.metadata:type_name -> prixa.analytics.v1.TrackEvent.MetadataEntry
	2, // 6: prixa.analytics.v1.AnalyticService.Track:input_type -> prixa.analytics.v1.TrackEvent
	7, // 7: prixa.analytics.v1.AnalyticService.Track:output_type -> google.protobuf.Empty
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_analytic_v1_Analytic_proto_init() }
func file_proto_analytic_v1_Analytic_proto_init() {
	if File_proto_analytic_v1_Analytic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_analytic_v1_Analytic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_analytic_v1_Analytic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NalarEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_analytic_v1_Analytic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_analytic_v1_Analytic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_analytic_v1_Analytic_proto_goTypes,
		DependencyIndexes: file_proto_analytic_v1_Analytic_proto_depIdxs,
		MessageInfos:      file_proto_analytic_v1_Analytic_proto_msgTypes,
	}.Build()
	File_proto_analytic_v1_Analytic_proto = out.File
	file_proto_analytic_v1_Analytic_proto_rawDesc = nil
	file_proto_analytic_v1_Analytic_proto_goTypes = nil
	file_proto_analytic_v1_Analytic_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AnalyticServiceClient is the client API for AnalyticService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnalyticServiceClient interface {
	Track(ctx context.Context, in *TrackEvent, opts ...grpc.CallOption) (*empty.Empty, error)
}

type analyticServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAnalyticServiceClient(cc grpc.ClientConnInterface) AnalyticServiceClient {
	return &analyticServiceClient{cc}
}

func (c *analyticServiceClient) Track(ctx context.Context, in *TrackEvent, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/prixa.analytics.v1.AnalyticService/Track", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AnalyticServiceServer is the server API for AnalyticService service.
type AnalyticServiceServer interface {
	Track(context.Context, *TrackEvent) (*empty.Empty, error)
}

// UnimplementedAnalyticServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAnalyticServiceServer struct {
}

func (*UnimplementedAnalyticServiceServer) Track(context.Context, *TrackEvent) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Track not implemented")
}

func RegisterAnalyticServiceServer(s *grpc.Server, srv AnalyticServiceServer) {
	s.RegisterService(&_AnalyticService_serviceDesc, srv)
}

func _AnalyticService_Track_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TrackEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnalyticServiceServer).Track(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.analytics.v1.AnalyticService/Track",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnalyticServiceServer).Track(ctx, req.(*TrackEvent))
	}
	return interceptor(ctx, in, info, handler)
}

var _AnalyticService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "prixa.analytics.v1.AnalyticService",
	HandlerType: (*AnalyticServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Track",
			Handler:    _AnalyticService_Track_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/analytic/v1/Analytic.proto",
}
