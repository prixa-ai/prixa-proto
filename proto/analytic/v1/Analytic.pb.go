// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/analytic/v1/Analytic.proto

package prixa_analytic_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TrackArticleRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrackArticleRequest) Reset()         { *m = TrackArticleRequest{} }
func (m *TrackArticleRequest) String() string { return proto.CompactTextString(m) }
func (*TrackArticleRequest) ProtoMessage()    {}
func (*TrackArticleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7501e1ee92099508, []int{0}
}

func (m *TrackArticleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackArticleRequest.Unmarshal(m, b)
}
func (m *TrackArticleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackArticleRequest.Marshal(b, m, deterministic)
}
func (m *TrackArticleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackArticleRequest.Merge(m, src)
}
func (m *TrackArticleRequest) XXX_Size() int {
	return xxx_messageInfo_TrackArticleRequest.Size(m)
}
func (m *TrackArticleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackArticleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TrackArticleRequest proto.InternalMessageInfo

func (m *TrackArticleRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type EventLog struct {
	LogID                string               `protobuf:"bytes,1,opt,name=logID,proto3" json:"logID,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	PrixaAPIKey          string               `protobuf:"bytes,3,opt,name=prixaAPIKey,proto3" json:"prixaAPIKey,omitempty"`
	Environment          string               `protobuf:"bytes,4,opt,name=environment,proto3" json:"environment,omitempty"`
	PartnerID            string               `protobuf:"bytes,5,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	PartnerName          string               `protobuf:"bytes,6,opt,name=partnerName,proto3" json:"partnerName,omitempty"`
	Ip                   string               `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`
	UserID               string               `protobuf:"bytes,8,opt,name=userID,proto3" json:"userID,omitempty"`
	UserName             string               `protobuf:"bytes,9,opt,name=userName,proto3" json:"userName,omitempty"`
	UserAgent            string               `protobuf:"bytes,10,opt,name=userAgent,proto3" json:"userAgent,omitempty"`
	Type                 string               `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	Hostname             string               `protobuf:"bytes,12,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Description          string               `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	Metadata             *any.Any             `protobuf:"bytes,14,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EventLog) Reset()         { *m = EventLog{} }
func (m *EventLog) String() string { return proto.CompactTextString(m) }
func (*EventLog) ProtoMessage()    {}
func (*EventLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_7501e1ee92099508, []int{1}
}

func (m *EventLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventLog.Unmarshal(m, b)
}
func (m *EventLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventLog.Marshal(b, m, deterministic)
}
func (m *EventLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventLog.Merge(m, src)
}
func (m *EventLog) XXX_Size() int {
	return xxx_messageInfo_EventLog.Size(m)
}
func (m *EventLog) XXX_DiscardUnknown() {
	xxx_messageInfo_EventLog.DiscardUnknown(m)
}

var xxx_messageInfo_EventLog proto.InternalMessageInfo

func (m *EventLog) GetLogID() string {
	if m != nil {
		return m.LogID
	}
	return ""
}

func (m *EventLog) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *EventLog) GetPrixaAPIKey() string {
	if m != nil {
		return m.PrixaAPIKey
	}
	return ""
}

func (m *EventLog) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *EventLog) GetPartnerID() string {
	if m != nil {
		return m.PartnerID
	}
	return ""
}

func (m *EventLog) GetPartnerName() string {
	if m != nil {
		return m.PartnerName
	}
	return ""
}

func (m *EventLog) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *EventLog) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *EventLog) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *EventLog) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *EventLog) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *EventLog) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *EventLog) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *EventLog) GetMetadata() *any.Any {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func init() {
	proto.RegisterType((*TrackArticleRequest)(nil), "prixa.analytic.v1.TrackArticleRequest")
	proto.RegisterType((*EventLog)(nil), "prixa.analytic.v1.EventLog")
}

func init() {
	proto.RegisterFile("proto/analytic/v1/Analytic.proto", fileDescriptor_7501e1ee92099508)
}

var fileDescriptor_7501e1ee92099508 = []byte{
	// 634 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0x55, 0xdc, 0x9f, 0x2f, 0x9d, 0xfe, 0x7c, 0x65, 0x28, 0x95, 0x31, 0x15, 0x58, 0x41, 0x2d,
	0x55, 0x45, 0x3c, 0x4d, 0xd8, 0x75, 0x03, 0x86, 0x66, 0x11, 0xb5, 0xaa, 0xa2, 0x34, 0x0b, 0xc4,
	0x6e, 0xe2, 0x5c, 0x9c, 0x81, 0x78, 0x66, 0xf0, 0x4c, 0x4c, 0x2d, 0xc4, 0x86, 0x25, 0x4b, 0xd8,
	0xb3, 0xe0, 0x31, 0xfa, 0x1a, 0xbc, 0x02, 0x0f, 0x82, 0x3c, 0x63, 0xa7, 0x51, 0xc3, 0x82, 0x55,
	0xee, 0x3d, 0xe7, 0xe4, 0xcc, 0x99, 0xeb, 0x3b, 0xc8, 0x97, 0xa9, 0xd0, 0x82, 0x50, 0x4e, 0x27,
	0xb9, 0x66, 0x11, 0xc9, 0x5a, 0x24, 0x2c, 0xeb, 0xc0, 0x50, 0xf8, 0x8e, 0x4c, 0xd9, 0x15, 0x0d,
	0x2a, 0x45, 0x90, 0xb5, 0xbc, 0x07, 0xb1, 0x10, 0xf1, 0x04, 0x88, 0x11, 0x0c, 0xa7, 0x6f, 0x09,
	0x24, 0x52, 0xe7, 0x56, 0xef, 0x3d, 0xba, 0x4d, 0x6a, 0x96, 0x80, 0xd2, 0x34, 0x91, 0xa5, 0xe0,
	0xfe, 0x6d, 0x01, 0xe5, 0xd5, 0x7f, 0xf7, 0x4a, 0x8a, 0x4a, 0x46, 0x28, 0xe7, 0x42, 0x53, 0xcd,
	0x04, 0x57, 0x25, 0xfb, 0xd4, 0xfc, 0x44, 0xcd, 0x18, 0x78, 0x53, 0x7d, 0xa4, 0x71, 0x0c, 0x29,
	0x11, 0xd2, 0x28, 0x16, 0xd5, 0x8d, 0x7d, 0x74, 0x77, 0x90, 0xd2, 0xe8, 0x7d, 0x98, 0x6a, 0x16,
	0x4d, 0xa0, 0x0f, 0x1f, 0xa6, 0xa0, 0x34, 0xde, 0x42, 0x0e, 0x1b, 0xb9, 0x35, 0xbf, 0x76, 0xb8,
	0xd6, 0x77, 0xd8, 0xa8, 0x71, 0xbd, 0x84, 0xea, 0x9d, 0x0c, 0xb8, 0x3e, 0x17, 0x31, 0xde, 0x41,
	0x2b, 0x13, 0x11, 0x77, 0x4f, 0x4b, 0xde, 0x36, 0x38, 0x40, 0xcb, 0x23, 0xaa, 0xc1, 0x75, 0xfc,
	0xda, 0xe1, 0x7a, 0xdb, 0x0b, 0x6c, 0xc8, 0xa0, 0xca, 0x1f, 0x0c, 0xaa, 0x0b, 0xf6, 0x8d, 0x0e,
	0xfb, 0x68, 0xdd, 0xcc, 0x2c, 0xec, 0x75, 0xcf, 0x20, 0x77, 0x97, 0x8c, 0xd7, 0x3c, 0x54, 0x28,
	0x80, 0x67, 0x2c, 0x15, 0x3c, 0x01, 0xae, 0xdd, 0x65, 0xab, 0x98, 0x83, 0xf0, 0x1e, 0x5a, 0x93,
	0x34, 0xd5, 0x1c, 0xd2, 0xee, 0xa9, 0xbb, 0x62, 0xf8, 0x1b, 0xc0, 0x9c, 0x60, 0x9b, 0x0b, 0x9a,
	0x80, 0xbb, 0x5a, 0x9e, 0x70, 0x03, 0x99, 0x6b, 0x4a, 0xf7, 0xbf, 0xf2, 0x9a, 0x12, 0xef, 0xa2,
	0xd5, 0xa9, 0x32, 0x66, 0x75, 0x83, 0x95, 0x1d, 0xf6, 0x50, 0xbd, 0xa8, 0x8c, 0xcd, 0x9a, 0x61,
	0x66, 0x7d, 0x91, 0xa1, 0xa8, 0xc3, 0xb8, 0xc8, 0x88, 0x6c, 0x86, 0x19, 0x80, 0x31, 0x5a, 0xd6,
	0xb9, 0x04, 0x77, 0xdd, 0x10, 0xa6, 0x2e, 0xdc, 0xc6, 0x42, 0x69, 0x5e, 0xb8, 0x6d, 0x58, 0xb7,
	0xaa, 0x2f, 0x32, 0x8f, 0x40, 0x45, 0x29, 0x33, 0x5f, 0xcc, 0xdd, 0xb4, 0x99, 0xe7, 0x20, 0x7c,
	0x8c, 0xea, 0x09, 0x68, 0x3a, 0xa2, 0x9a, 0xba, 0x5b, 0x66, 0xd6, 0x3b, 0x0b, 0xb3, 0x0e, 0x79,
	0xde, 0x9f, 0xa9, 0xda, 0x5f, 0x6b, 0x68, 0xbb, 0x5a, 0x57, 0x75, 0x09, 0x69, 0xc6, 0x22, 0xc0,
	0x19, 0xda, 0x98, 0xff, 0xf0, 0xf8, 0x20, 0x58, 0xd8, 0xe0, 0xe0, 0x2f, 0x9b, 0xe1, 0xed, 0x2e,
	0x1c, 0xd6, 0x29, 0xd6, 0xba, 0x71, 0xf0, 0xe5, 0xd7, 0xef, 0xef, 0x8e, 0x8f, 0x1f, 0x9a, 0xb5,
	0xcc, 0x5a, 0xb3, 0xc7, 0xa2, 0x08, 0xb5, 0x0e, 0xe4, 0x13, 0x1b, 0x7d, 0x7e, 0xf9, 0xd3, 0xf9,
	0x16, 0xfe, 0x70, 0xf0, 0x75, 0x0d, 0x79, 0xbd, 0xe2, 0x40, 0xbf, 0x4a, 0xe6, 0x97, 0xc9, 0xfc,
	0xb0, 0xd7, 0x6d, 0x74, 0x10, 0xb2, 0xec, 0x00, 0xa2, 0x31, 0x7e, 0x32, 0xd6, 0x5a, 0xaa, 0x13,
	0x42, 0x62, 0xa6, 0xc7, 0xd3, 0x61, 0x10, 0x89, 0x84, 0x98, 0xb4, 0x4d, 0xca, 0xca, 0xc2, 0xee,
	0xfe, 0x96, 0x86, 0x68, 0xfc, 0xc2, 0x5e, 0x24, 0x12, 0xc9, 0x51, 0x0f, 0x6d, 0x5a, 0x9b, 0x73,
	0x16, 0x01, 0x57, 0x80, 0x9f, 0xff, 0xa3, 0x13, 0x19, 0x4e, 0xc4, 0x90, 0x24, 0x54, 0x69, 0x48,
	0xc9, 0x79, 0xf7, 0x55, 0xe7, 0xe2, 0xb2, 0x13, 0xe8, 0x2b, 0xdd, 0x5e, 0x6a, 0x05, 0xc7, 0xde,
	0x36, 0xf0, 0x98, 0x71, 0x68, 0x57, 0x23, 0x63, 0x47, 0x4e, 0xcd, 0x69, 0x6f, 0x53, 0x29, 0x27,
	0x2c, 0x32, 0xcf, 0x8b, 0xbc, 0x53, 0x82, 0x9f, 0x2c, 0x20, 0x6f, 0xf6, 0xd1, 0x63, 0x84, 0x42,
	0xc9, 0xce, 0x20, 0x0f, 0xa7, 0x7a, 0x8c, 0xef, 0xd5, 0x1d, 0xef, 0xff, 0xd7, 0x4d, 0x13, 0xb2,
	0x19, 0xf6, 0xba, 0xcd, 0x33, 0xc8, 0x7d, 0x67, 0xb8, 0x6a, 0x42, 0x3c, 0xfb, 0x13, 0x00, 0x00,
	0xff, 0xff, 0x77, 0x42, 0x96, 0xfa, 0x78, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AnalyticsServiceClient is the client API for AnalyticsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnalyticsServiceClient interface {
	TrackArticle(ctx context.Context, in *TrackArticleRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type analyticsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAnalyticsServiceClient(cc grpc.ClientConnInterface) AnalyticsServiceClient {
	return &analyticsServiceClient{cc}
}

func (c *analyticsServiceClient) TrackArticle(ctx context.Context, in *TrackArticleRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/prixa.analytic.v1.AnalyticsService/TrackArticle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AnalyticsServiceServer is the server API for AnalyticsService service.
type AnalyticsServiceServer interface {
	TrackArticle(context.Context, *TrackArticleRequest) (*empty.Empty, error)
}

// UnimplementedAnalyticsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAnalyticsServiceServer struct {
}

func (*UnimplementedAnalyticsServiceServer) TrackArticle(ctx context.Context, req *TrackArticleRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TrackArticle not implemented")
}

func RegisterAnalyticsServiceServer(s *grpc.Server, srv AnalyticsServiceServer) {
	s.RegisterService(&_AnalyticsService_serviceDesc, srv)
}

func _AnalyticsService_TrackArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TrackArticleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnalyticsServiceServer).TrackArticle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.analytic.v1.AnalyticsService/TrackArticle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnalyticsServiceServer).TrackArticle(ctx, req.(*TrackArticleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AnalyticsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "prixa.analytic.v1.AnalyticsService",
	HandlerType: (*AnalyticsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TrackArticle",
			Handler:    _AnalyticsService_TrackArticle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/analytic/v1/Analytic.proto",
}
