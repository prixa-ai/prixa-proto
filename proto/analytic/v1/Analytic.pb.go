// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: proto/analytic/v1/Analytic.proto

package prixa_analytics_v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EventLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogID          string               `protobuf:"bytes,1,opt,name=logID,proto3" json:"logID,omitempty"`
	Date           *timestamp.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	PrixaAPIKey    string               `protobuf:"bytes,3,opt,name=prixaAPIKey,proto3" json:"prixaAPIKey,omitempty"`
	Environment    string               `protobuf:"bytes,4,opt,name=environment,proto3" json:"environment,omitempty"`
	PartnerID      string               `protobuf:"bytes,5,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	PartnerName    string               `protobuf:"bytes,6,opt,name=partnerName,proto3" json:"partnerName,omitempty"`
	PartnerAppID   string               `protobuf:"bytes,7,opt,name=partnerAppID,proto3" json:"partnerAppID,omitempty"`
	PartnerAppName string               `protobuf:"bytes,8,opt,name=partnerAppName,proto3" json:"partnerAppName,omitempty"`
	Ip             string               `protobuf:"bytes,9,opt,name=ip,proto3" json:"ip,omitempty"`
	Email          string               `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`
	UserName       string               `protobuf:"bytes,11,opt,name=userName,proto3" json:"userName,omitempty"`
	UserAgent      string               `protobuf:"bytes,12,opt,name=userAgent,proto3" json:"userAgent,omitempty"`
	Type           string               `protobuf:"bytes,13,opt,name=type,proto3" json:"type,omitempty"`
	Hostname       string               `protobuf:"bytes,14,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Description    string               `protobuf:"bytes,15,opt,name=description,proto3" json:"description,omitempty"`
	Metadata       map[string]string    `protobuf:"bytes,16,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EventLog) Reset() {
	*x = EventLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventLog) ProtoMessage() {}

func (x *EventLog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventLog.ProtoReflect.Descriptor instead.
func (*EventLog) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{0}
}

func (x *EventLog) GetLogID() string {
	if x != nil {
		return x.LogID
	}
	return ""
}

func (x *EventLog) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *EventLog) GetPrixaAPIKey() string {
	if x != nil {
		return x.PrixaAPIKey
	}
	return ""
}

func (x *EventLog) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *EventLog) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *EventLog) GetPartnerName() string {
	if x != nil {
		return x.PartnerName
	}
	return ""
}

func (x *EventLog) GetPartnerAppID() string {
	if x != nil {
		return x.PartnerAppID
	}
	return ""
}

func (x *EventLog) GetPartnerAppName() string {
	if x != nil {
		return x.PartnerAppName
	}
	return ""
}

func (x *EventLog) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *EventLog) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *EventLog) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *EventLog) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *EventLog) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EventLog) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *EventLog) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EventLog) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type NalarEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventLog  *EventLog `protobuf:"bytes,1,opt,name=eventLog,proto3" json:"eventLog,omitempty"`
	ID        string    `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	SessionID string    `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Latitude  float32   `protobuf:"fixed32,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float32   `protobuf:"fixed32,5,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Kabupaten string    `protobuf:"bytes,6,opt,name=kabupaten,proto3" json:"kabupaten,omitempty"`
	Kecamatan string    `protobuf:"bytes,7,opt,name=kecamatan,proto3" json:"kecamatan,omitempty"`
	Kelurahan string    `protobuf:"bytes,8,opt,name=kelurahan,proto3" json:"kelurahan,omitempty"`
	PrevState string    `protobuf:"bytes,9,opt,name=prevState,proto3" json:"prevState,omitempty"`
	NextState string    `protobuf:"bytes,10,opt,name=nextState,proto3" json:"nextState,omitempty"`
	Reply     *any.Any  `protobuf:"bytes,11,opt,name=reply,proto3" json:"reply,omitempty"`
	Result    *any.Any  `protobuf:"bytes,12,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *NalarEvent) Reset() {
	*x = NalarEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NalarEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NalarEvent) ProtoMessage() {}

func (x *NalarEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NalarEvent.ProtoReflect.Descriptor instead.
func (*NalarEvent) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{1}
}

func (x *NalarEvent) GetEventLog() *EventLog {
	if x != nil {
		return x.EventLog
	}
	return nil
}

func (x *NalarEvent) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *NalarEvent) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *NalarEvent) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *NalarEvent) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *NalarEvent) GetKabupaten() string {
	if x != nil {
		return x.Kabupaten
	}
	return ""
}

func (x *NalarEvent) GetKecamatan() string {
	if x != nil {
		return x.Kecamatan
	}
	return ""
}

func (x *NalarEvent) GetKelurahan() string {
	if x != nil {
		return x.Kelurahan
	}
	return ""
}

func (x *NalarEvent) GetPrevState() string {
	if x != nil {
		return x.PrevState
	}
	return ""
}

func (x *NalarEvent) GetNextState() string {
	if x != nil {
		return x.NextState
	}
	return ""
}

func (x *NalarEvent) GetReply() *any.Any {
	if x != nil {
		return x.Reply
	}
	return nil
}

func (x *NalarEvent) GetResult() *any.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

type TrackEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string            `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	AnonymousId string            `protobuf:"bytes,2,opt,name=anonymousId,proto3" json:"anonymousId,omitempty"`
	Event       string            `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	Timestamp   string            `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Properties  map[string]string `protobuf:"bytes,5,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Integration map[string]string `protobuf:"bytes,6,rep,name=integration,proto3" json:"integration,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Context     *ContextFields    `protobuf:"bytes,7,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *TrackEvent) Reset() {
	*x = TrackEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackEvent) ProtoMessage() {}

func (x *TrackEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackEvent.ProtoReflect.Descriptor instead.
func (*TrackEvent) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{2}
}

func (x *TrackEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TrackEvent) GetAnonymousId() string {
	if x != nil {
		return x.AnonymousId
	}
	return ""
}

func (x *TrackEvent) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *TrackEvent) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *TrackEvent) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *TrackEvent) GetIntegration() map[string]string {
	if x != nil {
		return x.Integration
	}
	return nil
}

func (x *TrackEvent) GetContext() *ContextFields {
	if x != nil {
		return x.Context
	}
	return nil
}

type ContextFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locale   string          `protobuf:"bytes,1,opt,name=locale,proto3" json:"locale,omitempty"`
	App      *AppFields      `protobuf:"bytes,2,opt,name=app,proto3" json:"app,omitempty"`
	Campaign *CampaignFields `protobuf:"bytes,3,opt,name=campaign,proto3" json:"campaign,omitempty"`
	Device   *DeviceFields   `protobuf:"bytes,4,opt,name=device,proto3" json:"device,omitempty"`
	Location *LocationFields `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	Netowrk  *NetworkFields  `protobuf:"bytes,6,opt,name=netowrk,proto3" json:"netowrk,omitempty"`
	Os       *OsFields       `protobuf:"bytes,7,opt,name=os,proto3" json:"os,omitempty"`
	Page     *PageFields     `protobuf:"bytes,8,opt,name=page,proto3" json:"page,omitempty"`
	Screen   *ScreenFields   `protobuf:"bytes,9,opt,name=screen,proto3" json:"screen,omitempty"`
}

func (x *ContextFields) Reset() {
	*x = ContextFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextFields) ProtoMessage() {}

func (x *ContextFields) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextFields.ProtoReflect.Descriptor instead.
func (*ContextFields) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{3}
}

func (x *ContextFields) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *ContextFields) GetApp() *AppFields {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *ContextFields) GetCampaign() *CampaignFields {
	if x != nil {
		return x.Campaign
	}
	return nil
}

func (x *ContextFields) GetDevice() *DeviceFields {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *ContextFields) GetLocation() *LocationFields {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *ContextFields) GetNetowrk() *NetworkFields {
	if x != nil {
		return x.Netowrk
	}
	return nil
}

func (x *ContextFields) GetOs() *OsFields {
	if x != nil {
		return x.Os
	}
	return nil
}

func (x *ContextFields) GetPage() *PageFields {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ContextFields) GetScreen() *ScreenFields {
	if x != nil {
		return x.Screen
	}
	return nil
}

type AppFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Build   string `protobuf:"bytes,3,opt,name=build,proto3" json:"build,omitempty"`
}

func (x *AppFields) Reset() {
	*x = AppFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppFields) ProtoMessage() {}

func (x *AppFields) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppFields.ProtoReflect.Descriptor instead.
func (*AppFields) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{4}
}

func (x *AppFields) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppFields) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AppFields) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

type CampaignFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Source  string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Medium  string `protobuf:"bytes,3,opt,name=medium,proto3" json:"medium,omitempty"`
	Term    string `protobuf:"bytes,4,opt,name=term,proto3" json:"term,omitempty"`
	Content string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *CampaignFields) Reset() {
	*x = CampaignFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignFields) ProtoMessage() {}

func (x *CampaignFields) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignFields.ProtoReflect.Descriptor instead.
func (*CampaignFields) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{5}
}

func (x *CampaignFields) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CampaignFields) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *CampaignFields) GetMedium() string {
	if x != nil {
		return x.Medium
	}
	return ""
}

func (x *CampaignFields) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *CampaignFields) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type DeviceFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type              string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	AdvertisingId     string `protobuf:"bytes,3,opt,name=advertisingId,proto3" json:"advertisingId,omitempty"`
	AdTrackingEnabled string `protobuf:"bytes,4,opt,name=adTrackingEnabled,proto3" json:"adTrackingEnabled,omitempty"`
	Manufacturer      string `protobuf:"bytes,5,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Model             string `protobuf:"bytes,6,opt,name=model,proto3" json:"model,omitempty"`
	Name              string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeviceFields) Reset() {
	*x = DeviceFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceFields) ProtoMessage() {}

func (x *DeviceFields) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceFields.ProtoReflect.Descriptor instead.
func (*DeviceFields) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{6}
}

func (x *DeviceFields) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DeviceFields) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeviceFields) GetAdvertisingId() string {
	if x != nil {
		return x.AdvertisingId
	}
	return ""
}

func (x *DeviceFields) GetAdTrackingEnabled() string {
	if x != nil {
		return x.AdTrackingEnabled
	}
	return ""
}

func (x *DeviceFields) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *DeviceFields) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *DeviceFields) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type LocationFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  string `protobuf:"bytes,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude string `protobuf:"bytes,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Speed     string `protobuf:"bytes,3,opt,name=speed,proto3" json:"speed,omitempty"`
}

func (x *LocationFields) Reset() {
	*x = LocationFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationFields) ProtoMessage() {}

func (x *LocationFields) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationFields.ProtoReflect.Descriptor instead.
func (*LocationFields) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{7}
}

func (x *LocationFields) GetLatitude() string {
	if x != nil {
		return x.Latitude
	}
	return ""
}

func (x *LocationFields) GetLongitude() string {
	if x != nil {
		return x.Longitude
	}
	return ""
}

func (x *LocationFields) GetSpeed() string {
	if x != nil {
		return x.Speed
	}
	return ""
}

type NetworkFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bluetooth string `protobuf:"bytes,1,opt,name=bluetooth,proto3" json:"bluetooth,omitempty"`
	Carrier   string `protobuf:"bytes,2,opt,name=carrier,proto3" json:"carrier,omitempty"`
	Cellular  string `protobuf:"bytes,3,opt,name=cellular,proto3" json:"cellular,omitempty"`
	Wifi      string `protobuf:"bytes,4,opt,name=wifi,proto3" json:"wifi,omitempty"`
}

func (x *NetworkFields) Reset() {
	*x = NetworkFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkFields) ProtoMessage() {}

func (x *NetworkFields) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkFields.ProtoReflect.Descriptor instead.
func (*NetworkFields) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{8}
}

func (x *NetworkFields) GetBluetooth() string {
	if x != nil {
		return x.Bluetooth
	}
	return ""
}

func (x *NetworkFields) GetCarrier() string {
	if x != nil {
		return x.Carrier
	}
	return ""
}

func (x *NetworkFields) GetCellular() string {
	if x != nil {
		return x.Cellular
	}
	return ""
}

func (x *NetworkFields) GetWifi() string {
	if x != nil {
		return x.Wifi
	}
	return ""
}

type OsFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *OsFields) Reset() {
	*x = OsFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OsFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OsFields) ProtoMessage() {}

func (x *OsFields) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OsFields.ProtoReflect.Descriptor instead.
func (*OsFields) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{9}
}

func (x *OsFields) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OsFields) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type PageFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Referrer string `protobuf:"bytes,2,opt,name=referrer,proto3" json:"referrer,omitempty"`
	Search   string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	Title    string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Url      string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *PageFields) Reset() {
	*x = PageFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageFields) ProtoMessage() {}

func (x *PageFields) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageFields.ProtoReflect.Descriptor instead.
func (*PageFields) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{10}
}

func (x *PageFields) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PageFields) GetReferrer() string {
	if x != nil {
		return x.Referrer
	}
	return ""
}

func (x *PageFields) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *PageFields) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PageFields) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ScreenFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Density string `protobuf:"bytes,1,opt,name=density,proto3" json:"density,omitempty"`
	Height  string `protobuf:"bytes,2,opt,name=height,proto3" json:"height,omitempty"`
	Width   string `protobuf:"bytes,3,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *ScreenFields) Reset() {
	*x = ScreenFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenFields) ProtoMessage() {}

func (x *ScreenFields) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenFields.ProtoReflect.Descriptor instead.
func (*ScreenFields) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{11}
}

func (x *ScreenFields) GetDensity() string {
	if x != nil {
		return x.Density
	}
	return ""
}

func (x *ScreenFields) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *ScreenFields) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

type IdentifyFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string        `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	AnonymousId string        `protobuf:"bytes,2,opt,name=anonymousId,proto3" json:"anonymousId,omitempty"`
	Timestamp   string        `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Traits      *TraitsFields `protobuf:"bytes,5,opt,name=traits,proto3" json:"traits,omitempty"`
}

func (x *IdentifyFields) Reset() {
	*x = IdentifyFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentifyFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentifyFields) ProtoMessage() {}

func (x *IdentifyFields) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentifyFields.ProtoReflect.Descriptor instead.
func (*IdentifyFields) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{12}
}

func (x *IdentifyFields) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *IdentifyFields) GetAnonymousId() string {
	if x != nil {
		return x.AnonymousId
	}
	return ""
}

func (x *IdentifyFields) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *IdentifyFields) GetTraits() *TraitsFields {
	if x != nil {
		return x.Traits
	}
	return nil
}

type TraitsFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Age         int32          `protobuf:"varint,1,opt,name=age,proto3" json:"age,omitempty"`
	Avatar      string         `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Birthday    string         `protobuf:"bytes,3,opt,name=birthday,proto3" json:"birthday,omitempty"`
	CreatedAt   string         `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Description string         `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Email       string         `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	FirstName   string         `protobuf:"bytes,7,opt,name=firstName,proto3" json:"firstName,omitempty"`
	Gender      string         `protobuf:"bytes,8,opt,name=gender,proto3" json:"gender,omitempty"`
	Id          string         `protobuf:"bytes,9,opt,name=id,proto3" json:"id,omitempty"`
	LastName    string         `protobuf:"bytes,10,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Name        string         `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	Phone       string         `protobuf:"bytes,12,opt,name=phone,proto3" json:"phone,omitempty"`
	Title       string         `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	Username    string         `protobuf:"bytes,14,opt,name=username,proto3" json:"username,omitempty"`
	Website     string         `protobuf:"bytes,15,opt,name=website,proto3" json:"website,omitempty"`
	Address     *AddressFields `protobuf:"bytes,16,opt,name=address,proto3" json:"address,omitempty"`
	Company     *CompanyFields `protobuf:"bytes,17,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *TraitsFields) Reset() {
	*x = TraitsFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraitsFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraitsFields) ProtoMessage() {}

func (x *TraitsFields) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraitsFields.ProtoReflect.Descriptor instead.
func (*TraitsFields) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{13}
}

func (x *TraitsFields) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *TraitsFields) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *TraitsFields) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *TraitsFields) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *TraitsFields) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TraitsFields) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *TraitsFields) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *TraitsFields) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *TraitsFields) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TraitsFields) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *TraitsFields) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TraitsFields) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *TraitsFields) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TraitsFields) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TraitsFields) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *TraitsFields) GetAddress() *AddressFields {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *TraitsFields) GetCompany() *CompanyFields {
	if x != nil {
		return x.Company
	}
	return nil
}

type AddressFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City       string `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Country    string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	PostalCode string `protobuf:"bytes,3,opt,name=postalCode,proto3" json:"postalCode,omitempty"`
	State      string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Street     string `protobuf:"bytes,5,opt,name=street,proto3" json:"street,omitempty"`
}

func (x *AddressFields) Reset() {
	*x = AddressFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressFields) ProtoMessage() {}

func (x *AddressFields) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressFields.ProtoReflect.Descriptor instead.
func (*AddressFields) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{14}
}

func (x *AddressFields) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddressFields) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AddressFields) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *AddressFields) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AddressFields) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

type CompanyFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Industry      string `protobuf:"bytes,3,opt,name=industry,proto3" json:"industry,omitempty"`
	EmployeeCount int32  `protobuf:"varint,4,opt,name=employeeCount,proto3" json:"employeeCount,omitempty"`
	Plan          string `protobuf:"bytes,5,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *CompanyFields) Reset() {
	*x = CompanyFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyFields) ProtoMessage() {}

func (x *CompanyFields) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analytic_v1_Analytic_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyFields.ProtoReflect.Descriptor instead.
func (*CompanyFields) Descriptor() ([]byte, []int) {
	return file_proto_analytic_v1_Analytic_proto_rawDescGZIP(), []int{15}
}

func (x *CompanyFields) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CompanyFields) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CompanyFields) GetIndustry() string {
	if x != nil {
		return x.Industry
	}
	return ""
}

func (x *CompanyFields) GetEmployeeCount() int32 {
	if x != nil {
		return x.EmployeeCount
	}
	return 0
}

func (x *CompanyFields) GetPlan() string {
	if x != nil {
		return x.Plan
	}
	return ""
}

var File_proto_analytic_v1_Analytic_proto protoreflect.FileDescriptor

var file_proto_analytic_v1_Analytic_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x2f, 0x76, 0x31, 0x2f, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67,
	0x67, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x04, 0x0a, 0x08,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x72, 0x69, 0x78, 0x61, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x78, 0x61, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x46, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x10, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9e, 0x03, 0x0a, 0x0a, 0x4e, 0x61, 0x6c, 0x61, 0x72, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x67, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x61, 0x62, 0x75, 0x70, 0x61,
	0x74, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x61, 0x62, 0x75, 0x70,
	0x61, 0x74, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74,
	0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x6c, 0x75, 0x72, 0x61, 0x68, 0x61, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x65, 0x6c, 0x75, 0x72, 0x61, 0x68, 0x61, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x76, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x65, 0x76, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x05,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd9, 0x03, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x4e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61,
	0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xeb, 0x03, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x03,
	0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x69, 0x78,
	0x61, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x3e, 0x0a,
	0x08, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x38, 0x0a,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x69, 0x78,
	0x61, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x6f, 0x77,
	0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61,
	0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x07, 0x6e, 0x65, 0x74,
	0x6f, 0x77, 0x72, 0x6b, 0x12, 0x2c, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x02,
	0x6f, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x22, 0x4f, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xd4, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x64,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x60, 0x0a,
	0x0e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x22,
	0x77, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x6c, 0x6c,
	0x75, 0x6c, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x6c, 0x6c,
	0x75, 0x6c, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x66, 0x69, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x77, 0x69, 0x66, 0x69, 0x22, 0x38, 0x0a, 0x08, 0x4f, 0x73, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x7c, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0x56, 0x0a, 0x0c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x22, 0xa2, 0x01, 0x0a, 0x0e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d,
	0x6f, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x38, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x06, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x22, 0xfc, 0x03,
	0x0a, 0x0c, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73,
	0x69, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x3b, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0x8b, 0x01, 0x0a,
	0x0d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x0d, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x32, 0x8e, 0x02, 0x0a, 0x0f, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x05, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x36, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x74, 0x69, 0x63, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x3a, 0x01, 0x2a, 0x92, 0x41,
	0x12, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x22, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x39, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x3a,
	0x01, 0x2a, 0x92, 0x41, 0x12, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x42, 0xd3, 0x02, 0x92, 0x41, 0xcf, 0x02, 0x12, 0xba,
	0x01, 0x0a, 0x1a, 0x50, 0x72, 0x69, 0x78, 0x61, 0x20, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x41, 0x50, 0x49, 0x22, 0x45, 0x0a,
	0x0a, 0x50, 0x72, 0x69, 0x78, 0x61, 0x20, 0x54, 0x65, 0x63, 0x68, 0x12, 0x27, 0x68, 0x74, 0x74,
	0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x70, 0x72, 0x69, 0x78, 0x61, 0x2d, 0x61, 0x69, 0x2f, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x74, 0x65, 0x63, 0x68, 0x40, 0x70, 0x72, 0x69, 0x78, 0x61,
	0x2e, 0x63, 0x6f, 0x6d, 0x2a, 0x50, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x78, 0x61, 0x20, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2d,
	0x61, 0x69, 0x2f, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62,
	0x6c, 0x6f, 0x62, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x4c, 0x49, 0x43, 0x45, 0x4e,
	0x53, 0x45, 0x2e, 0x74, 0x78, 0x74, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x1a, 0x10, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x32, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x61, 0x69, 0x2a, 0x02, 0x01,
	0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a,
	0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x44, 0x0a, 0x23, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x15, 0x08, 0x02, 0x1a, 0x0f, 0x58, 0x2d, 0x50, 0x72, 0x69,
	0x78, 0x61, 0x2d, 0x41, 0x50, 0x49, 0x2d, 0x4b, 0x65, 0x79, 0x20, 0x02, 0x0a, 0x1d, 0x0a, 0x06,
	0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x13, 0x08, 0x02, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x62, 0x10, 0x0a, 0x0e, 0x0a,
	0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_analytic_v1_Analytic_proto_rawDescOnce sync.Once
	file_proto_analytic_v1_Analytic_proto_rawDescData = file_proto_analytic_v1_Analytic_proto_rawDesc
)

func file_proto_analytic_v1_Analytic_proto_rawDescGZIP() []byte {
	file_proto_analytic_v1_Analytic_proto_rawDescOnce.Do(func() {
		file_proto_analytic_v1_Analytic_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_analytic_v1_Analytic_proto_rawDescData)
	})
	return file_proto_analytic_v1_Analytic_proto_rawDescData
}

var file_proto_analytic_v1_Analytic_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_proto_analytic_v1_Analytic_proto_goTypes = []interface{}{
	(*EventLog)(nil),            // 0: prixa.analytics.v1.EventLog
	(*NalarEvent)(nil),          // 1: prixa.analytics.v1.NalarEvent
	(*TrackEvent)(nil),          // 2: prixa.analytics.v1.TrackEvent
	(*ContextFields)(nil),       // 3: prixa.analytics.v1.ContextFields
	(*AppFields)(nil),           // 4: prixa.analytics.v1.AppFields
	(*CampaignFields)(nil),      // 5: prixa.analytics.v1.CampaignFields
	(*DeviceFields)(nil),        // 6: prixa.analytics.v1.DeviceFields
	(*LocationFields)(nil),      // 7: prixa.analytics.v1.LocationFields
	(*NetworkFields)(nil),       // 8: prixa.analytics.v1.NetworkFields
	(*OsFields)(nil),            // 9: prixa.analytics.v1.OsFields
	(*PageFields)(nil),          // 10: prixa.analytics.v1.PageFields
	(*ScreenFields)(nil),        // 11: prixa.analytics.v1.ScreenFields
	(*IdentifyFields)(nil),      // 12: prixa.analytics.v1.IdentifyFields
	(*TraitsFields)(nil),        // 13: prixa.analytics.v1.TraitsFields
	(*AddressFields)(nil),       // 14: prixa.analytics.v1.AddressFields
	(*CompanyFields)(nil),       // 15: prixa.analytics.v1.CompanyFields
	nil,                         // 16: prixa.analytics.v1.EventLog.MetadataEntry
	nil,                         // 17: prixa.analytics.v1.TrackEvent.PropertiesEntry
	nil,                         // 18: prixa.analytics.v1.TrackEvent.IntegrationEntry
	(*timestamp.Timestamp)(nil), // 19: google.protobuf.Timestamp
	(*any.Any)(nil),             // 20: google.protobuf.Any
	(*empty.Empty)(nil),         // 21: google.protobuf.Empty
}
var file_proto_analytic_v1_Analytic_proto_depIdxs = []int32{
	19, // 0: prixa.analytics.v1.EventLog.date:type_name -> google.protobuf.Timestamp
	16, // 1: prixa.analytics.v1.EventLog.metadata:type_name -> prixa.analytics.v1.EventLog.MetadataEntry
	0,  // 2: prixa.analytics.v1.NalarEvent.eventLog:type_name -> prixa.analytics.v1.EventLog
	20, // 3: prixa.analytics.v1.NalarEvent.reply:type_name -> google.protobuf.Any
	20, // 4: prixa.analytics.v1.NalarEvent.result:type_name -> google.protobuf.Any
	17, // 5: prixa.analytics.v1.TrackEvent.properties:type_name -> prixa.analytics.v1.TrackEvent.PropertiesEntry
	18, // 6: prixa.analytics.v1.TrackEvent.integration:type_name -> prixa.analytics.v1.TrackEvent.IntegrationEntry
	3,  // 7: prixa.analytics.v1.TrackEvent.context:type_name -> prixa.analytics.v1.ContextFields
	4,  // 8: prixa.analytics.v1.ContextFields.app:type_name -> prixa.analytics.v1.AppFields
	5,  // 9: prixa.analytics.v1.ContextFields.campaign:type_name -> prixa.analytics.v1.CampaignFields
	6,  // 10: prixa.analytics.v1.ContextFields.device:type_name -> prixa.analytics.v1.DeviceFields
	7,  // 11: prixa.analytics.v1.ContextFields.location:type_name -> prixa.analytics.v1.LocationFields
	8,  // 12: prixa.analytics.v1.ContextFields.netowrk:type_name -> prixa.analytics.v1.NetworkFields
	9,  // 13: prixa.analytics.v1.ContextFields.os:type_name -> prixa.analytics.v1.OsFields
	10, // 14: prixa.analytics.v1.ContextFields.page:type_name -> prixa.analytics.v1.PageFields
	11, // 15: prixa.analytics.v1.ContextFields.screen:type_name -> prixa.analytics.v1.ScreenFields
	13, // 16: prixa.analytics.v1.IdentifyFields.traits:type_name -> prixa.analytics.v1.TraitsFields
	14, // 17: prixa.analytics.v1.TraitsFields.address:type_name -> prixa.analytics.v1.AddressFields
	15, // 18: prixa.analytics.v1.TraitsFields.company:type_name -> prixa.analytics.v1.CompanyFields
	2,  // 19: prixa.analytics.v1.AnalyticService.Track:input_type -> prixa.analytics.v1.TrackEvent
	12, // 20: prixa.analytics.v1.AnalyticService.Identify:input_type -> prixa.analytics.v1.IdentifyFields
	21, // 21: prixa.analytics.v1.AnalyticService.Track:output_type -> google.protobuf.Empty
	21, // 22: prixa.analytics.v1.AnalyticService.Identify:output_type -> google.protobuf.Empty
	21, // [21:23] is the sub-list for method output_type
	19, // [19:21] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_proto_analytic_v1_Analytic_proto_init() }
func file_proto_analytic_v1_Analytic_proto_init() {
	if File_proto_analytic_v1_Analytic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_analytic_v1_Analytic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_analytic_v1_Analytic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NalarEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_analytic_v1_Analytic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_analytic_v1_Analytic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_analytic_v1_Analytic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_analytic_v1_Analytic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_analytic_v1_Analytic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_analytic_v1_Analytic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_analytic_v1_Analytic_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_analytic_v1_Analytic_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OsFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_analytic_v1_Analytic_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_analytic_v1_Analytic_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScreenFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_analytic_v1_Analytic_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentifyFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_analytic_v1_Analytic_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraitsFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_analytic_v1_Analytic_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_analytic_v1_Analytic_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_analytic_v1_Analytic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_analytic_v1_Analytic_proto_goTypes,
		DependencyIndexes: file_proto_analytic_v1_Analytic_proto_depIdxs,
		MessageInfos:      file_proto_analytic_v1_Analytic_proto_msgTypes,
	}.Build()
	File_proto_analytic_v1_Analytic_proto = out.File
	file_proto_analytic_v1_Analytic_proto_rawDesc = nil
	file_proto_analytic_v1_Analytic_proto_goTypes = nil
	file_proto_analytic_v1_Analytic_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AnalyticServiceClient is the client API for AnalyticService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnalyticServiceClient interface {
	Track(ctx context.Context, in *TrackEvent, opts ...grpc.CallOption) (*empty.Empty, error)
	Identify(ctx context.Context, in *IdentifyFields, opts ...grpc.CallOption) (*empty.Empty, error)
}

type analyticServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAnalyticServiceClient(cc grpc.ClientConnInterface) AnalyticServiceClient {
	return &analyticServiceClient{cc}
}

func (c *analyticServiceClient) Track(ctx context.Context, in *TrackEvent, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/prixa.analytics.v1.AnalyticService/Track", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *analyticServiceClient) Identify(ctx context.Context, in *IdentifyFields, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/prixa.analytics.v1.AnalyticService/Identify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AnalyticServiceServer is the server API for AnalyticService service.
type AnalyticServiceServer interface {
	Track(context.Context, *TrackEvent) (*empty.Empty, error)
	Identify(context.Context, *IdentifyFields) (*empty.Empty, error)
}

// UnimplementedAnalyticServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAnalyticServiceServer struct {
}

func (*UnimplementedAnalyticServiceServer) Track(context.Context, *TrackEvent) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Track not implemented")
}
func (*UnimplementedAnalyticServiceServer) Identify(context.Context, *IdentifyFields) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Identify not implemented")
}

func RegisterAnalyticServiceServer(s *grpc.Server, srv AnalyticServiceServer) {
	s.RegisterService(&_AnalyticService_serviceDesc, srv)
}

func _AnalyticService_Track_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TrackEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnalyticServiceServer).Track(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.analytics.v1.AnalyticService/Track",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnalyticServiceServer).Track(ctx, req.(*TrackEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnalyticService_Identify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdentifyFields)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnalyticServiceServer).Identify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.analytics.v1.AnalyticService/Identify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnalyticServiceServer).Identify(ctx, req.(*IdentifyFields))
	}
	return interceptor(ctx, in, info, handler)
}

var _AnalyticService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "prixa.analytics.v1.AnalyticService",
	HandlerType: (*AnalyticServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Track",
			Handler:    _AnalyticService_Track_Handler,
		},
		{
			MethodName: "Identify",
			Handler:    _AnalyticService_Identify_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/analytic/v1/Analytic.proto",
}
