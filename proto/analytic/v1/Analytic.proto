syntax = "proto3";

package prixa.analytic.v1;
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    host: "engine2.prixa.ai";
	info: {
		title: "Prixa Analytic Service API";
		version: "1.0";
		contact: {
			name: "Prixa Tech";
			url: "https://github.com/prixa-ai/prixa-proto";
			email: "tech@prixa.com";
		};
		license: {
			name: "Prixa License";
			url: "https://github.com/prixa-ai/prixa-proto/blob/master/LICENSE.txt";
		};
    };
	schemes: HTTP;
	schemes: HTTPS;
    consumes: "application/json";
    produces: "application/json";
    security_definitions: {
        security: {
            key: "ApiKeyAuth";
            value: {
                type: TYPE_API_KEY;
                in: IN_HEADER;
                name: "X-Prixa-API-Key";
            }
        }
    }
};

service AnalyticsService {
    rpc TrackData (TrackDataRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/v1/analytics/track"
        };
    }
}

message TrackDataRequest {
    string description = 1;
    string eventType = 2;
}

message EventLog {
    string logID = 1;
    google.protobuf.Timestamp date = 2;
    string prixaAPIKey = 3;
    string environment = 4;
    string partnerID = 5;
    string partnerName = 6;
    string ip = 7;
    string userID = 8;
    string userName = 9;
    string userAgent = 10;
    string type = 11;
    string hostname = 12;
    string description = 13;
    google.protobuf.Any metadata = 14;
}