{
  "swagger": "2.0",
  "info": {
    "title": "Prixa Telemedicine Service API",
    "version": "1.0",
    "contact": {
      "name": "Prixa Tech",
      "url": "https://github.com/prixa-ai/prixa-proto",
      "email": "tech@prixa.com"
    },
    "license": {
      "name": "Prixa License",
      "url": "https://github.com/prixa-ai/prixa-proto/blob/master/LICENSE.txt"
    }
  },
  "host": "engine2.prixa.ai",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/telemedicine/appointment": {
      "post": {
        "summary": "Create new appointment",
        "operationId": "PostAppointmentBookingData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AppointmentBookingResponseData"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PostAppointmentBookingRequestData"
            }
          }
        ],
        "tags": [
          "TelemedicineService"
        ],
        "security": [
          {
            "ApiKeyAuth": [],
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/telemedicine/appointment/{bookingId}": {
      "get": {
        "summary": "Get appointment booking data",
        "operationId": "GetAppointmentBookingData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AppointmentBookingResponseData"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "bookingId",
            "description": "Booking ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TelemedicineService"
        ],
        "security": [
          {
            "ApiKeyAuth": [],
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/telemedicine/appointments": {
      "get": {
        "summary": "Get all booking appointments data",
        "operationId": "GetAppointmentBookingsData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AppointmentBookingsResponseData"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "param.patientName",
            "description": "Patient name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "param.hospitalId",
            "description": "Hospital ID.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "param.doctorId",
            "description": "Doctor ID.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromDate",
            "description": "From date.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "toDate",
            "description": "To date.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "TelemedicineService"
        ],
        "security": [
          {
            "ApiKeyAuth": [],
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/telemedicine/area": {
      "get": {
        "summary": "Get areaa list data",
        "operationId": "GetAreasData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AreasResponseData"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "TelemedicineService"
        ]
      }
    },
    "/api/v1/telemedicine/area/{areaId}": {
      "get": {
        "summary": "Get area detail data",
        "operationId": "GetAreaData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AreaResponseData"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "areaId",
            "description": "Area ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TelemedicineService"
        ]
      }
    },
    "/api/v1/telemedicine/conversation/init": {
      "get": {
        "summary": "InitConversation is initialize conversation between user and doctor",
        "operationId": "InitConversation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InitConversationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "TelemedicineService"
        ],
        "security": [
          {
            "ApiKeyAuth": [],
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/telemedicine/doctor": {
      "get": {
        "summary": "Get doctors list data",
        "operationId": "GetDoctorsData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DoctorsResponseData"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "param.areaId",
            "description": "Area ID.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "param.nameKeyword",
            "description": "Doctor keyword.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "param.specialityId",
            "description": "Doctor speciality ID.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "param.hospitalId",
            "description": "Doctor hospital ID.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TelemedicineService"
        ]
      }
    },
    "/api/v1/telemedicine/doctor/{doctorId}": {
      "get": {
        "summary": "Get doctor data",
        "operationId": "GetDoctorData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DoctorsResponseData"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "doctorId",
            "description": "Doctor ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TelemedicineService"
        ]
      }
    },
    "/api/v1/telemedicine/hospital": {
      "get": {
        "summary": "Get hospitals list data",
        "operationId": "GetHospitalsData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1HospitalsResponseData"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "param.areaId",
            "description": "Area ID.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "param.nameKeyword",
            "description": "Hospital keyword.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "param.specialityId",
            "description": "Hospital speciality ID.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "param.coordinate.lattitude",
            "description": "Latitude.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "param.coordinate.longitude",
            "description": "Longitude.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TelemedicineService"
        ]
      }
    },
    "/api/v1/telemedicine/hospital/{hospitalId}": {
      "get": {
        "summary": "Get hostpital detail data",
        "operationId": "GetHospitalData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1HospitalResponseData"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "hospitalId",
            "description": "Hospital ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TelemedicineService"
        ]
      }
    },
    "/api/v1/telemedicine/speciality": {
      "get": {
        "summary": "Get specialities list data",
        "operationId": "GetSpecialitiesData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SpecialitiesResponseData"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "areaId",
            "description": "Area ID.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "hospitalId",
            "description": "Hospital ID.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TelemedicineService"
        ]
      }
    },
    "/api/v1/telemedicine/speciality/{specialityId}": {
      "get": {
        "summary": "Get speciality detail data",
        "operationId": "GetSpecialityData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SpecialityResponseData"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "specialityId",
            "description": "Speciality ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TelemedicineService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AddressData": {
      "type": "object",
      "properties": {
        "zipCode": {
          "type": "string",
          "title": "Kode pos"
        },
        "village": {
          "type": "string",
          "title": "Kelurahan"
        },
        "subDistrict": {
          "type": "string",
          "title": "Kecamatan"
        },
        "district": {
          "type": "string",
          "title": "Kota / kabupaten"
        },
        "province": {
          "type": "string",
          "title": "Provinsi"
        }
      }
    },
    "v1AppointmentBookingData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Booking ID"
        },
        "name": {
          "type": "string",
          "title": "Patient name"
        },
        "nik": {
          "type": "string",
          "title": "Patient NIK"
        },
        "email": {
          "type": "string",
          "title": "Patient email"
        },
        "phoneNumber": {
          "type": "string",
          "title": "Patient phone number"
        },
        "paymentMethod": {
          "type": "string",
          "title": "Patient payment method"
        },
        "bookingTime": {
          "type": "string",
          "format": "date-time",
          "title": "Appointment booking time"
        },
        "doctorId": {
          "type": "string",
          "title": "Doctor ID"
        },
        "doctorName": {
          "type": "string",
          "title": "Doctor name"
        },
        "hospitalId": {
          "type": "string",
          "title": "Hospital ID"
        },
        "hospitalName": {
          "type": "string",
          "title": "Hospital name"
        },
        "hospitalAddress": {
          "type": "string",
          "title": "Hospital address"
        },
        "bookingStatus": {
          "type": "string",
          "title": "Appointment booking status"
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "title": "Appointment created time"
        }
      }
    },
    "v1AppointmentBookingResponseData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "Appointment booking response status"
        },
        "message": {
          "type": "string",
          "title": "Appointment booking response message"
        },
        "data": {
          "$ref": "#/definitions/v1AppointmentBookingData",
          "title": "Appointment booking response data"
        }
      }
    },
    "v1AppointmentBookingsResponseData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "Appointment status"
        },
        "message": {
          "type": "string",
          "title": "Appointment message"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AppointmentBookingData"
          },
          "title": "Appointment data"
        }
      }
    },
    "v1AreaData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Area ID"
        },
        "name": {
          "type": "string",
          "title": "Area name"
        },
        "imageUrl": {
          "type": "string",
          "title": "Area image url"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "Area last update"
        },
        "source": {
          "$ref": "#/definitions/v1SourceData",
          "title": "Area source"
        }
      }
    },
    "v1AreaResponseData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "Area response status"
        },
        "message": {
          "type": "string",
          "title": "Area response message"
        },
        "data": {
          "$ref": "#/definitions/v1AreaData",
          "title": "Area response data"
        }
      }
    },
    "v1AreasResponseData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "Areas response status"
        },
        "message": {
          "type": "string",
          "title": "Areas response message"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AreaData"
          },
          "title": "Areas response data"
        }
      }
    },
    "v1ContactData": {
      "type": "object",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "title": "Phone no"
        },
        "email": {
          "type": "string",
          "title": "Email"
        }
      }
    },
    "v1CoordinateData": {
      "type": "object",
      "properties": {
        "lattitude": {
          "type": "string",
          "title": "Latitude"
        },
        "longitude": {
          "type": "string",
          "title": "Longitude"
        }
      }
    },
    "v1DoctorData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Doctor ID"
        },
        "name": {
          "type": "string",
          "title": "Doctor name"
        },
        "speciality": {
          "$ref": "#/definitions/v1SpecialityData",
          "title": "Doctor speciality"
        },
        "contact": {
          "$ref": "#/definitions/v1ContactData",
          "title": "Doctor contact"
        },
        "imageUrl": {
          "type": "string",
          "title": "Doctor image url"
        },
        "hospitalsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1HospitalData"
          },
          "title": "Doctor hospital list"
        }
      }
    },
    "v1DoctorsResponseData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "Doctors response status"
        },
        "message": {
          "type": "string",
          "title": "Doctors response message"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1DoctorData"
          },
          "title": "Doctors response data"
        }
      }
    },
    "v1FindAppointmentBookingParamData": {
      "type": "object",
      "properties": {
        "patientName": {
          "type": "string",
          "title": "Patient name"
        },
        "hospitalId": {
          "type": "string",
          "title": "Hospital ID"
        },
        "doctorId": {
          "type": "string",
          "title": "Doctor ID"
        }
      }
    },
    "v1GetDoctorParamData": {
      "type": "object",
      "properties": {
        "areaId": {
          "type": "string",
          "title": "Area ID"
        },
        "nameKeyword": {
          "type": "string",
          "title": "Doctor keyword"
        },
        "specialityId": {
          "type": "string",
          "title": "Doctor speciality ID"
        },
        "hospitalId": {
          "type": "string",
          "title": "Doctor hospital ID"
        }
      }
    },
    "v1GetHospitalParamData": {
      "type": "object",
      "properties": {
        "areaId": {
          "type": "string",
          "title": "Area ID"
        },
        "nameKeyword": {
          "type": "string",
          "title": "Hospital keyword"
        },
        "specialityId": {
          "type": "string",
          "title": "Hospital speciality ID"
        },
        "coordinate": {
          "$ref": "#/definitions/v1CoordinateData",
          "title": "Hospital coordinate (lat,lon)"
        }
      }
    },
    "v1HospitalData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Hospital id"
        },
        "name": {
          "type": "string",
          "title": "Hospital name"
        },
        "alias": {
          "type": "string",
          "title": "Hospital alias"
        },
        "address": {
          "$ref": "#/definitions/v1AddressData",
          "title": "Hospital address"
        },
        "contact": {
          "$ref": "#/definitions/v1ContactData",
          "title": "Hospital contact"
        },
        "coordinate": {
          "$ref": "#/definitions/v1CoordinateData",
          "title": "Hospital coordinate"
        },
        "imageUrl": {
          "type": "string",
          "title": "Hospital image url"
        },
        "accreditation": {
          "type": "string",
          "title": "Hospital accreditation"
        },
        "specialitiesList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SpecialityData"
          },
          "title": "Hospital specialities"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "Hospital last update data"
        },
        "source": {
          "$ref": "#/definitions/v1SourceData",
          "title": "Hospital source"
        }
      }
    },
    "v1HospitalResponseData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "Hospital response status"
        },
        "message": {
          "type": "string",
          "title": "Hospital response message"
        },
        "data": {
          "$ref": "#/definitions/v1HospitalData",
          "title": "Hospital response data"
        }
      }
    },
    "v1HospitalsResponseData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "Hospitals response status"
        },
        "message": {
          "type": "string",
          "title": "Hospitals response message"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1HospitalData"
          },
          "title": "Hospitals response data"
        }
      }
    },
    "v1InitConversationResponse": {
      "type": "object",
      "properties": {
        "sessionID": {
          "type": "string"
        },
        "websiteID": {
          "type": "string"
        }
      }
    },
    "v1PostAppointmentBookingRequestData": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Patient name"
        },
        "nik": {
          "type": "string",
          "title": "Patient NIk"
        },
        "email": {
          "type": "string",
          "title": "Patient email"
        },
        "phoneNumber": {
          "type": "string",
          "title": "Patient phone number"
        },
        "paymentMethod": {
          "type": "string",
          "title": "Payment method"
        },
        "bookingTime": {
          "type": "string",
          "format": "date-time",
          "title": "Booking time"
        },
        "doctorId": {
          "type": "string",
          "title": "Doctor ID"
        },
        "hospitalId": {
          "type": "string",
          "title": "Hospital ID"
        }
      }
    },
    "v1SourceData": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "title": "Source ID"
        },
        "sourceName": {
          "type": "string",
          "title": "Source Name"
        },
        "originId": {
          "type": "string",
          "title": "Origin ID"
        }
      }
    },
    "v1SpecialitiesResponseData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "Specialities response status"
        },
        "message": {
          "type": "string",
          "title": "Specialities response message"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SpecialityData"
          },
          "title": "Specialities response data"
        }
      }
    },
    "v1SpecialityData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Speciality ID"
        },
        "name": {
          "type": "string",
          "title": "Speciality name"
        },
        "nameIndo": {
          "type": "string",
          "title": "Speciality name indo"
        },
        "imageUrl": {
          "type": "string",
          "title": "Speciality image url"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "Speciality last updated"
        },
        "source": {
          "$ref": "#/definitions/v1SourceData",
          "title": "Speciality source"
        }
      }
    },
    "v1SpecialityResponseData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "Speciality response status"
        },
        "message": {
          "type": "string",
          "title": "Speciality response message"
        },
        "data": {
          "$ref": "#/definitions/v1SpecialityData",
          "title": "Speciality response data"
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "X-Prixa-API-Key",
      "in": "header"
    },
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}
