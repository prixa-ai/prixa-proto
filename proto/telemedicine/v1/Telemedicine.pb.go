// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.11.4
// source: proto/telemedicine/v1/Telemedicine.proto

package prixa_telemedicine_v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetAppointmentBookingsRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Param
	Param *FindAppointmentBookingParamData `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
	// From date
	FromDate *timestamp.Timestamp `protobuf:"bytes,2,opt,name=fromDate,proto3" json:"fromDate,omitempty"`
	// To date
	ToDate *timestamp.Timestamp `protobuf:"bytes,3,opt,name=toDate,proto3" json:"toDate,omitempty"`
}

func (x *GetAppointmentBookingsRequestData) Reset() {
	*x = GetAppointmentBookingsRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppointmentBookingsRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointmentBookingsRequestData) ProtoMessage() {}

func (x *GetAppointmentBookingsRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointmentBookingsRequestData.ProtoReflect.Descriptor instead.
func (*GetAppointmentBookingsRequestData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{0}
}

func (x *GetAppointmentBookingsRequestData) GetParam() *FindAppointmentBookingParamData {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *GetAppointmentBookingsRequestData) GetFromDate() *timestamp.Timestamp {
	if x != nil {
		return x.FromDate
	}
	return nil
}

func (x *GetAppointmentBookingsRequestData) GetToDate() *timestamp.Timestamp {
	if x != nil {
		return x.ToDate
	}
	return nil
}

type FindAppointmentBookingParamData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Patient name
	PatientName string `protobuf:"bytes,1,opt,name=patientName,proto3" json:"patientName,omitempty"`
	// Hospital ID
	HospitalId string `protobuf:"bytes,2,opt,name=hospitalId,proto3" json:"hospitalId,omitempty"`
	// Doctor ID
	DoctorId string `protobuf:"bytes,3,opt,name=doctorId,proto3" json:"doctorId,omitempty"`
	// User Email
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *FindAppointmentBookingParamData) Reset() {
	*x = FindAppointmentBookingParamData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAppointmentBookingParamData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAppointmentBookingParamData) ProtoMessage() {}

func (x *FindAppointmentBookingParamData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAppointmentBookingParamData.ProtoReflect.Descriptor instead.
func (*FindAppointmentBookingParamData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{1}
}

func (x *FindAppointmentBookingParamData) GetPatientName() string {
	if x != nil {
		return x.PatientName
	}
	return ""
}

func (x *FindAppointmentBookingParamData) GetHospitalId() string {
	if x != nil {
		return x.HospitalId
	}
	return ""
}

func (x *FindAppointmentBookingParamData) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *FindAppointmentBookingParamData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type GetAppointmentBookingRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Booking ID
	BookingId string `protobuf:"bytes,1,opt,name=bookingId,proto3" json:"bookingId,omitempty"`
}

func (x *GetAppointmentBookingRequestData) Reset() {
	*x = GetAppointmentBookingRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppointmentBookingRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointmentBookingRequestData) ProtoMessage() {}

func (x *GetAppointmentBookingRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointmentBookingRequestData.ProtoReflect.Descriptor instead.
func (*GetAppointmentBookingRequestData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{2}
}

func (x *GetAppointmentBookingRequestData) GetBookingId() string {
	if x != nil {
		return x.BookingId
	}
	return ""
}

type PostAppointmentBookingRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Patient name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Patient NIk
	Nik string `protobuf:"bytes,2,opt,name=nik,proto3" json:"nik,omitempty"`
	// Patient email
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// Patient phone number
	PhoneNumber string `protobuf:"bytes,4,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	// Payment method
	PaymentMethod string `protobuf:"bytes,5,opt,name=paymentMethod,proto3" json:"paymentMethod,omitempty"`
	//AppoinmentDate
	AppointmentDate string `protobuf:"bytes,6,opt,name=appointmentDate,proto3" json:"appointmentDate,omitempty"`
	//Appointment time
	AppointmentTime string `protobuf:"bytes,7,opt,name=appointmentTime,proto3" json:"appointmentTime,omitempty"`
	// Doctor ID
	DoctorId string `protobuf:"bytes,8,opt,name=doctorId,proto3" json:"doctorId,omitempty"`
	// Hospital ID
	HospitalId string `protobuf:"bytes,9,opt,name=hospitalId,proto3" json:"hospitalId,omitempty"`
	// Schedule ID
	ScheduleId string `protobuf:"bytes,10,opt,name=scheduleId,proto3" json:"scheduleId,omitempty"`
	// birthdate
	BirthDate string `protobuf:"bytes,11,opt,name=birthDate,proto3" json:"birthDate,omitempty"`
}

func (x *PostAppointmentBookingRequestData) Reset() {
	*x = PostAppointmentBookingRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAppointmentBookingRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAppointmentBookingRequestData) ProtoMessage() {}

func (x *PostAppointmentBookingRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAppointmentBookingRequestData.ProtoReflect.Descriptor instead.
func (*PostAppointmentBookingRequestData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{3}
}

func (x *PostAppointmentBookingRequestData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PostAppointmentBookingRequestData) GetNik() string {
	if x != nil {
		return x.Nik
	}
	return ""
}

func (x *PostAppointmentBookingRequestData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PostAppointmentBookingRequestData) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *PostAppointmentBookingRequestData) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *PostAppointmentBookingRequestData) GetAppointmentDate() string {
	if x != nil {
		return x.AppointmentDate
	}
	return ""
}

func (x *PostAppointmentBookingRequestData) GetAppointmentTime() string {
	if x != nil {
		return x.AppointmentTime
	}
	return ""
}

func (x *PostAppointmentBookingRequestData) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *PostAppointmentBookingRequestData) GetHospitalId() string {
	if x != nil {
		return x.HospitalId
	}
	return ""
}

func (x *PostAppointmentBookingRequestData) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *PostAppointmentBookingRequestData) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

type AppointmentBookingsResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// response status
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// response message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Appointment data
	Data []*AppointmentBookingData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AppointmentBookingsResponseData) Reset() {
	*x = AppointmentBookingsResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentBookingsResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentBookingsResponseData) ProtoMessage() {}

func (x *AppointmentBookingsResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentBookingsResponseData.ProtoReflect.Descriptor instead.
func (*AppointmentBookingsResponseData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{4}
}

func (x *AppointmentBookingsResponseData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AppointmentBookingsResponseData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AppointmentBookingsResponseData) GetData() []*AppointmentBookingData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PaymentMethodResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// response status
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// response message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// PaymentMethod data
	Data []*PaymentMethodData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PaymentMethodResponseData) Reset() {
	*x = PaymentMethodResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethodResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethodResponseData) ProtoMessage() {}

func (x *PaymentMethodResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethodResponseData.ProtoReflect.Descriptor instead.
func (*PaymentMethodResponseData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{5}
}

func (x *PaymentMethodResponseData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PaymentMethodResponseData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PaymentMethodResponseData) GetData() []*PaymentMethodData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PaymentMethodData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//payment method name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PaymentMethodData) Reset() {
	*x = PaymentMethodData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethodData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethodData) ProtoMessage() {}

func (x *PaymentMethodData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethodData.ProtoReflect.Descriptor instead.
func (*PaymentMethodData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{6}
}

func (x *PaymentMethodData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AppointmentBookingResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Appointment booking response status
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Appointment booking response message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Appointment booking response data
	Data *AppointmentBookingData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AppointmentBookingResponseData) Reset() {
	*x = AppointmentBookingResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentBookingResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentBookingResponseData) ProtoMessage() {}

func (x *AppointmentBookingResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentBookingResponseData.ProtoReflect.Descriptor instead.
func (*AppointmentBookingResponseData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{7}
}

func (x *AppointmentBookingResponseData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AppointmentBookingResponseData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AppointmentBookingResponseData) GetData() *AppointmentBookingData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AppointmentBookingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Booking ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Patient name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Patient NIK
	Nik string `protobuf:"bytes,3,opt,name=nik,proto3" json:"nik,omitempty"`
	// Patient email
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	// Patient phone number
	PhoneNumber string `protobuf:"bytes,5,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	// Patient payment method
	PaymentMethod string `protobuf:"bytes,6,opt,name=paymentMethod,proto3" json:"paymentMethod,omitempty"`
	//AppoinmentDate
	AppointmentDate string `protobuf:"bytes,7,opt,name=appointmentDate,proto3" json:"appointmentDate,omitempty"`
	//Appointment time
	AppointmentTime string `protobuf:"bytes,8,opt,name=appointmentTime,proto3" json:"appointmentTime,omitempty"`
	// Doctor
	Doctor *DoctorData `protobuf:"bytes,9,opt,name=doctor,proto3" json:"doctor,omitempty"`
	// Hospital
	Hospital *HospitalData `protobuf:"bytes,10,opt,name=hospital,proto3" json:"hospital,omitempty"`
	// Booking Status
	BookingStatus string `protobuf:"bytes,11,opt,name=bookingStatus,proto3" json:"bookingStatus,omitempty"`
	// Appointment created time
	CreatedTime string `protobuf:"bytes,12,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	//ID of patient registered
	ContactId string `protobuf:"bytes,13,opt,name=contactId,proto3" json:"contactId,omitempty"`
	//name of patient registered
	ContactName string `protobuf:"bytes,14,opt,name=contactName,proto3" json:"contactName,omitempty"`
	//birthDate
	BirthDate string `protobuf:"bytes,15,opt,name=birthDate,proto3" json:"birthDate,omitempty"`
	//scheduleId
	ScheduleId string `protobuf:"bytes,16,opt,name=scheduleId,proto3" json:"scheduleId,omitempty"`
}

func (x *AppointmentBookingData) Reset() {
	*x = AppointmentBookingData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentBookingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentBookingData) ProtoMessage() {}

func (x *AppointmentBookingData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentBookingData.ProtoReflect.Descriptor instead.
func (*AppointmentBookingData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{8}
}

func (x *AppointmentBookingData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppointmentBookingData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppointmentBookingData) GetNik() string {
	if x != nil {
		return x.Nik
	}
	return ""
}

func (x *AppointmentBookingData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AppointmentBookingData) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *AppointmentBookingData) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *AppointmentBookingData) GetAppointmentDate() string {
	if x != nil {
		return x.AppointmentDate
	}
	return ""
}

func (x *AppointmentBookingData) GetAppointmentTime() string {
	if x != nil {
		return x.AppointmentTime
	}
	return ""
}

func (x *AppointmentBookingData) GetDoctor() *DoctorData {
	if x != nil {
		return x.Doctor
	}
	return nil
}

func (x *AppointmentBookingData) GetHospital() *HospitalData {
	if x != nil {
		return x.Hospital
	}
	return nil
}

func (x *AppointmentBookingData) GetBookingStatus() string {
	if x != nil {
		return x.BookingStatus
	}
	return ""
}

func (x *AppointmentBookingData) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *AppointmentBookingData) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *AppointmentBookingData) GetContactName() string {
	if x != nil {
		return x.ContactName
	}
	return ""
}

func (x *AppointmentBookingData) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *AppointmentBookingData) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

type GetHospitalRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hospital ID
	HospitalId string `protobuf:"bytes,1,opt,name=hospitalId,proto3" json:"hospitalId,omitempty"`
}

func (x *GetHospitalRequestData) Reset() {
	*x = GetHospitalRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHospitalRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHospitalRequestData) ProtoMessage() {}

func (x *GetHospitalRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHospitalRequestData.ProtoReflect.Descriptor instead.
func (*GetHospitalRequestData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{9}
}

func (x *GetHospitalRequestData) GetHospitalId() string {
	if x != nil {
		return x.HospitalId
	}
	return ""
}

type GetHospitalsRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Param
	Param *GetHospitalParamData `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
	//page
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetHospitalsRequestData) Reset() {
	*x = GetHospitalsRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHospitalsRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHospitalsRequestData) ProtoMessage() {}

func (x *GetHospitalsRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHospitalsRequestData.ProtoReflect.Descriptor instead.
func (*GetHospitalsRequestData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{10}
}

func (x *GetHospitalsRequestData) GetParam() *GetHospitalParamData {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *GetHospitalsRequestData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetHospitalsByCoordinateRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// page
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// latitude
	Latitude float32 `protobuf:"fixed32,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	//longitude
	Longitude float32 `protobuf:"fixed32,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	//filterInKm
	FilterInKm float32 `protobuf:"fixed32,4,opt,name=filterInKm,proto3" json:"filterInKm,omitempty"`
}

func (x *GetHospitalsByCoordinateRequestData) Reset() {
	*x = GetHospitalsByCoordinateRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHospitalsByCoordinateRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHospitalsByCoordinateRequestData) ProtoMessage() {}

func (x *GetHospitalsByCoordinateRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHospitalsByCoordinateRequestData.ProtoReflect.Descriptor instead.
func (*GetHospitalsByCoordinateRequestData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{11}
}

func (x *GetHospitalsByCoordinateRequestData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetHospitalsByCoordinateRequestData) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GetHospitalsByCoordinateRequestData) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GetHospitalsByCoordinateRequestData) GetFilterInKm() float32 {
	if x != nil {
		return x.FilterInKm
	}
	return 0
}

type HospitalsByCoordinateResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hospitals response status
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Hospitals response message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Hospitals response data
	Data []*HospitalByCoordinateData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *HospitalsByCoordinateResponseData) Reset() {
	*x = HospitalsByCoordinateResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HospitalsByCoordinateResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HospitalsByCoordinateResponseData) ProtoMessage() {}

func (x *HospitalsByCoordinateResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HospitalsByCoordinateResponseData.ProtoReflect.Descriptor instead.
func (*HospitalsByCoordinateResponseData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{12}
}

func (x *HospitalsByCoordinateResponseData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HospitalsByCoordinateResponseData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HospitalsByCoordinateResponseData) GetData() []*HospitalByCoordinateData {
	if x != nil {
		return x.Data
	}
	return nil
}

type HospitalByCoordinateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hospital     *HospitalData `protobuf:"bytes,1,opt,name=hospital,proto3" json:"hospital,omitempty"`
	DistanceInKm float32       `protobuf:"fixed32,2,opt,name=distanceInKm,proto3" json:"distanceInKm,omitempty"`
}

func (x *HospitalByCoordinateData) Reset() {
	*x = HospitalByCoordinateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HospitalByCoordinateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HospitalByCoordinateData) ProtoMessage() {}

func (x *HospitalByCoordinateData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HospitalByCoordinateData.ProtoReflect.Descriptor instead.
func (*HospitalByCoordinateData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{13}
}

func (x *HospitalByCoordinateData) GetHospital() *HospitalData {
	if x != nil {
		return x.Hospital
	}
	return nil
}

func (x *HospitalByCoordinateData) GetDistanceInKm() float32 {
	if x != nil {
		return x.DistanceInKm
	}
	return 0
}

type GetHospitalParamData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Area ID
	AreaId string `protobuf:"bytes,1,opt,name=areaId,proto3" json:"areaId,omitempty"`
	// Hospital keyword
	NameKeyword string `protobuf:"bytes,2,opt,name=nameKeyword,proto3" json:"nameKeyword,omitempty"`
	// Hospital speciality ID
	Specialities []string `protobuf:"bytes,3,rep,name=specialities,proto3" json:"specialities,omitempty"`
}

func (x *GetHospitalParamData) Reset() {
	*x = GetHospitalParamData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHospitalParamData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHospitalParamData) ProtoMessage() {}

func (x *GetHospitalParamData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHospitalParamData.ProtoReflect.Descriptor instead.
func (*GetHospitalParamData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{14}
}

func (x *GetHospitalParamData) GetAreaId() string {
	if x != nil {
		return x.AreaId
	}
	return ""
}

func (x *GetHospitalParamData) GetNameKeyword() string {
	if x != nil {
		return x.NameKeyword
	}
	return ""
}

func (x *GetHospitalParamData) GetSpecialities() []string {
	if x != nil {
		return x.Specialities
	}
	return nil
}

type HospitalData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hospital id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Hospital name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Hospital alias
	Alias string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	// Hospital address
	Address *AddressData `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	// Hospital contact
	Contact *ContactData `protobuf:"bytes,5,opt,name=contact,proto3" json:"contact,omitempty"`
	// Hospital coordinate
	Coordinate *CoordinateData `protobuf:"bytes,6,opt,name=coordinate,proto3" json:"coordinate,omitempty"`
	// Hospital image url
	ImageUrl string `protobuf:"bytes,7,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	// Hospital accreditation
	Accreditation string `protobuf:"bytes,8,opt,name=accreditation,proto3" json:"accreditation,omitempty"`
	// Hospital specialities
	AreaId       string            `protobuf:"bytes,9,opt,name=areaId,proto3" json:"areaId,omitempty"`
	Specialities []*SpecialityData `protobuf:"bytes,10,rep,name=specialities,proto3" json:"specialities,omitempty"`
	LastUpdated  string            `protobuf:"bytes,11,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	Source       *SourceData       `protobuf:"bytes,12,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *HospitalData) Reset() {
	*x = HospitalData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HospitalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HospitalData) ProtoMessage() {}

func (x *HospitalData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HospitalData.ProtoReflect.Descriptor instead.
func (*HospitalData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{15}
}

func (x *HospitalData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HospitalData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HospitalData) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *HospitalData) GetAddress() *AddressData {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *HospitalData) GetContact() *ContactData {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *HospitalData) GetCoordinate() *CoordinateData {
	if x != nil {
		return x.Coordinate
	}
	return nil
}

func (x *HospitalData) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *HospitalData) GetAccreditation() string {
	if x != nil {
		return x.Accreditation
	}
	return ""
}

func (x *HospitalData) GetAreaId() string {
	if x != nil {
		return x.AreaId
	}
	return ""
}

func (x *HospitalData) GetSpecialities() []*SpecialityData {
	if x != nil {
		return x.Specialities
	}
	return nil
}

func (x *HospitalData) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

func (x *HospitalData) GetSource() *SourceData {
	if x != nil {
		return x.Source
	}
	return nil
}

type HospitalsResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hospitals response status
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Hospitals response message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Hospitals response data
	Data []*HospitalData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *HospitalsResponseData) Reset() {
	*x = HospitalsResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HospitalsResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HospitalsResponseData) ProtoMessage() {}

func (x *HospitalsResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HospitalsResponseData.ProtoReflect.Descriptor instead.
func (*HospitalsResponseData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{16}
}

func (x *HospitalsResponseData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HospitalsResponseData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HospitalsResponseData) GetData() []*HospitalData {
	if x != nil {
		return x.Data
	}
	return nil
}

type HospitalResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hospital response status
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Hospital response message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Hospital response data
	Data *HospitalData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *HospitalResponseData) Reset() {
	*x = HospitalResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HospitalResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HospitalResponseData) ProtoMessage() {}

func (x *HospitalResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HospitalResponseData.ProtoReflect.Descriptor instead.
func (*HospitalResponseData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{17}
}

func (x *HospitalResponseData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HospitalResponseData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HospitalResponseData) GetData() *HospitalData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetDoctorRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Doctor ID
	DoctorId string `protobuf:"bytes,1,opt,name=doctorId,proto3" json:"doctorId,omitempty"`
}

func (x *GetDoctorRequestData) Reset() {
	*x = GetDoctorRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDoctorRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorRequestData) ProtoMessage() {}

func (x *GetDoctorRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorRequestData.ProtoReflect.Descriptor instead.
func (*GetDoctorRequestData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{18}
}

func (x *GetDoctorRequestData) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

type GetDoctorsRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Doctors param
	Param *GetDoctorParamData `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
	// Page
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetDoctorsRequestData) Reset() {
	*x = GetDoctorsRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDoctorsRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorsRequestData) ProtoMessage() {}

func (x *GetDoctorsRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorsRequestData.ProtoReflect.Descriptor instead.
func (*GetDoctorsRequestData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{19}
}

func (x *GetDoctorsRequestData) GetParam() *GetDoctorParamData {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *GetDoctorsRequestData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetDoctorParamData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Area ID
	AreaId string `protobuf:"bytes,1,opt,name=areaId,proto3" json:"areaId,omitempty"`
	// Doctor keyword
	NameKeyword string `protobuf:"bytes,2,opt,name=nameKeyword,proto3" json:"nameKeyword,omitempty"`
	// Doctor speciality ID
	Specialities []string `protobuf:"bytes,3,rep,name=specialities,proto3" json:"specialities,omitempty"`
	// Doctor hospital ID
	Hospitals []string `protobuf:"bytes,4,rep,name=hospitals,proto3" json:"hospitals,omitempty"`
	// using keywrod include search in specialityName
	KeywordIncludeSpeciality bool `protobuf:"varint,5,opt,name=keywordIncludeSpeciality,proto3" json:"keywordIncludeSpeciality,omitempty"`
}

func (x *GetDoctorParamData) Reset() {
	*x = GetDoctorParamData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDoctorParamData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorParamData) ProtoMessage() {}

func (x *GetDoctorParamData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorParamData.ProtoReflect.Descriptor instead.
func (*GetDoctorParamData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{20}
}

func (x *GetDoctorParamData) GetAreaId() string {
	if x != nil {
		return x.AreaId
	}
	return ""
}

func (x *GetDoctorParamData) GetNameKeyword() string {
	if x != nil {
		return x.NameKeyword
	}
	return ""
}

func (x *GetDoctorParamData) GetSpecialities() []string {
	if x != nil {
		return x.Specialities
	}
	return nil
}

func (x *GetDoctorParamData) GetHospitals() []string {
	if x != nil {
		return x.Hospitals
	}
	return nil
}

func (x *GetDoctorParamData) GetKeywordIncludeSpeciality() bool {
	if x != nil {
		return x.KeywordIncludeSpeciality
	}
	return false
}

type DoctorsResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Doctors response status
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Doctors response message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Doctors response data
	Data []*DoctorData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DoctorsResponseData) Reset() {
	*x = DoctorsResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoctorsResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoctorsResponseData) ProtoMessage() {}

func (x *DoctorsResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoctorsResponseData.ProtoReflect.Descriptor instead.
func (*DoctorsResponseData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{21}
}

func (x *DoctorsResponseData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DoctorsResponseData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DoctorsResponseData) GetData() []*DoctorData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DoctorResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Doctor response status
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Doctor response message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Doctor response data
	Data *DoctorData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DoctorResponseData) Reset() {
	*x = DoctorResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoctorResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoctorResponseData) ProtoMessage() {}

func (x *DoctorResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoctorResponseData.ProtoReflect.Descriptor instead.
func (*DoctorResponseData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{22}
}

func (x *DoctorResponseData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DoctorResponseData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DoctorResponseData) GetData() *DoctorData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DoctorData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Doctor ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Doctor name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Doctor speciality
	Speciality *SpecialityData `protobuf:"bytes,3,opt,name=speciality,proto3" json:"speciality,omitempty"`
	// Doctor contact
	Contact *ContactData `protobuf:"bytes,4,opt,name=contact,proto3" json:"contact,omitempty"`
	// Doctor image url
	ImageUrl string `protobuf:"bytes,5,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	// Doctor hospital list
	Hospitals   []*HospitalData `protobuf:"bytes,6,rep,name=hospitals,proto3" json:"hospitals,omitempty"`
	Source      *SourceData     `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	LastUpdated string          `protobuf:"bytes,8,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
}

func (x *DoctorData) Reset() {
	*x = DoctorData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoctorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoctorData) ProtoMessage() {}

func (x *DoctorData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoctorData.ProtoReflect.Descriptor instead.
func (*DoctorData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{23}
}

func (x *DoctorData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DoctorData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DoctorData) GetSpeciality() *SpecialityData {
	if x != nil {
		return x.Speciality
	}
	return nil
}

func (x *DoctorData) GetContact() *ContactData {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *DoctorData) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *DoctorData) GetHospitals() []*HospitalData {
	if x != nil {
		return x.Hospitals
	}
	return nil
}

func (x *DoctorData) GetSource() *SourceData {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *DoctorData) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

type GetSpecialityRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Speciality ID
	SpecialityId string `protobuf:"bytes,1,opt,name=specialityId,proto3" json:"specialityId,omitempty"`
}

func (x *GetSpecialityRequestData) Reset() {
	*x = GetSpecialityRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpecialityRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecialityRequestData) ProtoMessage() {}

func (x *GetSpecialityRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecialityRequestData.ProtoReflect.Descriptor instead.
func (*GetSpecialityRequestData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{24}
}

func (x *GetSpecialityRequestData) GetSpecialityId() string {
	if x != nil {
		return x.SpecialityId
	}
	return ""
}

type GetSpecialitiesRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Area ID
	AreaId string `protobuf:"bytes,1,opt,name=areaId,proto3" json:"areaId,omitempty"`
	// Hospital ID
	HospitalId string `protobuf:"bytes,2,opt,name=hospitalId,proto3" json:"hospitalId,omitempty"`
	// Page
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// Name
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetSpecialitiesRequestData) Reset() {
	*x = GetSpecialitiesRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpecialitiesRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecialitiesRequestData) ProtoMessage() {}

func (x *GetSpecialitiesRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecialitiesRequestData.ProtoReflect.Descriptor instead.
func (*GetSpecialitiesRequestData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{25}
}

func (x *GetSpecialitiesRequestData) GetAreaId() string {
	if x != nil {
		return x.AreaId
	}
	return ""
}

func (x *GetSpecialitiesRequestData) GetHospitalId() string {
	if x != nil {
		return x.HospitalId
	}
	return ""
}

func (x *GetSpecialitiesRequestData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetSpecialitiesRequestData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SpecialityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Speciality ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Speciality name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Speciality name indo
	NameIndo string `protobuf:"bytes,3,opt,name=nameIndo,proto3" json:"nameIndo,omitempty"`
	// Speciality image url
	ImageUrl    string `protobuf:"bytes,4,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	LastUpdated string `protobuf:"bytes,5,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	// Speciality source
	Source *SourceData `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *SpecialityData) Reset() {
	*x = SpecialityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecialityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecialityData) ProtoMessage() {}

func (x *SpecialityData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecialityData.ProtoReflect.Descriptor instead.
func (*SpecialityData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{26}
}

func (x *SpecialityData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SpecialityData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpecialityData) GetNameIndo() string {
	if x != nil {
		return x.NameIndo
	}
	return ""
}

func (x *SpecialityData) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *SpecialityData) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

func (x *SpecialityData) GetSource() *SourceData {
	if x != nil {
		return x.Source
	}
	return nil
}

type SpecialitiesResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specialities response status
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Specialities response message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Specialities response data
	Data []*SpecialityData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SpecialitiesResponseData) Reset() {
	*x = SpecialitiesResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecialitiesResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecialitiesResponseData) ProtoMessage() {}

func (x *SpecialitiesResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecialitiesResponseData.ProtoReflect.Descriptor instead.
func (*SpecialitiesResponseData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{27}
}

func (x *SpecialitiesResponseData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SpecialitiesResponseData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SpecialitiesResponseData) GetData() []*SpecialityData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SpecialityResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Speciality response status
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Speciality response message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Speciality response data
	Data *SpecialityData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SpecialityResponseData) Reset() {
	*x = SpecialityResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecialityResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecialityResponseData) ProtoMessage() {}

func (x *SpecialityResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecialityResponseData.ProtoReflect.Descriptor instead.
func (*SpecialityResponseData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{28}
}

func (x *SpecialityResponseData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SpecialityResponseData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SpecialityResponseData) GetData() *SpecialityData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAreaRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Area ID
	AreaId string `protobuf:"bytes,1,opt,name=areaId,proto3" json:"areaId,omitempty"`
}

func (x *GetAreaRequestData) Reset() {
	*x = GetAreaRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAreaRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAreaRequestData) ProtoMessage() {}

func (x *GetAreaRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAreaRequestData.ProtoReflect.Descriptor instead.
func (*GetAreaRequestData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{29}
}

func (x *GetAreaRequestData) GetAreaId() string {
	if x != nil {
		return x.AreaId
	}
	return ""
}

type GetAreasRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//page
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetAreasRequestData) Reset() {
	*x = GetAreasRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAreasRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAreasRequestData) ProtoMessage() {}

func (x *GetAreasRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAreasRequestData.ProtoReflect.Descriptor instead.
func (*GetAreasRequestData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{30}
}

func (x *GetAreasRequestData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type AreasResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Areas response status
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Areas response message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Areas response data
	Data []*AreaData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AreasResponseData) Reset() {
	*x = AreasResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreasResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreasResponseData) ProtoMessage() {}

func (x *AreasResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreasResponseData.ProtoReflect.Descriptor instead.
func (*AreasResponseData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{31}
}

func (x *AreasResponseData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AreasResponseData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AreasResponseData) GetData() []*AreaData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AreaResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Area response status
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Area response message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Area response data
	Data *AreaData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AreaResponseData) Reset() {
	*x = AreaResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaResponseData) ProtoMessage() {}

func (x *AreaResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaResponseData.ProtoReflect.Descriptor instead.
func (*AreaResponseData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{32}
}

func (x *AreaResponseData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AreaResponseData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AreaResponseData) GetData() *AreaData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AreaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Area ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Area name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Area image url
	ImageUrl    string `protobuf:"bytes,3,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	LastUpdated string `protobuf:"bytes,4,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	// Area source
	Source *SourceData `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *AreaData) Reset() {
	*x = AreaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaData) ProtoMessage() {}

func (x *AreaData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaData.ProtoReflect.Descriptor instead.
func (*AreaData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{33}
}

func (x *AreaData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AreaData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AreaData) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *AreaData) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

func (x *AreaData) GetSource() *SourceData {
	if x != nil {
		return x.Source
	}
	return nil
}

type ScheduleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Doctor      *DoctorData   `protobuf:"bytes,2,opt,name=doctor,proto3" json:"doctor,omitempty"`
	Hospital    *HospitalData `protobuf:"bytes,3,opt,name=hospital,proto3" json:"hospital,omitempty"`
	Day         int32         `protobuf:"varint,4,opt,name=day,proto3" json:"day,omitempty"`
	FromTime    string        `protobuf:"bytes,5,opt,name=fromTime,proto3" json:"fromTime,omitempty"`
	ToTime      string        `protobuf:"bytes,6,opt,name=toTime,proto3" json:"toTime,omitempty"`
	LastUpdated string        `protobuf:"bytes,7,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	Source      *SourceData   `protobuf:"bytes,8,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *ScheduleData) Reset() {
	*x = ScheduleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleData) ProtoMessage() {}

func (x *ScheduleData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleData.ProtoReflect.Descriptor instead.
func (*ScheduleData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{34}
}

func (x *ScheduleData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScheduleData) GetDoctor() *DoctorData {
	if x != nil {
		return x.Doctor
	}
	return nil
}

func (x *ScheduleData) GetHospital() *HospitalData {
	if x != nil {
		return x.Hospital
	}
	return nil
}

func (x *ScheduleData) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *ScheduleData) GetFromTime() string {
	if x != nil {
		return x.FromTime
	}
	return ""
}

func (x *ScheduleData) GetToTime() string {
	if x != nil {
		return x.ToTime
	}
	return ""
}

func (x *ScheduleData) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

func (x *ScheduleData) GetSource() *SourceData {
	if x != nil {
		return x.Source
	}
	return nil
}

type DoctorSchedulesResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string              `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DoctorScheduleData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DoctorSchedulesResponseData) Reset() {
	*x = DoctorSchedulesResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoctorSchedulesResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoctorSchedulesResponseData) ProtoMessage() {}

func (x *DoctorSchedulesResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoctorSchedulesResponseData.ProtoReflect.Descriptor instead.
func (*DoctorSchedulesResponseData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{35}
}

func (x *DoctorSchedulesResponseData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DoctorSchedulesResponseData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DoctorSchedulesResponseData) GetData() *DoctorScheduleData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DoctorScheduleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DoctorId   string                     `protobuf:"bytes,1,opt,name=doctorId,proto3" json:"doctorId,omitempty"`
	HospitalId string                     `protobuf:"bytes,2,opt,name=hospitalId,proto3" json:"hospitalId,omitempty"`
	Schedules  []*ScheduleData            `protobuf:"bytes,3,rep,name=schedules,proto3" json:"schedules,omitempty"`
	Leaves     []*DoctorLeaveHospitalData `protobuf:"bytes,4,rep,name=leaves,proto3" json:"leaves,omitempty"`
}

func (x *DoctorScheduleData) Reset() {
	*x = DoctorScheduleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoctorScheduleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoctorScheduleData) ProtoMessage() {}

func (x *DoctorScheduleData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoctorScheduleData.ProtoReflect.Descriptor instead.
func (*DoctorScheduleData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{36}
}

func (x *DoctorScheduleData) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *DoctorScheduleData) GetHospitalId() string {
	if x != nil {
		return x.HospitalId
	}
	return ""
}

func (x *DoctorScheduleData) GetSchedules() []*ScheduleData {
	if x != nil {
		return x.Schedules
	}
	return nil
}

func (x *DoctorScheduleData) GetLeaves() []*DoctorLeaveHospitalData {
	if x != nil {
		return x.Leaves
	}
	return nil
}

type DoctorLeaveHospitalData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DoctorId   string `protobuf:"bytes,1,opt,name=doctorId,proto3" json:"doctorId,omitempty"`
	HospitalId string `protobuf:"bytes,2,opt,name=hospitalId,proto3" json:"hospitalId,omitempty"`
	FromDate   string `protobuf:"bytes,3,opt,name=fromDate,proto3" json:"fromDate,omitempty"`
	ToDate     string `protobuf:"bytes,4,opt,name=toDate,proto3" json:"toDate,omitempty"`
}

func (x *DoctorLeaveHospitalData) Reset() {
	*x = DoctorLeaveHospitalData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoctorLeaveHospitalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoctorLeaveHospitalData) ProtoMessage() {}

func (x *DoctorLeaveHospitalData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoctorLeaveHospitalData.ProtoReflect.Descriptor instead.
func (*DoctorLeaveHospitalData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{37}
}

func (x *DoctorLeaveHospitalData) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *DoctorLeaveHospitalData) GetHospitalId() string {
	if x != nil {
		return x.HospitalId
	}
	return ""
}

func (x *DoctorLeaveHospitalData) GetFromDate() string {
	if x != nil {
		return x.FromDate
	}
	return ""
}

func (x *DoctorLeaveHospitalData) GetToDate() string {
	if x != nil {
		return x.ToDate
	}
	return ""
}

type GetDoctorSchedulesRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DoctorId   string `protobuf:"bytes,1,opt,name=doctorId,proto3" json:"doctorId,omitempty"`
	HospitalId string `protobuf:"bytes,2,opt,name=hospitalId,proto3" json:"hospitalId,omitempty"`
	Page       int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetDoctorSchedulesRequestData) Reset() {
	*x = GetDoctorSchedulesRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDoctorSchedulesRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorSchedulesRequestData) ProtoMessage() {}

func (x *GetDoctorSchedulesRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorSchedulesRequestData.ProtoReflect.Descriptor instead.
func (*GetDoctorSchedulesRequestData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{38}
}

func (x *GetDoctorSchedulesRequestData) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *GetDoctorSchedulesRequestData) GetHospitalId() string {
	if x != nil {
		return x.HospitalId
	}
	return ""
}

func (x *GetDoctorSchedulesRequestData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetDoctorTimeSlotRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HospitalId      string `protobuf:"bytes,1,opt,name=hospitalId,proto3" json:"hospitalId,omitempty"`
	DoctorId        string `protobuf:"bytes,2,opt,name=doctorId,proto3" json:"doctorId,omitempty"`
	AppointmentDate string `protobuf:"bytes,3,opt,name=appointmentDate,proto3" json:"appointmentDate,omitempty"`
}

func (x *GetDoctorTimeSlotRequestData) Reset() {
	*x = GetDoctorTimeSlotRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDoctorTimeSlotRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorTimeSlotRequestData) ProtoMessage() {}

func (x *GetDoctorTimeSlotRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorTimeSlotRequestData.ProtoReflect.Descriptor instead.
func (*GetDoctorTimeSlotRequestData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{39}
}

func (x *GetDoctorTimeSlotRequestData) GetHospitalId() string {
	if x != nil {
		return x.HospitalId
	}
	return ""
}

func (x *GetDoctorTimeSlotRequestData) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *GetDoctorTimeSlotRequestData) GetAppointmentDate() string {
	if x != nil {
		return x.AppointmentDate
	}
	return ""
}

type DoctorTimeSlotsResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string                `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*DoctorTimeSlotData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DoctorTimeSlotsResponseData) Reset() {
	*x = DoctorTimeSlotsResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoctorTimeSlotsResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoctorTimeSlotsResponseData) ProtoMessage() {}

func (x *DoctorTimeSlotsResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoctorTimeSlotsResponseData.ProtoReflect.Descriptor instead.
func (*DoctorTimeSlotsResponseData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{40}
}

func (x *DoctorTimeSlotsResponseData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DoctorTimeSlotsResponseData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DoctorTimeSlotsResponseData) GetData() []*DoctorTimeSlotData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DoctorTimeSlotData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduleId       string `protobuf:"bytes,1,opt,name=scheduleId,proto3" json:"scheduleId,omitempty"`
	HospitalTimeZone int32  `protobuf:"varint,2,opt,name=hospitalTimeZone,proto3" json:"hospitalTimeZone,omitempty"`
	IsFull           bool   `protobuf:"varint,3,opt,name=isFull,proto3" json:"isFull,omitempty"`
	FromTime         string `protobuf:"bytes,4,opt,name=fromTime,proto3" json:"fromTime,omitempty"`
	ToTime           string `protobuf:"bytes,5,opt,name=toTime,proto3" json:"toTime,omitempty"`
}

func (x *DoctorTimeSlotData) Reset() {
	*x = DoctorTimeSlotData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoctorTimeSlotData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoctorTimeSlotData) ProtoMessage() {}

func (x *DoctorTimeSlotData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoctorTimeSlotData.ProtoReflect.Descriptor instead.
func (*DoctorTimeSlotData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{41}
}

func (x *DoctorTimeSlotData) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *DoctorTimeSlotData) GetHospitalTimeZone() int32 {
	if x != nil {
		return x.HospitalTimeZone
	}
	return 0
}

func (x *DoctorTimeSlotData) GetIsFull() bool {
	if x != nil {
		return x.IsFull
	}
	return false
}

func (x *DoctorTimeSlotData) GetFromTime() string {
	if x != nil {
		return x.FromTime
	}
	return ""
}

func (x *DoctorTimeSlotData) GetToTime() string {
	if x != nil {
		return x.ToTime
	}
	return ""
}

type CoordinateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat float32 `protobuf:"fixed32,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon float32 `protobuf:"fixed32,2,opt,name=lon,proto3" json:"lon,omitempty"`
}

func (x *CoordinateData) Reset() {
	*x = CoordinateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoordinateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordinateData) ProtoMessage() {}

func (x *CoordinateData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordinateData.ProtoReflect.Descriptor instead.
func (*CoordinateData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{42}
}

func (x *CoordinateData) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *CoordinateData) GetLon() float32 {
	if x != nil {
		return x.Lon
	}
	return 0
}

type AddressData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Kode pos
	ZipCode string `protobuf:"bytes,1,opt,name=zipCode,proto3" json:"zipCode,omitempty"`
	// Kelurahan
	Village string `protobuf:"bytes,2,opt,name=village,proto3" json:"village,omitempty"`
	// Kecamatan
	SubDistrict string `protobuf:"bytes,3,opt,name=subDistrict,proto3" json:"subDistrict,omitempty"`
	// Kota / kabupaten
	District string `protobuf:"bytes,4,opt,name=district,proto3" json:"district,omitempty"`
	// Provinsi
	Province string `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`
	//street
	Street string `protobuf:"bytes,6,opt,name=street,proto3" json:"street,omitempty"`
}

func (x *AddressData) Reset() {
	*x = AddressData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressData) ProtoMessage() {}

func (x *AddressData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressData.ProtoReflect.Descriptor instead.
func (*AddressData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{43}
}

func (x *AddressData) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *AddressData) GetVillage() string {
	if x != nil {
		return x.Village
	}
	return ""
}

func (x *AddressData) GetSubDistrict() string {
	if x != nil {
		return x.SubDistrict
	}
	return ""
}

func (x *AddressData) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *AddressData) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *AddressData) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

type SourceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Source ID
	SourceId string `protobuf:"bytes,1,opt,name=sourceId,proto3" json:"sourceId,omitempty"`
	// Source Name
	SourceName string `protobuf:"bytes,2,opt,name=sourceName,proto3" json:"sourceName,omitempty"`
	// Origin ID
	OriginId string `protobuf:"bytes,3,opt,name=originId,proto3" json:"originId,omitempty"`
}

func (x *SourceData) Reset() {
	*x = SourceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceData) ProtoMessage() {}

func (x *SourceData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceData.ProtoReflect.Descriptor instead.
func (*SourceData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{44}
}

func (x *SourceData) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *SourceData) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *SourceData) GetOriginId() string {
	if x != nil {
		return x.OriginId
	}
	return ""
}

type ContactData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Phone no
	PhoneNumber string `protobuf:"bytes,1,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	// Email
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *ContactData) Reset() {
	*x = ContactData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactData) ProtoMessage() {}

func (x *ContactData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactData.ProtoReflect.Descriptor instead.
func (*ContactData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{45}
}

func (x *ContactData) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *ContactData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type InitConversationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiagnosticSessionID string `protobuf:"bytes,1,opt,name=diagnosticSessionID,proto3" json:"diagnosticSessionID,omitempty"`
	SessionID           string `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *InitConversationRequest) Reset() {
	*x = InitConversationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitConversationRequest) ProtoMessage() {}

func (x *InitConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitConversationRequest.ProtoReflect.Descriptor instead.
func (*InitConversationRequest) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{46}
}

func (x *InitConversationRequest) GetDiagnosticSessionID() string {
	if x != nil {
		return x.DiagnosticSessionID
	}
	return ""
}

func (x *InitConversationRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type InitConversationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebsiteID string `protobuf:"bytes,1,opt,name=websiteID,proto3" json:"websiteID,omitempty"`
}

func (x *InitConversationResponse) Reset() {
	*x = InitConversationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitConversationResponse) ProtoMessage() {}

func (x *InitConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitConversationResponse.ProtoReflect.Descriptor instead.
func (*InitConversationResponse) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{47}
}

func (x *InitConversationResponse) GetWebsiteID() string {
	if x != nil {
		return x.WebsiteID
	}
	return ""
}

type CancelAppointmentBookingRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Booking ID
	BookingId string `protobuf:"bytes,1,opt,name=bookingId,proto3" json:"bookingId,omitempty"`
	// Reason
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *CancelAppointmentBookingRequestData) Reset() {
	*x = CancelAppointmentBookingRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelAppointmentBookingRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelAppointmentBookingRequestData) ProtoMessage() {}

func (x *CancelAppointmentBookingRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelAppointmentBookingRequestData.ProtoReflect.Descriptor instead.
func (*CancelAppointmentBookingRequestData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{48}
}

func (x *CancelAppointmentBookingRequestData) GetBookingId() string {
	if x != nil {
		return x.BookingId
	}
	return ""
}

func (x *CancelAppointmentBookingRequestData) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type CancelAppointmentBookingResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string                        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *CancelAppointmentBookingData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CancelAppointmentBookingResponseData) Reset() {
	*x = CancelAppointmentBookingResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelAppointmentBookingResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelAppointmentBookingResponseData) ProtoMessage() {}

func (x *CancelAppointmentBookingResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelAppointmentBookingResponseData.ProtoReflect.Descriptor instead.
func (*CancelAppointmentBookingResponseData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{49}
}

func (x *CancelAppointmentBookingResponseData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CancelAppointmentBookingResponseData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CancelAppointmentBookingResponseData) GetData() *CancelAppointmentBookingData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CancelAppointmentBookingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Booking ID
	BookingId string `protobuf:"bytes,1,opt,name=bookingId,proto3" json:"bookingId,omitempty"`
	// Booking Status
	BookingStatus string `protobuf:"bytes,2,opt,name=bookingStatus,proto3" json:"bookingStatus,omitempty"`
	// reason
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *CancelAppointmentBookingData) Reset() {
	*x = CancelAppointmentBookingData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelAppointmentBookingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelAppointmentBookingData) ProtoMessage() {}

func (x *CancelAppointmentBookingData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelAppointmentBookingData.ProtoReflect.Descriptor instead.
func (*CancelAppointmentBookingData) Descriptor() ([]byte, []int) {
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP(), []int{50}
}

func (x *CancelAppointmentBookingData) GetBookingId() string {
	if x != nil {
		return x.BookingId
	}
	return ""
}

func (x *CancelAppointmentBookingData) GetBookingStatus() string {
	if x != nil {
		return x.BookingStatus
	}
	return ""
}

func (x *CancelAppointmentBookingData) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_proto_telemedicine_v1_Telemedicine_proto protoreflect.FileDescriptor

var file_proto_telemedicine_v1_Telemedicine_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69,
	0x63, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69,
	0x63, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x70, 0x72, 0x69, 0x78,
	0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65,
	0x72, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x36, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f,
	0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61,
	0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x3e, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x3a, 0x0a, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x06, 0xe2, 0xdf, 0x1f,
	0x02, 0x20, 0x01, 0x52, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x1f,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x90, 0x01, 0x04, 0x52, 0x0a,
	0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x64, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf,
	0x1f, 0x03, 0x90, 0x01, 0x04, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x48, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x32,
	0xe2, 0xdf, 0x1f, 0x2e, 0x0a, 0x2a, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d,
	0x39, 0x2e, 0x5f, 0x25, 0x2b, 0x2d, 0x5d, 0x2b, 0x40, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39,
	0x2e, 0x2d, 0x5d, 0x2b, 0x2e, 0x5b, 0x61, 0x2d, 0x7a, 0x5d, 0x7b, 0x32, 0x2c, 0x34, 0x7d, 0x24,
	0x58, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x4b, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a,
	0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x09, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0xb9, 0x05, 0x0a, 0x21, 0x50, 0x6f, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02,
	0x58, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x03, 0x6e, 0x69, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x0a, 0x0b, 0x5e, 0x5b, 0x30,
	0x2d, 0x39, 0x5d, 0x7b, 0x31, 0x36, 0x7d, 0x24, 0x58, 0x01, 0x52, 0x03, 0x6e, 0x69, 0x6b, 0x12,
	0x48, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x32,
	0xe2, 0xdf, 0x1f, 0x2e, 0x0a, 0x2a, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d,
	0x39, 0x2e, 0x5f, 0x25, 0x2b, 0x2d, 0x5d, 0x2b, 0x40, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39,
	0x2e, 0x2d, 0x5d, 0x2b, 0x2e, 0x5b, 0x61, 0x2d, 0x7a, 0x5d, 0x7b, 0x32, 0x2c, 0x34, 0x7d, 0x24,
	0x58, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x3c, 0x0a, 0x0b, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a,
	0xe2, 0xdf, 0x1f, 0x16, 0x0a, 0x12, 0x5e, 0x5b, 0x2b, 0x5d, 0x3f, 0x5b, 0x30, 0x2d, 0x39, 0x5d,
	0x7b, 0x31, 0x30, 0x2c, 0x31, 0x33, 0x7d, 0x24, 0x58, 0x01, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06,
	0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x64, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3a,
	0xe2, 0xdf, 0x1f, 0x36, 0x0a, 0x32, 0x5e, 0x5c, 0x64, 0x7b, 0x34, 0x7d, 0x5c, 0x2d, 0x28, 0x30,
	0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x31, 0x5b, 0x30, 0x31, 0x32, 0x5d, 0x29, 0x5c, 0x2d, 0x28,
	0x30, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x5b, 0x31, 0x32, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d,
	0x7c, 0x33, 0x5b, 0x30, 0x31, 0x5d, 0x29, 0x24, 0x58, 0x01, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x61,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x34, 0xe2, 0xdf, 0x1f, 0x30, 0x0a, 0x2c, 0x5e, 0x28, 0x5b, 0x30,
	0x2d, 0x31, 0x5d, 0x3f, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x32, 0x5b, 0x30, 0x2d, 0x33, 0x5d,
	0x29, 0x3a, 0x5b, 0x30, 0x2d, 0x35, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x3a, 0x5b, 0x30, 0x2d,
	0x35, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x24, 0x58, 0x01, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x64,
	0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2,
	0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01,
	0x04, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x29, 0x0a,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3a, 0xe2, 0xdf, 0x1f,
	0x36, 0x0a, 0x32, 0x5e, 0x5c, 0x64, 0x7b, 0x34, 0x7d, 0x5c, 0x2d, 0x28, 0x30, 0x5b, 0x31, 0x2d,
	0x39, 0x5d, 0x7c, 0x31, 0x5b, 0x30, 0x31, 0x32, 0x5d, 0x29, 0x5c, 0x2d, 0x28, 0x30, 0x5b, 0x31,
	0x2d, 0x39, 0x5d, 0x7c, 0x5b, 0x31, 0x32, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x33, 0x5b,
	0x30, 0x31, 0x5d, 0x29, 0x24, 0x58, 0x01, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61,
	0x74, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x1f, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8b, 0x01, 0x0a, 0x19,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x69, 0x78,
	0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2f, 0x0a, 0x11, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x58, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x1e, 0x41,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xbf, 0x05, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58,
	0x01, 0x90, 0x01, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x69, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x6b, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x64, 0x0a, 0x0f,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3a, 0xe2, 0xdf, 0x1f, 0x36, 0x0a, 0x32, 0x5e, 0x5c, 0x64,
	0x7b, 0x34, 0x7d, 0x5c, 0x2d, 0x28, 0x30, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x31, 0x5b, 0x30,
	0x31, 0x32, 0x5d, 0x29, 0x5c, 0x2d, 0x28, 0x30, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x5b, 0x31,
	0x32, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x33, 0x5b, 0x30, 0x31, 0x5d, 0x29, 0x24, 0x58,
	0x01, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x34, 0xe2, 0xdf, 0x1f,
	0x30, 0x0a, 0x2c, 0x5e, 0x28, 0x5b, 0x30, 0x2d, 0x31, 0x5d, 0x3f, 0x5b, 0x30, 0x2d, 0x39, 0x5d,
	0x7c, 0x32, 0x5b, 0x30, 0x2d, 0x33, 0x5d, 0x29, 0x3a, 0x5b, 0x30, 0x2d, 0x35, 0x5d, 0x5b, 0x30,
	0x2d, 0x39, 0x5d, 0x3a, 0x5b, 0x30, 0x2d, 0x35, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x24, 0x58,
	0x01, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x3f, 0x0a,
	0x08, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69,
	0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x12, 0x24,
	0x0a, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x70, 0x69,
	0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29,
	0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x0a, 0x68,
	0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48,
	0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x23,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x4b, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x4b,
	0x6d, 0x22, 0x9a, 0x01, 0x0a, 0x21, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x42,
	0x79, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7f,
	0x0a, 0x18, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x08, 0x68, 0x6f,
	0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70,
	0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x4b, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x4b, 0x6d, 0x22,
	0x7d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x90, 0x01, 0x04,
	0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e,
	0x61, 0x6d, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0xa1,
	0x04, 0x0a, 0x0c, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x19, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f,
	0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x3c, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x3c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x12, 0x45, 0x0a, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x06, 0x61, 0x72, 0x65,
	0x61, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x90,
	0x01, 0x04, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x0c, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64,
	0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x15, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70,
	0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x81, 0x01, 0x0a, 0x14, 0x48, 0x6f, 0x73, 0x70,
	0x69, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64,
	0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3d, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04,
	0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xd5, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1f, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x90, 0x01, 0x04, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74,
	0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x73, 0x70, 0x69,
	0x74, 0x61, 0x6c, 0x73, 0x12, 0x3a, 0x0a, 0x18, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x49,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x49,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x22, 0x7e, 0x0a, 0x13, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x7d, 0x0a, 0x12, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x6f, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xfc, 0x02, 0x0a, 0x0a, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05,
	0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a,
	0x0a, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x41,
	0x0a, 0x09, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74,
	0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c,
	0x73, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x49,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x0c, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x0c, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x90, 0x01,
	0x04, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x68, 0x6f, 0x73,
	0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2,
	0xdf, 0x1f, 0x03, 0x90, 0x01, 0x04, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x0e, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58,
	0x01, 0x90, 0x01, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x64, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x64, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x87, 0x01, 0x0a, 0x18, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x85, 0x01, 0x0a, 0x16,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x37, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x06, 0x61, 0x72, 0x65,
	0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58,
	0x01, 0x90, 0x01, 0x04, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x7a, 0x0a, 0x11, 0x41, 0x72, 0x65, 0x61, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70,
	0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x79, 0x0a, 0x10, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x72, 0x65, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb2,
	0x01, 0x0a, 0x08, 0x41, 0x72, 0x65, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90,
	0x01, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61,
	0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0xc6, 0x02, 0x0a, 0x0c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x90, 0x01, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a,
	0x06, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x06, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70,
	0x69, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x69,
	0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x8e, 0x01, 0x0a,
	0x1b, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70,
	0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdb, 0x01,
	0x0a, 0x12, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x41, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x17,
	0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x48, 0x6f, 0x73, 0x70, 0x69,
	0x74, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44,
	0x6f, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x08, 0x64, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f,
	0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52,
	0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22,
	0xd6, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x29, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52,
	0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x64,
	0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2,
	0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x64, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3a, 0xe2, 0xdf, 0x1f,
	0x36, 0x0a, 0x32, 0x5e, 0x5c, 0x64, 0x7b, 0x34, 0x7d, 0x5c, 0x2d, 0x28, 0x30, 0x5b, 0x31, 0x2d,
	0x39, 0x5d, 0x7c, 0x31, 0x5b, 0x30, 0x31, 0x32, 0x5d, 0x29, 0x5c, 0x2d, 0x28, 0x30, 0x5b, 0x31,
	0x2d, 0x39, 0x5d, 0x7c, 0x5b, 0x31, 0x32, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x33, 0x5b,
	0x30, 0x31, 0x5d, 0x29, 0x24, 0x58, 0x01, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x1b, 0x44, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61,
	0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc4, 0x01, 0x0a, 0x12, 0x44, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65,
	0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x68, 0x6f, 0x73, 0x70,
	0x69, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x06,
	0x69, 0x73, 0x46, 0x75, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x20, 0x01, 0x52, 0x06, 0x69, 0x73, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x22, 0x0a, 0x08,
	0x66, 0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06,
	0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x06, 0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x06, 0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x34, 0x0a, 0x0e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x22, 0xb3, 0x01, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75,
	0x62, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x75, 0x62, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x22, 0x7a, 0x0a, 0x0a,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x08, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf,
	0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x08,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xe2,
	0xdf, 0x1f, 0x14, 0x0a, 0x12, 0x5e, 0x5b, 0x2b, 0x5d, 0x3f, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7b,
	0x31, 0x30, 0x2c, 0x31, 0x33, 0x7d, 0x24, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x30, 0xe2, 0xdf, 0x1f, 0x2c, 0x0a, 0x2a, 0x5e, 0x5b, 0x61, 0x2d, 0x7a,
	0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x2e, 0x5f, 0x25, 0x2b, 0x2d, 0x5d, 0x2b, 0x40, 0x5b, 0x61,
	0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2e, 0x2d, 0x5d, 0x2b, 0x2e, 0x5b, 0x61, 0x2d, 0x7a, 0x5d, 0x7b,
	0x32, 0x2c, 0x34, 0x7d, 0x24, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x79, 0x0a, 0x17,
	0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x13, 0x64, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x74, 0x69, 0x63, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x13, 0x64, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x24, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x40, 0x0a, 0x18, 0x49, 0x6e, 0x69, 0x74, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x09, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x09,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44, 0x22, 0x6b, 0x0a, 0x23, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x24, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x09, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xa1, 0x01, 0x0a, 0x24, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x47, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69,
	0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x85, 0x01, 0x0a, 0x1c, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x09, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x32, 0xf4, 0x18, 0x0a, 0x13, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63,
	0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x69,
	0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72,
	0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2f, 0x61, 0x72, 0x65,
	0x61, 0x2f, 0x7b, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x7d, 0x12, 0x87, 0x01, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x2e, 0x70, 0x72,
	0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x72, 0x65, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2f,
	0x61, 0x72, 0x65, 0x61, 0x12, 0xab, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x2e, 0x70, 0x72, 0x69,
	0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x2d, 0x2e, 0x70, 0x72,
	0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x30, 0x12, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x2f, 0x7b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x7d, 0x12, 0xa2, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x69,
	0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x2f, 0x2e,
	0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x27,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2f, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0xa1, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x48,
	0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x2e, 0x70, 0x72,
	0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x2b, 0x2e, 0x70, 0x72, 0x69,
	0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12,
	0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64,
	0x69, 0x63, 0x69, 0x6e, 0x65, 0x2f, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x2f, 0x7b,
	0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x7d, 0x12, 0x97, 0x01, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2e, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64,
	0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x70,
	0x69, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x1a, 0x2c, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64,
	0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x25,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2f, 0x68, 0x6f, 0x73,
	0x70, 0x69, 0x74, 0x61, 0x6c, 0x12, 0xc6, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73,
	0x70, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x1a, 0x38, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x70, 0x69,
	0x74, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x30, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2f, 0x68, 0x6f, 0x73, 0x70, 0x69,
	0x74, 0x61, 0x6c, 0x2d, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x8f,
	0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2c, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a,
	0x2a, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69,
	0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x23, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2f, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x97, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x2b, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a,
	0x29, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69,
	0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x12, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2f, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2f,
	0x7b, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x7d, 0x12, 0xd2, 0x01, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x34, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x32, 0x2e, 0x70, 0x72,
	0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x4e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x48, 0x12, 0x46, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2f, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c,
	0x2f, 0x7b, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x2f, 0x7b, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x7d, 0x12,
	0xf3, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x2e, 0x70, 0x72, 0x69,
	0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a,
	0x32, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69,
	0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x70, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x6a, 0x12, 0x68, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e,
	0x65, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x6c, 0x6f, 0x74, 0x2f, 0x68, 0x6f, 0x73, 0x70, 0x69,
	0x74, 0x61, 0x6c, 0x2f, 0x7b, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x7d,
	0x2f, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x7b, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x7d, 0x12, 0xdb, 0x01, 0x0a, 0x1a, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x35,
	0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63,
	0x69, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x3a,
	0x01, 0x2a, 0x92, 0x41, 0x1e, 0x62, 0x1c, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x0a, 0x0a, 0x0a, 0x06, 0x42, 0x65, 0x61, 0x72, 0x65,
	0x72, 0x12, 0x00, 0x12, 0xe2, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x37, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x69,
	0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x55, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x12, 0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2f,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x7d, 0x92, 0x41, 0x1e, 0x62, 0x1c, 0x0a, 0x0e, 0x0a, 0x0a,
	0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x0a, 0x0a, 0x0a, 0x06,
	0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x12, 0xda, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x1a, 0x36, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x23, 0x12, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x92, 0x41, 0x1e, 0x62, 0x1c, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x0a, 0x0a, 0x0a, 0x06, 0x42, 0x65, 0x61,
	0x72, 0x65, 0x72, 0x12, 0x00, 0x12, 0x93, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x30, 0x2e, 0x70,
	0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0xf1, 0x01, 0x0a, 0x1c,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x2e, 0x70,
	0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61,
	0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x1a, 0x2c, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63,
	0x69, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x7b, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x92, 0x41,
	0x1e, 0x62, 0x1c, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x00, 0x0a, 0x0a, 0x0a, 0x06, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x12,
	0xc7, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69,
	0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x74, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69,
	0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x22, 0x26, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63,
	0x69, 0x6e, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x69, 0x6e, 0x69, 0x74, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x1e, 0x62, 0x1c, 0x0a, 0x0e, 0x0a,
	0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x0a, 0x0a, 0x0a,
	0x06, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x42, 0xd7, 0x02, 0x92, 0x41, 0xd3, 0x02,
	0x12, 0xbe, 0x01, 0x0a, 0x1e, 0x50, 0x72, 0x69, 0x78, 0x61, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20,
	0x41, 0x50, 0x49, 0x22, 0x45, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x78, 0x61, 0x20, 0x54, 0x65, 0x63,
	0x68, 0x12, 0x27, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2d, 0x61, 0x69, 0x2f, 0x70,
	0x72, 0x69, 0x78, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x74, 0x65, 0x63, 0x68,
	0x40, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2a, 0x50, 0x0a, 0x0d, 0x50, 0x72,
	0x69, 0x78, 0x61, 0x20, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x68, 0x74, 0x74,
	0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x70, 0x72, 0x69, 0x78, 0x61, 0x2d, 0x61, 0x69, 0x2f, 0x70, 0x72, 0x69, 0x78, 0x61, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6c, 0x6f, 0x62, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x2e, 0x74, 0x78, 0x74, 0x32, 0x03, 0x31, 0x2e,
	0x30, 0x1a, 0x10, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x32, 0x2e, 0x70, 0x72, 0x69, 0x78, 0x61,
	0x2e, 0x61, 0x69, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x44, 0x0a, 0x23, 0x0a,
	0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x15, 0x08, 0x02, 0x1a,
	0x0f, 0x58, 0x2d, 0x50, 0x72, 0x69, 0x78, 0x61, 0x2d, 0x41, 0x50, 0x49, 0x2d, 0x4b, 0x65, 0x79,
	0x20, 0x02, 0x0a, 0x1d, 0x0a, 0x06, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x13, 0x08, 0x02,
	0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20,
	0x02, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_telemedicine_v1_Telemedicine_proto_rawDescOnce sync.Once
	file_proto_telemedicine_v1_Telemedicine_proto_rawDescData = file_proto_telemedicine_v1_Telemedicine_proto_rawDesc
)

func file_proto_telemedicine_v1_Telemedicine_proto_rawDescGZIP() []byte {
	file_proto_telemedicine_v1_Telemedicine_proto_rawDescOnce.Do(func() {
		file_proto_telemedicine_v1_Telemedicine_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_telemedicine_v1_Telemedicine_proto_rawDescData)
	})
	return file_proto_telemedicine_v1_Telemedicine_proto_rawDescData
}

var file_proto_telemedicine_v1_Telemedicine_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_proto_telemedicine_v1_Telemedicine_proto_goTypes = []interface{}{
	(*GetAppointmentBookingsRequestData)(nil),    // 0: prixa.telemedicine.v1.GetAppointmentBookingsRequestData
	(*FindAppointmentBookingParamData)(nil),      // 1: prixa.telemedicine.v1.FindAppointmentBookingParamData
	(*GetAppointmentBookingRequestData)(nil),     // 2: prixa.telemedicine.v1.GetAppointmentBookingRequestData
	(*PostAppointmentBookingRequestData)(nil),    // 3: prixa.telemedicine.v1.PostAppointmentBookingRequestData
	(*AppointmentBookingsResponseData)(nil),      // 4: prixa.telemedicine.v1.AppointmentBookingsResponseData
	(*PaymentMethodResponseData)(nil),            // 5: prixa.telemedicine.v1.PaymentMethodResponseData
	(*PaymentMethodData)(nil),                    // 6: prixa.telemedicine.v1.PaymentMethodData
	(*AppointmentBookingResponseData)(nil),       // 7: prixa.telemedicine.v1.AppointmentBookingResponseData
	(*AppointmentBookingData)(nil),               // 8: prixa.telemedicine.v1.AppointmentBookingData
	(*GetHospitalRequestData)(nil),               // 9: prixa.telemedicine.v1.GetHospitalRequestData
	(*GetHospitalsRequestData)(nil),              // 10: prixa.telemedicine.v1.GetHospitalsRequestData
	(*GetHospitalsByCoordinateRequestData)(nil),  // 11: prixa.telemedicine.v1.GetHospitalsByCoordinateRequestData
	(*HospitalsByCoordinateResponseData)(nil),    // 12: prixa.telemedicine.v1.HospitalsByCoordinateResponseData
	(*HospitalByCoordinateData)(nil),             // 13: prixa.telemedicine.v1.HospitalByCoordinateData
	(*GetHospitalParamData)(nil),                 // 14: prixa.telemedicine.v1.GetHospitalParamData
	(*HospitalData)(nil),                         // 15: prixa.telemedicine.v1.HospitalData
	(*HospitalsResponseData)(nil),                // 16: prixa.telemedicine.v1.HospitalsResponseData
	(*HospitalResponseData)(nil),                 // 17: prixa.telemedicine.v1.HospitalResponseData
	(*GetDoctorRequestData)(nil),                 // 18: prixa.telemedicine.v1.GetDoctorRequestData
	(*GetDoctorsRequestData)(nil),                // 19: prixa.telemedicine.v1.GetDoctorsRequestData
	(*GetDoctorParamData)(nil),                   // 20: prixa.telemedicine.v1.GetDoctorParamData
	(*DoctorsResponseData)(nil),                  // 21: prixa.telemedicine.v1.DoctorsResponseData
	(*DoctorResponseData)(nil),                   // 22: prixa.telemedicine.v1.DoctorResponseData
	(*DoctorData)(nil),                           // 23: prixa.telemedicine.v1.DoctorData
	(*GetSpecialityRequestData)(nil),             // 24: prixa.telemedicine.v1.GetSpecialityRequestData
	(*GetSpecialitiesRequestData)(nil),           // 25: prixa.telemedicine.v1.GetSpecialitiesRequestData
	(*SpecialityData)(nil),                       // 26: prixa.telemedicine.v1.SpecialityData
	(*SpecialitiesResponseData)(nil),             // 27: prixa.telemedicine.v1.SpecialitiesResponseData
	(*SpecialityResponseData)(nil),               // 28: prixa.telemedicine.v1.SpecialityResponseData
	(*GetAreaRequestData)(nil),                   // 29: prixa.telemedicine.v1.GetAreaRequestData
	(*GetAreasRequestData)(nil),                  // 30: prixa.telemedicine.v1.GetAreasRequestData
	(*AreasResponseData)(nil),                    // 31: prixa.telemedicine.v1.AreasResponseData
	(*AreaResponseData)(nil),                     // 32: prixa.telemedicine.v1.AreaResponseData
	(*AreaData)(nil),                             // 33: prixa.telemedicine.v1.AreaData
	(*ScheduleData)(nil),                         // 34: prixa.telemedicine.v1.ScheduleData
	(*DoctorSchedulesResponseData)(nil),          // 35: prixa.telemedicine.v1.DoctorSchedulesResponseData
	(*DoctorScheduleData)(nil),                   // 36: prixa.telemedicine.v1.DoctorScheduleData
	(*DoctorLeaveHospitalData)(nil),              // 37: prixa.telemedicine.v1.DoctorLeaveHospitalData
	(*GetDoctorSchedulesRequestData)(nil),        // 38: prixa.telemedicine.v1.GetDoctorSchedulesRequestData
	(*GetDoctorTimeSlotRequestData)(nil),         // 39: prixa.telemedicine.v1.GetDoctorTimeSlotRequestData
	(*DoctorTimeSlotsResponseData)(nil),          // 40: prixa.telemedicine.v1.DoctorTimeSlotsResponseData
	(*DoctorTimeSlotData)(nil),                   // 41: prixa.telemedicine.v1.DoctorTimeSlotData
	(*CoordinateData)(nil),                       // 42: prixa.telemedicine.v1.CoordinateData
	(*AddressData)(nil),                          // 43: prixa.telemedicine.v1.AddressData
	(*SourceData)(nil),                           // 44: prixa.telemedicine.v1.SourceData
	(*ContactData)(nil),                          // 45: prixa.telemedicine.v1.ContactData
	(*InitConversationRequest)(nil),              // 46: prixa.telemedicine.v1.InitConversationRequest
	(*InitConversationResponse)(nil),             // 47: prixa.telemedicine.v1.InitConversationResponse
	(*CancelAppointmentBookingRequestData)(nil),  // 48: prixa.telemedicine.v1.CancelAppointmentBookingRequestData
	(*CancelAppointmentBookingResponseData)(nil), // 49: prixa.telemedicine.v1.CancelAppointmentBookingResponseData
	(*CancelAppointmentBookingData)(nil),         // 50: prixa.telemedicine.v1.CancelAppointmentBookingData
	(*timestamp.Timestamp)(nil),                  // 51: google.protobuf.Timestamp
	(*empty.Empty)(nil),                          // 52: google.protobuf.Empty
}
var file_proto_telemedicine_v1_Telemedicine_proto_depIdxs = []int32{
	1,  // 0: prixa.telemedicine.v1.GetAppointmentBookingsRequestData.param:type_name -> prixa.telemedicine.v1.FindAppointmentBookingParamData
	51, // 1: prixa.telemedicine.v1.GetAppointmentBookingsRequestData.fromDate:type_name -> google.protobuf.Timestamp
	51, // 2: prixa.telemedicine.v1.GetAppointmentBookingsRequestData.toDate:type_name -> google.protobuf.Timestamp
	8,  // 3: prixa.telemedicine.v1.AppointmentBookingsResponseData.data:type_name -> prixa.telemedicine.v1.AppointmentBookingData
	6,  // 4: prixa.telemedicine.v1.PaymentMethodResponseData.data:type_name -> prixa.telemedicine.v1.PaymentMethodData
	8,  // 5: prixa.telemedicine.v1.AppointmentBookingResponseData.data:type_name -> prixa.telemedicine.v1.AppointmentBookingData
	23, // 6: prixa.telemedicine.v1.AppointmentBookingData.doctor:type_name -> prixa.telemedicine.v1.DoctorData
	15, // 7: prixa.telemedicine.v1.AppointmentBookingData.hospital:type_name -> prixa.telemedicine.v1.HospitalData
	14, // 8: prixa.telemedicine.v1.GetHospitalsRequestData.param:type_name -> prixa.telemedicine.v1.GetHospitalParamData
	13, // 9: prixa.telemedicine.v1.HospitalsByCoordinateResponseData.data:type_name -> prixa.telemedicine.v1.HospitalByCoordinateData
	15, // 10: prixa.telemedicine.v1.HospitalByCoordinateData.hospital:type_name -> prixa.telemedicine.v1.HospitalData
	43, // 11: prixa.telemedicine.v1.HospitalData.address:type_name -> prixa.telemedicine.v1.AddressData
	45, // 12: prixa.telemedicine.v1.HospitalData.contact:type_name -> prixa.telemedicine.v1.ContactData
	42, // 13: prixa.telemedicine.v1.HospitalData.coordinate:type_name -> prixa.telemedicine.v1.CoordinateData
	26, // 14: prixa.telemedicine.v1.HospitalData.specialities:type_name -> prixa.telemedicine.v1.SpecialityData
	44, // 15: prixa.telemedicine.v1.HospitalData.source:type_name -> prixa.telemedicine.v1.SourceData
	15, // 16: prixa.telemedicine.v1.HospitalsResponseData.data:type_name -> prixa.telemedicine.v1.HospitalData
	15, // 17: prixa.telemedicine.v1.HospitalResponseData.data:type_name -> prixa.telemedicine.v1.HospitalData
	20, // 18: prixa.telemedicine.v1.GetDoctorsRequestData.param:type_name -> prixa.telemedicine.v1.GetDoctorParamData
	23, // 19: prixa.telemedicine.v1.DoctorsResponseData.data:type_name -> prixa.telemedicine.v1.DoctorData
	23, // 20: prixa.telemedicine.v1.DoctorResponseData.data:type_name -> prixa.telemedicine.v1.DoctorData
	26, // 21: prixa.telemedicine.v1.DoctorData.speciality:type_name -> prixa.telemedicine.v1.SpecialityData
	45, // 22: prixa.telemedicine.v1.DoctorData.contact:type_name -> prixa.telemedicine.v1.ContactData
	15, // 23: prixa.telemedicine.v1.DoctorData.hospitals:type_name -> prixa.telemedicine.v1.HospitalData
	44, // 24: prixa.telemedicine.v1.DoctorData.source:type_name -> prixa.telemedicine.v1.SourceData
	44, // 25: prixa.telemedicine.v1.SpecialityData.source:type_name -> prixa.telemedicine.v1.SourceData
	26, // 26: prixa.telemedicine.v1.SpecialitiesResponseData.data:type_name -> prixa.telemedicine.v1.SpecialityData
	26, // 27: prixa.telemedicine.v1.SpecialityResponseData.data:type_name -> prixa.telemedicine.v1.SpecialityData
	33, // 28: prixa.telemedicine.v1.AreasResponseData.data:type_name -> prixa.telemedicine.v1.AreaData
	33, // 29: prixa.telemedicine.v1.AreaResponseData.data:type_name -> prixa.telemedicine.v1.AreaData
	44, // 30: prixa.telemedicine.v1.AreaData.source:type_name -> prixa.telemedicine.v1.SourceData
	23, // 31: prixa.telemedicine.v1.ScheduleData.doctor:type_name -> prixa.telemedicine.v1.DoctorData
	15, // 32: prixa.telemedicine.v1.ScheduleData.hospital:type_name -> prixa.telemedicine.v1.HospitalData
	44, // 33: prixa.telemedicine.v1.ScheduleData.source:type_name -> prixa.telemedicine.v1.SourceData
	36, // 34: prixa.telemedicine.v1.DoctorSchedulesResponseData.data:type_name -> prixa.telemedicine.v1.DoctorScheduleData
	34, // 35: prixa.telemedicine.v1.DoctorScheduleData.schedules:type_name -> prixa.telemedicine.v1.ScheduleData
	37, // 36: prixa.telemedicine.v1.DoctorScheduleData.leaves:type_name -> prixa.telemedicine.v1.DoctorLeaveHospitalData
	41, // 37: prixa.telemedicine.v1.DoctorTimeSlotsResponseData.data:type_name -> prixa.telemedicine.v1.DoctorTimeSlotData
	50, // 38: prixa.telemedicine.v1.CancelAppointmentBookingResponseData.data:type_name -> prixa.telemedicine.v1.CancelAppointmentBookingData
	29, // 39: prixa.telemedicine.v1.TelemedicineService.GetAreaData:input_type -> prixa.telemedicine.v1.GetAreaRequestData
	30, // 40: prixa.telemedicine.v1.TelemedicineService.GetAreasData:input_type -> prixa.telemedicine.v1.GetAreasRequestData
	24, // 41: prixa.telemedicine.v1.TelemedicineService.GetSpecialityData:input_type -> prixa.telemedicine.v1.GetSpecialityRequestData
	25, // 42: prixa.telemedicine.v1.TelemedicineService.GetSpecialitiesData:input_type -> prixa.telemedicine.v1.GetSpecialitiesRequestData
	9,  // 43: prixa.telemedicine.v1.TelemedicineService.GetHospitalData:input_type -> prixa.telemedicine.v1.GetHospitalRequestData
	10, // 44: prixa.telemedicine.v1.TelemedicineService.GetHospitalsData:input_type -> prixa.telemedicine.v1.GetHospitalsRequestData
	11, // 45: prixa.telemedicine.v1.TelemedicineService.GetHospitalsDataByCoordinate:input_type -> prixa.telemedicine.v1.GetHospitalsByCoordinateRequestData
	19, // 46: prixa.telemedicine.v1.TelemedicineService.GetDoctorsData:input_type -> prixa.telemedicine.v1.GetDoctorsRequestData
	18, // 47: prixa.telemedicine.v1.TelemedicineService.GetDoctorData:input_type -> prixa.telemedicine.v1.GetDoctorRequestData
	38, // 48: prixa.telemedicine.v1.TelemedicineService.GetDoctorSchedulesData:input_type -> prixa.telemedicine.v1.GetDoctorSchedulesRequestData
	39, // 49: prixa.telemedicine.v1.TelemedicineService.GetDoctorTimeSlotsData:input_type -> prixa.telemedicine.v1.GetDoctorTimeSlotRequestData
	3,  // 50: prixa.telemedicine.v1.TelemedicineService.PostAppointmentBookingData:input_type -> prixa.telemedicine.v1.PostAppointmentBookingRequestData
	2,  // 51: prixa.telemedicine.v1.TelemedicineService.GetAppointmentBookingData:input_type -> prixa.telemedicine.v1.GetAppointmentBookingRequestData
	0,  // 52: prixa.telemedicine.v1.TelemedicineService.GetAppointmentBookingsData:input_type -> prixa.telemedicine.v1.GetAppointmentBookingsRequestData
	52, // 53: prixa.telemedicine.v1.TelemedicineService.GetValidPaymentMethodsData:input_type -> google.protobuf.Empty
	48, // 54: prixa.telemedicine.v1.TelemedicineService.CancelAppointmentBookingData:input_type -> prixa.telemedicine.v1.CancelAppointmentBookingRequestData
	46, // 55: prixa.telemedicine.v1.TelemedicineService.InitConversation:input_type -> prixa.telemedicine.v1.InitConversationRequest
	32, // 56: prixa.telemedicine.v1.TelemedicineService.GetAreaData:output_type -> prixa.telemedicine.v1.AreaResponseData
	31, // 57: prixa.telemedicine.v1.TelemedicineService.GetAreasData:output_type -> prixa.telemedicine.v1.AreasResponseData
	28, // 58: prixa.telemedicine.v1.TelemedicineService.GetSpecialityData:output_type -> prixa.telemedicine.v1.SpecialityResponseData
	27, // 59: prixa.telemedicine.v1.TelemedicineService.GetSpecialitiesData:output_type -> prixa.telemedicine.v1.SpecialitiesResponseData
	17, // 60: prixa.telemedicine.v1.TelemedicineService.GetHospitalData:output_type -> prixa.telemedicine.v1.HospitalResponseData
	16, // 61: prixa.telemedicine.v1.TelemedicineService.GetHospitalsData:output_type -> prixa.telemedicine.v1.HospitalsResponseData
	12, // 62: prixa.telemedicine.v1.TelemedicineService.GetHospitalsDataByCoordinate:output_type -> prixa.telemedicine.v1.HospitalsByCoordinateResponseData
	21, // 63: prixa.telemedicine.v1.TelemedicineService.GetDoctorsData:output_type -> prixa.telemedicine.v1.DoctorsResponseData
	22, // 64: prixa.telemedicine.v1.TelemedicineService.GetDoctorData:output_type -> prixa.telemedicine.v1.DoctorResponseData
	35, // 65: prixa.telemedicine.v1.TelemedicineService.GetDoctorSchedulesData:output_type -> prixa.telemedicine.v1.DoctorSchedulesResponseData
	40, // 66: prixa.telemedicine.v1.TelemedicineService.GetDoctorTimeSlotsData:output_type -> prixa.telemedicine.v1.DoctorTimeSlotsResponseData
	7,  // 67: prixa.telemedicine.v1.TelemedicineService.PostAppointmentBookingData:output_type -> prixa.telemedicine.v1.AppointmentBookingResponseData
	7,  // 68: prixa.telemedicine.v1.TelemedicineService.GetAppointmentBookingData:output_type -> prixa.telemedicine.v1.AppointmentBookingResponseData
	4,  // 69: prixa.telemedicine.v1.TelemedicineService.GetAppointmentBookingsData:output_type -> prixa.telemedicine.v1.AppointmentBookingsResponseData
	5,  // 70: prixa.telemedicine.v1.TelemedicineService.GetValidPaymentMethodsData:output_type -> prixa.telemedicine.v1.PaymentMethodResponseData
	49, // 71: prixa.telemedicine.v1.TelemedicineService.CancelAppointmentBookingData:output_type -> prixa.telemedicine.v1.CancelAppointmentBookingResponseData
	47, // 72: prixa.telemedicine.v1.TelemedicineService.InitConversation:output_type -> prixa.telemedicine.v1.InitConversationResponse
	56, // [56:73] is the sub-list for method output_type
	39, // [39:56] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_proto_telemedicine_v1_Telemedicine_proto_init() }
func file_proto_telemedicine_v1_Telemedicine_proto_init() {
	if File_proto_telemedicine_v1_Telemedicine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppointmentBookingsRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAppointmentBookingParamData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppointmentBookingRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAppointmentBookingRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentBookingsResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethodResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethodData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentBookingResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentBookingData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHospitalRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHospitalsRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHospitalsByCoordinateRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HospitalsByCoordinateResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HospitalByCoordinateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHospitalParamData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HospitalData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HospitalsResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HospitalResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDoctorRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDoctorsRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDoctorParamData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoctorsResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoctorResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoctorData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpecialityRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpecialitiesRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecialityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecialitiesResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecialityResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAreaRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAreasRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreasResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoctorSchedulesResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoctorScheduleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoctorLeaveHospitalData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDoctorSchedulesRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDoctorTimeSlotRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoctorTimeSlotsResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoctorTimeSlotData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoordinateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitConversationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitConversationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelAppointmentBookingRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelAppointmentBookingResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telemedicine_v1_Telemedicine_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelAppointmentBookingData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_telemedicine_v1_Telemedicine_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   51,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_telemedicine_v1_Telemedicine_proto_goTypes,
		DependencyIndexes: file_proto_telemedicine_v1_Telemedicine_proto_depIdxs,
		MessageInfos:      file_proto_telemedicine_v1_Telemedicine_proto_msgTypes,
	}.Build()
	File_proto_telemedicine_v1_Telemedicine_proto = out.File
	file_proto_telemedicine_v1_Telemedicine_proto_rawDesc = nil
	file_proto_telemedicine_v1_Telemedicine_proto_goTypes = nil
	file_proto_telemedicine_v1_Telemedicine_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TelemedicineServiceClient is the client API for TelemedicineService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TelemedicineServiceClient interface {
	// Get area detail data
	GetAreaData(ctx context.Context, in *GetAreaRequestData, opts ...grpc.CallOption) (*AreaResponseData, error)
	// Get areaa list data
	GetAreasData(ctx context.Context, in *GetAreasRequestData, opts ...grpc.CallOption) (*AreasResponseData, error)
	// Get speciality detail data
	GetSpecialityData(ctx context.Context, in *GetSpecialityRequestData, opts ...grpc.CallOption) (*SpecialityResponseData, error)
	// Get specialities list data
	GetSpecialitiesData(ctx context.Context, in *GetSpecialitiesRequestData, opts ...grpc.CallOption) (*SpecialitiesResponseData, error)
	// Get hostpital detail data
	GetHospitalData(ctx context.Context, in *GetHospitalRequestData, opts ...grpc.CallOption) (*HospitalResponseData, error)
	// Get hospitals list data
	GetHospitalsData(ctx context.Context, in *GetHospitalsRequestData, opts ...grpc.CallOption) (*HospitalsResponseData, error)
	// Get hospitals list data
	GetHospitalsDataByCoordinate(ctx context.Context, in *GetHospitalsByCoordinateRequestData, opts ...grpc.CallOption) (*HospitalsByCoordinateResponseData, error)
	// Get doctors list data
	GetDoctorsData(ctx context.Context, in *GetDoctorsRequestData, opts ...grpc.CallOption) (*DoctorsResponseData, error)
	// Get doctor data
	GetDoctorData(ctx context.Context, in *GetDoctorRequestData, opts ...grpc.CallOption) (*DoctorResponseData, error)
	// Get doctor Schedules data
	GetDoctorSchedulesData(ctx context.Context, in *GetDoctorSchedulesRequestData, opts ...grpc.CallOption) (*DoctorSchedulesResponseData, error)
	// Get doctor timeslot data
	GetDoctorTimeSlotsData(ctx context.Context, in *GetDoctorTimeSlotRequestData, opts ...grpc.CallOption) (*DoctorTimeSlotsResponseData, error)
	// Create new appointment
	PostAppointmentBookingData(ctx context.Context, in *PostAppointmentBookingRequestData, opts ...grpc.CallOption) (*AppointmentBookingResponseData, error)
	// Get appointment booking data
	GetAppointmentBookingData(ctx context.Context, in *GetAppointmentBookingRequestData, opts ...grpc.CallOption) (*AppointmentBookingResponseData, error)
	// Get all booking appointments data
	GetAppointmentBookingsData(ctx context.Context, in *GetAppointmentBookingsRequestData, opts ...grpc.CallOption) (*AppointmentBookingsResponseData, error)
	// Get Valid Payment Method data
	GetValidPaymentMethodsData(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PaymentMethodResponseData, error)
	// Cancel appointment booking data
	CancelAppointmentBookingData(ctx context.Context, in *CancelAppointmentBookingRequestData, opts ...grpc.CallOption) (*CancelAppointmentBookingResponseData, error)
	// InitConversation is initialize conversation between user and doctor
	InitConversation(ctx context.Context, in *InitConversationRequest, opts ...grpc.CallOption) (*InitConversationResponse, error)
}

type telemedicineServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTelemedicineServiceClient(cc grpc.ClientConnInterface) TelemedicineServiceClient {
	return &telemedicineServiceClient{cc}
}

func (c *telemedicineServiceClient) GetAreaData(ctx context.Context, in *GetAreaRequestData, opts ...grpc.CallOption) (*AreaResponseData, error) {
	out := new(AreaResponseData)
	err := c.cc.Invoke(ctx, "/prixa.telemedicine.v1.TelemedicineService/GetAreaData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemedicineServiceClient) GetAreasData(ctx context.Context, in *GetAreasRequestData, opts ...grpc.CallOption) (*AreasResponseData, error) {
	out := new(AreasResponseData)
	err := c.cc.Invoke(ctx, "/prixa.telemedicine.v1.TelemedicineService/GetAreasData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemedicineServiceClient) GetSpecialityData(ctx context.Context, in *GetSpecialityRequestData, opts ...grpc.CallOption) (*SpecialityResponseData, error) {
	out := new(SpecialityResponseData)
	err := c.cc.Invoke(ctx, "/prixa.telemedicine.v1.TelemedicineService/GetSpecialityData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemedicineServiceClient) GetSpecialitiesData(ctx context.Context, in *GetSpecialitiesRequestData, opts ...grpc.CallOption) (*SpecialitiesResponseData, error) {
	out := new(SpecialitiesResponseData)
	err := c.cc.Invoke(ctx, "/prixa.telemedicine.v1.TelemedicineService/GetSpecialitiesData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemedicineServiceClient) GetHospitalData(ctx context.Context, in *GetHospitalRequestData, opts ...grpc.CallOption) (*HospitalResponseData, error) {
	out := new(HospitalResponseData)
	err := c.cc.Invoke(ctx, "/prixa.telemedicine.v1.TelemedicineService/GetHospitalData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemedicineServiceClient) GetHospitalsData(ctx context.Context, in *GetHospitalsRequestData, opts ...grpc.CallOption) (*HospitalsResponseData, error) {
	out := new(HospitalsResponseData)
	err := c.cc.Invoke(ctx, "/prixa.telemedicine.v1.TelemedicineService/GetHospitalsData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemedicineServiceClient) GetHospitalsDataByCoordinate(ctx context.Context, in *GetHospitalsByCoordinateRequestData, opts ...grpc.CallOption) (*HospitalsByCoordinateResponseData, error) {
	out := new(HospitalsByCoordinateResponseData)
	err := c.cc.Invoke(ctx, "/prixa.telemedicine.v1.TelemedicineService/GetHospitalsDataByCoordinate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemedicineServiceClient) GetDoctorsData(ctx context.Context, in *GetDoctorsRequestData, opts ...grpc.CallOption) (*DoctorsResponseData, error) {
	out := new(DoctorsResponseData)
	err := c.cc.Invoke(ctx, "/prixa.telemedicine.v1.TelemedicineService/GetDoctorsData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemedicineServiceClient) GetDoctorData(ctx context.Context, in *GetDoctorRequestData, opts ...grpc.CallOption) (*DoctorResponseData, error) {
	out := new(DoctorResponseData)
	err := c.cc.Invoke(ctx, "/prixa.telemedicine.v1.TelemedicineService/GetDoctorData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemedicineServiceClient) GetDoctorSchedulesData(ctx context.Context, in *GetDoctorSchedulesRequestData, opts ...grpc.CallOption) (*DoctorSchedulesResponseData, error) {
	out := new(DoctorSchedulesResponseData)
	err := c.cc.Invoke(ctx, "/prixa.telemedicine.v1.TelemedicineService/GetDoctorSchedulesData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemedicineServiceClient) GetDoctorTimeSlotsData(ctx context.Context, in *GetDoctorTimeSlotRequestData, opts ...grpc.CallOption) (*DoctorTimeSlotsResponseData, error) {
	out := new(DoctorTimeSlotsResponseData)
	err := c.cc.Invoke(ctx, "/prixa.telemedicine.v1.TelemedicineService/GetDoctorTimeSlotsData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemedicineServiceClient) PostAppointmentBookingData(ctx context.Context, in *PostAppointmentBookingRequestData, opts ...grpc.CallOption) (*AppointmentBookingResponseData, error) {
	out := new(AppointmentBookingResponseData)
	err := c.cc.Invoke(ctx, "/prixa.telemedicine.v1.TelemedicineService/PostAppointmentBookingData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemedicineServiceClient) GetAppointmentBookingData(ctx context.Context, in *GetAppointmentBookingRequestData, opts ...grpc.CallOption) (*AppointmentBookingResponseData, error) {
	out := new(AppointmentBookingResponseData)
	err := c.cc.Invoke(ctx, "/prixa.telemedicine.v1.TelemedicineService/GetAppointmentBookingData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemedicineServiceClient) GetAppointmentBookingsData(ctx context.Context, in *GetAppointmentBookingsRequestData, opts ...grpc.CallOption) (*AppointmentBookingsResponseData, error) {
	out := new(AppointmentBookingsResponseData)
	err := c.cc.Invoke(ctx, "/prixa.telemedicine.v1.TelemedicineService/GetAppointmentBookingsData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemedicineServiceClient) GetValidPaymentMethodsData(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PaymentMethodResponseData, error) {
	out := new(PaymentMethodResponseData)
	err := c.cc.Invoke(ctx, "/prixa.telemedicine.v1.TelemedicineService/GetValidPaymentMethodsData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemedicineServiceClient) CancelAppointmentBookingData(ctx context.Context, in *CancelAppointmentBookingRequestData, opts ...grpc.CallOption) (*CancelAppointmentBookingResponseData, error) {
	out := new(CancelAppointmentBookingResponseData)
	err := c.cc.Invoke(ctx, "/prixa.telemedicine.v1.TelemedicineService/CancelAppointmentBookingData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemedicineServiceClient) InitConversation(ctx context.Context, in *InitConversationRequest, opts ...grpc.CallOption) (*InitConversationResponse, error) {
	out := new(InitConversationResponse)
	err := c.cc.Invoke(ctx, "/prixa.telemedicine.v1.TelemedicineService/InitConversation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TelemedicineServiceServer is the server API for TelemedicineService service.
type TelemedicineServiceServer interface {
	// Get area detail data
	GetAreaData(context.Context, *GetAreaRequestData) (*AreaResponseData, error)
	// Get areaa list data
	GetAreasData(context.Context, *GetAreasRequestData) (*AreasResponseData, error)
	// Get speciality detail data
	GetSpecialityData(context.Context, *GetSpecialityRequestData) (*SpecialityResponseData, error)
	// Get specialities list data
	GetSpecialitiesData(context.Context, *GetSpecialitiesRequestData) (*SpecialitiesResponseData, error)
	// Get hostpital detail data
	GetHospitalData(context.Context, *GetHospitalRequestData) (*HospitalResponseData, error)
	// Get hospitals list data
	GetHospitalsData(context.Context, *GetHospitalsRequestData) (*HospitalsResponseData, error)
	// Get hospitals list data
	GetHospitalsDataByCoordinate(context.Context, *GetHospitalsByCoordinateRequestData) (*HospitalsByCoordinateResponseData, error)
	// Get doctors list data
	GetDoctorsData(context.Context, *GetDoctorsRequestData) (*DoctorsResponseData, error)
	// Get doctor data
	GetDoctorData(context.Context, *GetDoctorRequestData) (*DoctorResponseData, error)
	// Get doctor Schedules data
	GetDoctorSchedulesData(context.Context, *GetDoctorSchedulesRequestData) (*DoctorSchedulesResponseData, error)
	// Get doctor timeslot data
	GetDoctorTimeSlotsData(context.Context, *GetDoctorTimeSlotRequestData) (*DoctorTimeSlotsResponseData, error)
	// Create new appointment
	PostAppointmentBookingData(context.Context, *PostAppointmentBookingRequestData) (*AppointmentBookingResponseData, error)
	// Get appointment booking data
	GetAppointmentBookingData(context.Context, *GetAppointmentBookingRequestData) (*AppointmentBookingResponseData, error)
	// Get all booking appointments data
	GetAppointmentBookingsData(context.Context, *GetAppointmentBookingsRequestData) (*AppointmentBookingsResponseData, error)
	// Get Valid Payment Method data
	GetValidPaymentMethodsData(context.Context, *empty.Empty) (*PaymentMethodResponseData, error)
	// Cancel appointment booking data
	CancelAppointmentBookingData(context.Context, *CancelAppointmentBookingRequestData) (*CancelAppointmentBookingResponseData, error)
	// InitConversation is initialize conversation between user and doctor
	InitConversation(context.Context, *InitConversationRequest) (*InitConversationResponse, error)
}

// UnimplementedTelemedicineServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTelemedicineServiceServer struct {
}

func (*UnimplementedTelemedicineServiceServer) GetAreaData(context.Context, *GetAreaRequestData) (*AreaResponseData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAreaData not implemented")
}
func (*UnimplementedTelemedicineServiceServer) GetAreasData(context.Context, *GetAreasRequestData) (*AreasResponseData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAreasData not implemented")
}
func (*UnimplementedTelemedicineServiceServer) GetSpecialityData(context.Context, *GetSpecialityRequestData) (*SpecialityResponseData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSpecialityData not implemented")
}
func (*UnimplementedTelemedicineServiceServer) GetSpecialitiesData(context.Context, *GetSpecialitiesRequestData) (*SpecialitiesResponseData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSpecialitiesData not implemented")
}
func (*UnimplementedTelemedicineServiceServer) GetHospitalData(context.Context, *GetHospitalRequestData) (*HospitalResponseData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHospitalData not implemented")
}
func (*UnimplementedTelemedicineServiceServer) GetHospitalsData(context.Context, *GetHospitalsRequestData) (*HospitalsResponseData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHospitalsData not implemented")
}
func (*UnimplementedTelemedicineServiceServer) GetHospitalsDataByCoordinate(context.Context, *GetHospitalsByCoordinateRequestData) (*HospitalsByCoordinateResponseData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHospitalsDataByCoordinate not implemented")
}
func (*UnimplementedTelemedicineServiceServer) GetDoctorsData(context.Context, *GetDoctorsRequestData) (*DoctorsResponseData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDoctorsData not implemented")
}
func (*UnimplementedTelemedicineServiceServer) GetDoctorData(context.Context, *GetDoctorRequestData) (*DoctorResponseData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDoctorData not implemented")
}
func (*UnimplementedTelemedicineServiceServer) GetDoctorSchedulesData(context.Context, *GetDoctorSchedulesRequestData) (*DoctorSchedulesResponseData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDoctorSchedulesData not implemented")
}
func (*UnimplementedTelemedicineServiceServer) GetDoctorTimeSlotsData(context.Context, *GetDoctorTimeSlotRequestData) (*DoctorTimeSlotsResponseData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDoctorTimeSlotsData not implemented")
}
func (*UnimplementedTelemedicineServiceServer) PostAppointmentBookingData(context.Context, *PostAppointmentBookingRequestData) (*AppointmentBookingResponseData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostAppointmentBookingData not implemented")
}
func (*UnimplementedTelemedicineServiceServer) GetAppointmentBookingData(context.Context, *GetAppointmentBookingRequestData) (*AppointmentBookingResponseData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppointmentBookingData not implemented")
}
func (*UnimplementedTelemedicineServiceServer) GetAppointmentBookingsData(context.Context, *GetAppointmentBookingsRequestData) (*AppointmentBookingsResponseData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppointmentBookingsData not implemented")
}
func (*UnimplementedTelemedicineServiceServer) GetValidPaymentMethodsData(context.Context, *empty.Empty) (*PaymentMethodResponseData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidPaymentMethodsData not implemented")
}
func (*UnimplementedTelemedicineServiceServer) CancelAppointmentBookingData(context.Context, *CancelAppointmentBookingRequestData) (*CancelAppointmentBookingResponseData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelAppointmentBookingData not implemented")
}
func (*UnimplementedTelemedicineServiceServer) InitConversation(context.Context, *InitConversationRequest) (*InitConversationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitConversation not implemented")
}

func RegisterTelemedicineServiceServer(s *grpc.Server, srv TelemedicineServiceServer) {
	s.RegisterService(&_TelemedicineService_serviceDesc, srv)
}

func _TelemedicineService_GetAreaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAreaRequestData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemedicineServiceServer).GetAreaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.telemedicine.v1.TelemedicineService/GetAreaData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemedicineServiceServer).GetAreaData(ctx, req.(*GetAreaRequestData))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemedicineService_GetAreasData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAreasRequestData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemedicineServiceServer).GetAreasData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.telemedicine.v1.TelemedicineService/GetAreasData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemedicineServiceServer).GetAreasData(ctx, req.(*GetAreasRequestData))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemedicineService_GetSpecialityData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSpecialityRequestData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemedicineServiceServer).GetSpecialityData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.telemedicine.v1.TelemedicineService/GetSpecialityData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemedicineServiceServer).GetSpecialityData(ctx, req.(*GetSpecialityRequestData))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemedicineService_GetSpecialitiesData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSpecialitiesRequestData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemedicineServiceServer).GetSpecialitiesData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.telemedicine.v1.TelemedicineService/GetSpecialitiesData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemedicineServiceServer).GetSpecialitiesData(ctx, req.(*GetSpecialitiesRequestData))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemedicineService_GetHospitalData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHospitalRequestData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemedicineServiceServer).GetHospitalData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.telemedicine.v1.TelemedicineService/GetHospitalData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemedicineServiceServer).GetHospitalData(ctx, req.(*GetHospitalRequestData))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemedicineService_GetHospitalsData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHospitalsRequestData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemedicineServiceServer).GetHospitalsData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.telemedicine.v1.TelemedicineService/GetHospitalsData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemedicineServiceServer).GetHospitalsData(ctx, req.(*GetHospitalsRequestData))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemedicineService_GetHospitalsDataByCoordinate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHospitalsByCoordinateRequestData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemedicineServiceServer).GetHospitalsDataByCoordinate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.telemedicine.v1.TelemedicineService/GetHospitalsDataByCoordinate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemedicineServiceServer).GetHospitalsDataByCoordinate(ctx, req.(*GetHospitalsByCoordinateRequestData))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemedicineService_GetDoctorsData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDoctorsRequestData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemedicineServiceServer).GetDoctorsData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.telemedicine.v1.TelemedicineService/GetDoctorsData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemedicineServiceServer).GetDoctorsData(ctx, req.(*GetDoctorsRequestData))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemedicineService_GetDoctorData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDoctorRequestData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemedicineServiceServer).GetDoctorData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.telemedicine.v1.TelemedicineService/GetDoctorData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemedicineServiceServer).GetDoctorData(ctx, req.(*GetDoctorRequestData))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemedicineService_GetDoctorSchedulesData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDoctorSchedulesRequestData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemedicineServiceServer).GetDoctorSchedulesData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.telemedicine.v1.TelemedicineService/GetDoctorSchedulesData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemedicineServiceServer).GetDoctorSchedulesData(ctx, req.(*GetDoctorSchedulesRequestData))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemedicineService_GetDoctorTimeSlotsData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDoctorTimeSlotRequestData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemedicineServiceServer).GetDoctorTimeSlotsData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.telemedicine.v1.TelemedicineService/GetDoctorTimeSlotsData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemedicineServiceServer).GetDoctorTimeSlotsData(ctx, req.(*GetDoctorTimeSlotRequestData))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemedicineService_PostAppointmentBookingData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostAppointmentBookingRequestData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemedicineServiceServer).PostAppointmentBookingData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.telemedicine.v1.TelemedicineService/PostAppointmentBookingData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemedicineServiceServer).PostAppointmentBookingData(ctx, req.(*PostAppointmentBookingRequestData))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemedicineService_GetAppointmentBookingData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppointmentBookingRequestData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemedicineServiceServer).GetAppointmentBookingData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.telemedicine.v1.TelemedicineService/GetAppointmentBookingData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemedicineServiceServer).GetAppointmentBookingData(ctx, req.(*GetAppointmentBookingRequestData))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemedicineService_GetAppointmentBookingsData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppointmentBookingsRequestData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemedicineServiceServer).GetAppointmentBookingsData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.telemedicine.v1.TelemedicineService/GetAppointmentBookingsData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemedicineServiceServer).GetAppointmentBookingsData(ctx, req.(*GetAppointmentBookingsRequestData))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemedicineService_GetValidPaymentMethodsData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemedicineServiceServer).GetValidPaymentMethodsData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.telemedicine.v1.TelemedicineService/GetValidPaymentMethodsData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemedicineServiceServer).GetValidPaymentMethodsData(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemedicineService_CancelAppointmentBookingData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelAppointmentBookingRequestData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemedicineServiceServer).CancelAppointmentBookingData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.telemedicine.v1.TelemedicineService/CancelAppointmentBookingData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemedicineServiceServer).CancelAppointmentBookingData(ctx, req.(*CancelAppointmentBookingRequestData))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemedicineService_InitConversation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitConversationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemedicineServiceServer).InitConversation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prixa.telemedicine.v1.TelemedicineService/InitConversation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemedicineServiceServer).InitConversation(ctx, req.(*InitConversationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TelemedicineService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "prixa.telemedicine.v1.TelemedicineService",
	HandlerType: (*TelemedicineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAreaData",
			Handler:    _TelemedicineService_GetAreaData_Handler,
		},
		{
			MethodName: "GetAreasData",
			Handler:    _TelemedicineService_GetAreasData_Handler,
		},
		{
			MethodName: "GetSpecialityData",
			Handler:    _TelemedicineService_GetSpecialityData_Handler,
		},
		{
			MethodName: "GetSpecialitiesData",
			Handler:    _TelemedicineService_GetSpecialitiesData_Handler,
		},
		{
			MethodName: "GetHospitalData",
			Handler:    _TelemedicineService_GetHospitalData_Handler,
		},
		{
			MethodName: "GetHospitalsData",
			Handler:    _TelemedicineService_GetHospitalsData_Handler,
		},
		{
			MethodName: "GetHospitalsDataByCoordinate",
			Handler:    _TelemedicineService_GetHospitalsDataByCoordinate_Handler,
		},
		{
			MethodName: "GetDoctorsData",
			Handler:    _TelemedicineService_GetDoctorsData_Handler,
		},
		{
			MethodName: "GetDoctorData",
			Handler:    _TelemedicineService_GetDoctorData_Handler,
		},
		{
			MethodName: "GetDoctorSchedulesData",
			Handler:    _TelemedicineService_GetDoctorSchedulesData_Handler,
		},
		{
			MethodName: "GetDoctorTimeSlotsData",
			Handler:    _TelemedicineService_GetDoctorTimeSlotsData_Handler,
		},
		{
			MethodName: "PostAppointmentBookingData",
			Handler:    _TelemedicineService_PostAppointmentBookingData_Handler,
		},
		{
			MethodName: "GetAppointmentBookingData",
			Handler:    _TelemedicineService_GetAppointmentBookingData_Handler,
		},
		{
			MethodName: "GetAppointmentBookingsData",
			Handler:    _TelemedicineService_GetAppointmentBookingsData_Handler,
		},
		{
			MethodName: "GetValidPaymentMethodsData",
			Handler:    _TelemedicineService_GetValidPaymentMethodsData_Handler,
		},
		{
			MethodName: "CancelAppointmentBookingData",
			Handler:    _TelemedicineService_CancelAppointmentBookingData_Handler,
		},
		{
			MethodName: "InitConversation",
			Handler:    _TelemedicineService_InitConversation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/telemedicine/v1/Telemedicine.proto",
}
